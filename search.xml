<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ts基础学习（一）</title>
      <link href="/2024/05/09/ts%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/05/09/ts%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="ts基础学习（一）"><a href="#ts基础学习（一）" class="headerlink" title="ts基础学习（一）"></a>ts基础学习（一）</h1><p>下周要去实习了，公司现在都是用ts，拟准备重新学习一下，此篇对基础知识点进行记录。</p><p>学习typescript之前，要明白JavaScript的缺点，主要是维护成本高、不报错（如类型不明确）等。微软设计出ts，就是为了“曲线救国”。</p><h3 id="一、基础知识点"><a href="#一、基础知识点" class="headerlink" title="一、基础知识点"></a>一、基础知识点</h3><h4 id="1-1-ts简介"><a href="#1-1-ts简介" class="headerlink" title="1.1 ts简介"></a>1.1 ts简介</h4><p>ts是js的超集，在js的基础上进行了扩展，并添加了类型，从动态类型语言变成静态类型语言。</p><p>注意的是，ts可以在任何支持js的平台执行，但不能被js解析器直接执行。</p><h4 id="1-2-开发环境"><a href="#1-2-开发环境" class="headerlink" title="1.2 开发环境"></a>1.2 开发环境</h4><ol><li>下载安装node.js（<a href="https://nodejs.org/en%EF%BC%89%EF%BC%8C%E4%BD%BF%E7%94%A8node">https://nodejs.org/en），使用node</a> -v看版本。</li><li>使用npm全局安装ts，npm i -g typescript，使用tsc查看。</li><li>新建完ts文件后，编译为js，执行tsc xxx.ts。</li></ol><h4 id="1-3-类型"><a href="#1-3-类型" class="headerlink" title="1.3 类型"></a>1.3 类型</h4><table><thead><tr><th>类型</th><th>例子</th><th>描述</th></tr></thead><tbody><tr><td>number</td><td></td><td></td></tr><tr><td>string</td><td></td><td></td></tr><tr><td>boolean</td><td></td><td></td></tr><tr><td>字面量</td><td>其本身</td><td>限制变量为该字面量的值</td></tr><tr><td>any</td><td>*</td><td>任意类型，相当于关闭类型，<strong>默认</strong></td></tr><tr><td>unknown</td><td>*</td><td>类型安全的any</td></tr><tr><td>void</td><td>空值（undefined）</td><td>没有值（或undefined）</td></tr><tr><td>never</td><td>没有值</td><td>不能是任何值</td></tr><tr><td>object</td><td></td><td></td></tr><tr><td>array</td><td></td><td></td></tr><tr><td>tuple</td><td></td><td>元组，固定长度的数组</td></tr><tr><td>enum</td><td></td><td>枚举</td></tr></tbody></table><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以使用 | 进行联合类型</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="built_in">boolean</span> | <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用 &amp; 表示条件同时</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">str</span>: &#123;<span class="attr">name</span>: <span class="built_in">string</span>&#125; &amp; &#123;<span class="attr">age</span>: <span class="built_in">number</span>&#125;;</span><br><span class="line">str = &#123;<span class="attr">name</span>: <span class="string">&quot;yjl&quot;</span>, <span class="attr">age</span>: <span class="number">24</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//类型断言，告诉解析器变量的实际类型</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    变量 as 类型</span></span><br><span class="line"><span class="comment">    &lt;类型&gt;变量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">s = e <span class="keyword">as</span> <span class="built_in">string</span>;</span><br><span class="line">s = &lt;<span class="built_in">string</span>&gt;e;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类型如果是对象，有两种形式</span></span><br><span class="line"><span class="comment">//第一种直接用object</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="built_in">object</span>;</span><br><span class="line">a = &#123;<span class="attr">name</span>: <span class="string">&quot;yjl&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种是 &#123;&#125; 来指定对象中可以包含哪些属性</span></span><br><span class="line"><span class="comment">//语法：&#123;属性名: 属性值, 属性名: 属性值&#125;</span></span><br><span class="line"><span class="comment">//属性名后面加 ? ，表示属性可选</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">b</span>: &#123;<span class="attr">name</span>: <span class="built_in">string</span>, age?: <span class="built_in">number</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//若不确定属性的数量</span></span><br><span class="line"><span class="comment">//[propName: string]: any 表示任意类型的属性</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: &#123;<span class="attr">name</span>: <span class="built_in">string</span>, [<span class="attr">propName</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置函数结构的类型声明</span></span><br><span class="line"><span class="comment">//语法：(形参: 类型, 形参: 类型) =&gt; 返回值类型</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">d</span>: <span class="function">(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span>;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="comment">//类型[] / Array&lt;类型&gt;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">e</span>: <span class="built_in">string</span>[];</span><br><span class="line"><span class="keyword">let</span> <span class="attr">f</span>: <span class="built_in">number</span>[];</span><br><span class="line"><span class="keyword">let</span> <span class="attr">g</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//元组</span><br><span class="line">//语法：[类型, 类型, 类型]</span><br><span class="line"></span><br><span class="line">//枚举</span><br><span class="line">enum Gender&#123;</span><br><span class="line">    Male = 0,</span><br><span class="line">    Female = 1</span><br><span class="line">&#125;</span><br><span class="line">let h: &#123;name: string, gender: Gender&#125;;</span><br><span class="line">h = &#123;</span><br><span class="line">    name: &quot;yjl&quot;,</span><br><span class="line">    gender: Gender.Male</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//类型的别名</span><br><span class="line">//type 别名 = 属性名</span><br></pre></td></tr></table></figure><h3 id="二、编译与打包"><a href="#二、编译与打包" class="headerlink" title="二、编译与打包"></a>二、编译与打包</h3><ul><li><p><input disabled="" type="checkbox"> 编译：tsc xxx.ts</p></li><li><p><input disabled="" type="checkbox"> 对单个文件进行动态修改编译：tsc xxx.ts -w</p></li></ul><p>但是这样对多个文件进行监视就很麻烦，同时这样会出现报错，提示变量无法重新声明。</p><p>解决方式：在终端执行命令 “ <strong>tsc –init</strong> ” 初始化tsconfig.json 文件</p><ul><li><input disabled="" type="checkbox"> 编译：tsc</li><li><input disabled="" type="checkbox"> 监视：tsc -w</li></ul><h4 id="2-1-tsconfig-json配置文件"><a href="#2-1-tsconfig-json配置文件" class="headerlink" title="2.1 tsconfig.json配置文件"></a>2.1 tsconfig.json配置文件</h4><p>作用：是ts编译器的配置文件，编译器可以根据它的信息来对代码进行编译。</p><ul><li><p>include</p><p>作用：指定哪些ts文件需要被编译</p><p>路径：**表示任意目录</p><p>​            *表示任意文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;include&quot;: [&quot;./src/**/*&quot;],</span><br></pre></td></tr></table></figure></li><li><p>exclude</p><p>作用：指定排除在外的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//默认值</span><br><span class="line">&quot;exclude&quot;: [&quot;node_modules&quot;, &quot;bower_components&quot;, &quot;jspm_packages&quot;],</span><br></pre></td></tr></table></figure></li><li><p>extends</p><p>作用：定义被继承的配置文件</p></li><li><p>files</p><p>作用：指定被编译文件的列表，只有需要编译的文件少时才会用到</p></li><li><p>compilerOptions</p><p>作用：编译器选项</p><table><thead><tr><th>常用属性</th><th>作用</th><th>例子</th></tr></thead><tbody><tr><td>target</td><td>指定ts被编译为ES的版本</td><td>es6、es2106、esnext</td></tr><tr><td>module</td><td>指定要使用的模块化规范</td><td>commonjs、es6</td></tr><tr><td>lib</td><td>项目中要使用的库，在浏览器一般默认</td><td>[“dom”, “webworker”]</td></tr><tr><td>outDir</td><td>指定编译后文件所在目录</td><td>.&#x2F;dist</td></tr><tr><td>outFile</td><td>将全局作用域的代码合并为一个文件</td><td>.&#x2F;dist&#x2F;xxx.js</td></tr><tr><td>allowJs</td><td>是否对js文件进行编译</td><td>false（默认）</td></tr><tr><td>checkJs</td><td>是否检查js是否符合语法规范</td><td>false（默认）</td></tr><tr><td>removeComments</td><td>是否移除注释</td><td>true</td></tr><tr><td>noEmit</td><td>不生成编译后的文件</td><td>false</td></tr><tr><td>noEmitError</td><td>当有错误时，不生成编译后的文件</td><td>true</td></tr><tr><td>alwaysStrict</td><td>设置编译后的文件是否使用严格模式</td><td>false（默认）</td></tr><tr><td>noImplicitAny</td><td>不允许隐式的any类型</td><td>true</td></tr><tr><td>noImplicitThis</td><td>不允许不明确类型的this</td><td>true</td></tr><tr><td>strictNullCheck</td><td>严格检查空值</td><td>true</td></tr><tr><td>strict</td><td>所有严格检查的总开关</td><td>true</td></tr></tbody></table></li></ul><h4 id="2-2-webpack打包ts代码"><a href="#2-2-webpack打包ts代码" class="headerlink" title="2.2 webpack打包ts代码"></a>2.2 webpack打包ts代码</h4><ol><li><p>npm init -y</p><p>首先得生成package.json，配置文件</p></li><li><p>npm i -D webpack webpack-cli typescript ts-loader</p><p>新建webpack.config.js文件，进行相关配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&quot;path&quot;);</span><br><span class="line"></span><br><span class="line">// webpack的配置信息</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &quot;./src/index.ts&quot;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        // 指定打包文件的目录</span><br><span class="line">        path: path.resolve(__dirname, &quot;dist&quot;),</span><br><span class="line">        filename: &quot;bundle.js&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    module: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.ts$/,</span><br><span class="line">                use: &quot;ts-loader&quot;,</span><br><span class="line">                exclude: /node_modules/</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: &quot;development&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>tsc –init来配置tsconfig.json文件</p><p>这里可能会遇到大括号报错问题（Problems loading reference ‘<a href="https://json.schemastore.org/tsconfig">https://json.schemastore.org/tsconfig</a>‘: Unable to load schema from ‘<a href="https://json.schemastore.org/tsconfig">https://json.schemastore.org/tsconfig</a>‘: getaddrinfo ENOTFOUND json.schemastore.org.）</p><p><strong>解决方式</strong>，在tsconfig.json文件中添加一个字段。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,</span><br></pre></td></tr></table></figure><p>在这里面可以对target、module、strict等常规属性进行配置。</p></li><li><p>package.json配置</p><p>在scripts中配置build。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;build&quot;: &quot;webpack&quot;</span><br></pre></td></tr></table></figure><p>以后直接执行npm run build即可打包。</p></li><li><p>自动引入html文件</p><p>此时其实已经完成了webpack打包工作，但是后续引入需要在html文件中手动引入，比较麻烦。</p><p>npm i -D html-webpack-plugin</p><p>此插件可以自动生成html文件，进行相关操作，安装完毕后，需要在webpack.config.js进行对应配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 引入html插件</span><br><span class="line">const HTMLWebpackPlugin = require(&quot;html-webpack-plugin&quot;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new HTMLWebpackPlugin(),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果有对应html模板，可以配置属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 引入html插件</span><br><span class="line">const HTMLWebpackPlugin = require(&quot;html-webpack-plugin&quot;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new HTMLWebpackPlugin(&#123;</span><br><span class="line">            template: &quot;./src/index.html&quot;</span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>动态更新</p><p>为了每次修改完代码，自动构建来展示页面，需要安装webpack-dev-server插件。</p><p>npm i -D webpack-dev-server</p><p>接着在package.json进行配置，在scripts中配置start。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;start&quot;: &quot;webpack serve --open&quot;</span><br></pre></td></tr></table></figure><p>以后直接执行npm run start即可自动更新效果。</p></li><li><p>清空目录</p><p>npm i -D clean-webpack-plugin</p><p>此插件可以自动清空dist目录文件，保证目录文件是最新的，安装完毕后，需要在webpack.config.js进行对应配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 引入插件</span><br><span class="line">const HTMLWebpackPlugin = require(&quot;html-webpack-plugin&quot;);</span><br><span class="line">const &#123; CleanWebpackPlugin &#125; = require(&quot;clean-webpack-plugin&quot;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new HTMLWebpackPlugin(),</span><br><span class="line">        new CleanWebpackPlugin(),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时，当我们需要将ts文件模块化引入时，需要进行相关配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 用来设置引用模块</span><br><span class="line">resolve: &#123;</span><br><span class="line">    extensions: [&quot;.ts&quot;, &quot;.js&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>兼容性</p><p>为了对不同浏览器都可以正常使用，需要考虑兼容性问题。</p><p>npm i -D @babel&#x2F;core @babel&#x2F;preset-env babel-loader core-js</p><p>在webpack.config.js进行对应配置babel-loader</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">        &#123;</span><br><span class="line">            test: /\.ts$/,</span><br><span class="line">            use: [</span><br><span class="line">                &#123;</span><br><span class="line">                    loader: &quot;babel-loader&quot;,</span><br><span class="line">                    // 设置babel</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        // 设置预定义的环境</span><br><span class="line">                        presets: [</span><br><span class="line">                            [</span><br><span class="line">                                // 指定环境的插件</span><br><span class="line">                                &quot;@babel/preset-env&quot;,</span><br><span class="line">                                // 配置信息</span><br><span class="line">                                &#123;</span><br><span class="line">                                    // 要兼容的目标浏览器</span><br><span class="line">                                    targets: &#123;</span><br><span class="line">                                        &quot;chrome&quot;: &quot;58&quot;,</span><br><span class="line">                                        &quot;ie&quot;: &quot;11&quot;</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    // 指定corejs的版本</span><br><span class="line">                                    &quot;corejs&quot;: &quot;3&quot;,</span><br><span class="line">                                    // 使用corejs的方式：usage表示按需加载</span><br><span class="line">                                    &quot;useBuiltIns&quot;: &quot;usage&quot;</span><br><span class="line">                                &#125;</span><br><span class="line">                            ]</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;ts-loader&quot;</span><br><span class="line">            ],</span><br><span class="line">            exclude: /node_modules/,</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li></ol><h3 id="三、面向对象"><a href="#三、面向对象" class="headerlink" title="三、面向对象"></a>三、面向对象</h3><p>js本质是基于对象的语言，也可以简单的说是面向对象（当然我觉得不太准确），简而言之，是围绕对象的，程序之中所有的操作都需要通过对象来完成。</p><p>计算机程序的本质就是对现实事务的抽象，抽象的反义词是具体，事务到了程序中就变成了对象。在程序中所有对象都被分成了两个部分：数据和功能，数据在对象中叫<strong>属性</strong>，功能被称之为<strong>方法</strong>。</p><h4 id="3-1-类"><a href="#3-1-类" class="headerlink" title="3.1 类"></a>3.1 类</h4><p>要创建对象，必须要先定义类，类可以理解为对象的模型。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="comment">//实例属性</span></span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;yjl&quot;</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span> = <span class="number">18</span>;</span><br><span class="line">    <span class="comment">//静态属性</span></span><br><span class="line">    <span class="keyword">static</span> <span class="attr">title</span>: <span class="built_in">string</span> = <span class="string">&quot;人&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性分为实例属性与静态属性（类属性），实例属性需要实例化后才能访问，静态属性直接通过类名.属性即可访问，如上述Peroson.title。readonly是一个只读限制。</p><p>方法同样如此，分为实例方法与类方法，前一个通过构造实例调用，后一个通过直接类名.方法名调用。</p><h4 id="3-2-构造函数和this"><a href="#3-2-构造函数和this" class="headerlink" title="3.2 构造函数和this"></a>3.2 构造函数和this</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> per = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;yjl&quot;</span>, <span class="number">18</span>);</span><br></pre></td></tr></table></figure><h4 id="3-3-继承"><a href="#3-3-继承" class="headerlink" title="3.3 继承"></a>3.3 继承</h4><p>使用继承后，子类会拥有父类所有的属性和方法，实际开发经常会用到，遵循OCP原则。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class Person&#123;</span><br><span class="line">    name: string;</span><br><span class="line">    age: number;</span><br><span class="line">    constructor(name: string, age: number)&#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    sayHello(): void&#123;</span><br><span class="line">        console.log(this.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对Person进行继承，<strong>super</strong>就是对父类的属性和方法进行继承。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Male extends Person&#123;</span><br><span class="line">    gender: string;</span><br><span class="line">    constructor(name: string, age: number, gender: string)&#123;</span><br><span class="line">        super(name, age);</span><br><span class="line">        this.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    sayHello(): void &#123;</span><br><span class="line">        super.sayHello();</span><br><span class="line">    &#125;</span><br><span class="line">    sayGender(): void&#123;</span><br><span class="line">        console.log(this.gender);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们如果不希望Person被实例化，那可以通过<strong>abstract</strong>使其变为抽象类，抽象类可以定义抽象方法，也是使用abstract。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">abstract class Person&#123;</span><br><span class="line">    abstract sayName(): void;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Male extends Person&#123;</span><br><span class="line">    sayName()&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：抽象方法没有方法体，子类必须对抽象方法进行重写。</p><h4 id="3-4-接口"><a href="#3-4-接口" class="headerlink" title="3.4 接口"></a>3.4 接口</h4><p>作用：定义一个类的结构，去定义一个类中应该包含哪些属性，同时接口也可以当类型声明去使用。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> myInterface&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">obj</span>: myInterface = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;yjl&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//跟类型声明一样</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">b</span>: &#123;<span class="attr">name</span>: <span class="built_in">string</span>, age?: <span class="built_in">number</span>&#125;;</span><br><span class="line">b = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;yjl&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过interface可以重复声明，那么实例化的时候就是要包含所有属性，且interface只定义结构，也就是都是类属性和类方法，跟类还是有很大区别的。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> myInterface&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> myInterface&#123;</span><br><span class="line">    <span class="title function_">sayHello</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span> <span class="keyword">implements</span> myInterface&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>，你好！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里看起来用interface定义类，好像比常规定义类的方法比较麻烦。但是用interface定义有限制，所以当满足接口的要求时，可以具有某些特性。</p><h4 id="3-5-属性的封装"><a href="#3-5-属性的封装" class="headerlink" title="3.5 属性的封装"></a>3.5 属性的封装</h4><p>现在属性是在对象中限制的，属性可以被任意的修改，可能会存在安全隐患。因此，可以添加属性的修饰符（public、private、protected）来针对这类问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">class Person&#123;</span><br><span class="line">    protected _name: string = &quot;yjl&quot;;</span><br><span class="line">    private _age: number;</span><br><span class="line">    private _title: string = &quot;人&quot;;</span><br><span class="line">    constructor(name: string, age: number, title: string)&#123;</span><br><span class="line">        this._name = name;</span><br><span class="line">        this._age = age;</span><br><span class="line">        this._title = title;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //第一种</span><br><span class="line">    getTitle()&#123;</span><br><span class="line">        return this._title;</span><br><span class="line">    &#125;</span><br><span class="line">    setTitle(val: string)&#123;</span><br><span class="line">        this._title = val;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //第二种</span><br><span class="line">    get age()&#123;</span><br><span class="line">        return this._age;</span><br><span class="line">    &#125;</span><br><span class="line">    set age(val: number)&#123;</span><br><span class="line">        if(val &gt;= 0)&#123;</span><br><span class="line">            this._age = val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    sayHello(): void&#123;</span><br><span class="line">        console.log(this._name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const per = new Person(&quot;lgy&quot;, 18, &quot;成年人&quot;);</span><br><span class="line">per.setTitle(&quot;学生&quot;);</span><br><span class="line">per.age = 23;</span><br></pre></td></tr></table></figure><p>一旦添加属性修饰符，就需要通过getter、setter方法来对属性进行读取和修改操作，方法有两种，如上所示。</p><p>同时，属性修饰符还有个<strong>语法糖</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class test&#123;</span><br><span class="line">    constructor(public name: string, public age: number)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">const t = new test(&quot;lgy&quot;, 24);</span><br></pre></td></tr></table></figure><p>等价于：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> t = <span class="keyword">new</span> <span class="title function_">test</span>(<span class="string">&quot;lgy&quot;</span>, <span class="number">24</span>);</span><br></pre></td></tr></table></figure><h4 id="3-6-泛型"><a href="#3-6-泛型" class="headerlink" title="3.6 泛型"></a>3.6 泛型</h4><p>当我们遇到类型不明确时候，可以使用泛型，避免使用any关闭类型检查的问题。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> fn&lt;T&gt;(<span class="attr">a</span>: T): T&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方式有两种，第一种：可以直接调用具有泛型的函数，不指定泛型，TS可以自动推断类型；第二种：指定泛型。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> res1 = <span class="title function_">fn</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> res2 = fn&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure><p>当然泛型不仅仅定义一个。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> fn2&lt;T, K&gt;(<span class="attr">a</span>: T, <span class="attr">b</span>: K): T&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fn2&lt;<span class="built_in">number</span>, <span class="built_in">string</span>&gt;(<span class="number">123</span>, <span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure><p>如果要指定泛型的具体情况，可以使用interface配合。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Inter</span>&#123;</span><br><span class="line">    <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> fn3&lt;T <span class="keyword">extends</span> <span class="title class_">Inter</span>&gt;(<span class="attr">a</span>: T): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="property">length</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类中也可以使用泛型。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>&lt;T&gt;&#123;</span><br><span class="line">    <span class="attr">name</span>: T;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: T</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> mc = <span class="keyword">new</span> <span class="title class_">MyClass</span>&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;yjl&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔（三）</title>
      <link href="/2024/04/24/%E9%9A%8F%E7%AC%94%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2024/04/24/%E9%9A%8F%E7%AC%94%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="随笔（三）"><a href="#随笔（三）" class="headerlink" title="随笔（三）"></a>随笔（三）</h1><p>这两天刚结束完美团三面与腾讯三面，明天要开始阿里的面试，面试过程好煎熬，等待结果的过程很痛苦，写点东西平缓一下心情吧。</p><p>这个月，我寻求了现在工作的本科舍友的帮助，进行模拟问答。目的是想知道目前一线大厂对某些领域或者某些功能问题，是如何解决的（包括想法、技术、成本等）。这篇文章就是对某些问题的记录吧，可能今天写不完，后面会进行补充更新。</p><h3 id="一、耗资源的任务处理"><a href="#一、耗资源的任务处理" class="headerlink" title="一、耗资源的任务处理"></a>一、耗资源的任务处理</h3><p>我们在实际开发中，一定会遇到非常耗资源的任务，会阻塞页面渲染，面对这种情况，如何进行处理。有两种解决方案，第一种是webworker，第二种是webassembly。</p><h4 id="web-worker"><a href="#web-worker" class="headerlink" title="web worker"></a>web worker</h4><p>这里可能有人会疑问，JS虽然是单线程的，但不是有事件循环嘛。我们要知道，这是将耗时任务挂起，等到任务队列空闲下来，再去执行该任务，如果遇到非常耗时的任务，可以使用时间切片的方法进行优化，但这种优化，杯水车薪罢了。</p><p>web worker本质就是运行在浏览器背后独立的线程，将任务在此上进行执行，再返回给主线程。</p><p>具体实现过程如下，注意的是执行的任务也就是js文件，不能使用本地文件，必须是网络上的同源文件。实际开发可以放在public下面，当然到时候项目真正上线，可以让后端或者运维直接将文件丢在静态资源下面就行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">    <span class="keyword">let</span> worker = <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;https://xxxx/xxx.js&quot;</span>);</span><br><span class="line">    worker.<span class="title function_">onMessage</span>(<span class="string">&quot;message&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//收到结果，执行相关操作</span></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">... <span class="comment">//相关任务计算</span></span><br><span class="line">self.<span class="title function_">postMessage</span>(res);</span><br></pre></td></tr></table></figure><p>这里还会遇到一个情况，就是模块导入问题，如果执行的任务文件需要引入第三方库或者其他资源文件，就需要此概念。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">importScripts(&quot;xxx.js&quot;) //这个网络地址可以跨域</span><br></pre></td></tr></table></figure><h4 id="webassembly"><a href="#webassembly" class="headerlink" title="webassembly"></a>webassembly</h4><p>这个我还没具体用过，只能说一下思路。将任务执行代码用C、C++编写，然后转换成webassembly，导入到项目js文件中执行，webassembly是个二级制的格式，所以能被直接执行处理，又因为使用比较高效的语言，所以也能极大缩短执行时间。</p><h3 id="二、requestAnimationFrame"><a href="#二、requestAnimationFrame" class="headerlink" title="二、requestAnimationFrame"></a>二、requestAnimationFrame</h3><p>我们在做倒计时秒杀活动的时候，会遇到两个问题，一个是当前时间获取不准确问题，另一个是实现如果用setTimeout&#x2F;setInterval是不精确的。</p><p>这里可能有人会有第一个疑问，不是直接Data.now()或者getTime()不就可以了，但是这个获取的时间是用户设备的时间，而用户设备的时间会存在不精准的情况，我们应该要获取服务端的本地时间。那我们如何获取服务端的时间呢，在发送请求得到响应报文的时候，可以发现header中存在一个字段Date，这个就是服务端时间。接着又会存在一个疑问，我在倒计时的时候，如果不断发起请求获取时间，再完成差值计算，一方面过多的请求次数会耗费服务端性能，另一个方面请求也耗时。面对这种情况，其实我们只需完成一次请求，然后与本地设备时间进行插值比较即可，相当于去了解本地设备时间的误差。</p><p>针对第二个问题，因为定时器会受到事件循环宏微任务的影响，计算不精准，所以可以使用requestAnimationFrame去解决。它本质就是告诉浏览器在下一次页面重绘前，需要执行它里面的回调函数。因为页面刷新频率是固定的，所以不存在上述问题，其次requestAnimationFrame还有CPU节能、减少DOM操作的优点。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">countDown</span>(<span class="params">serverTime</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> stop = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//本地与服务端时间的差值</span></span><br><span class="line">    <span class="keyword">const</span> diffTime = serverTime - <span class="title class_">Data</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">let</span> start = <span class="title class_">Data</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(stop)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">requestAnimationFrame</span>(animate);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start &gt;= <span class="number">100</span>)&#123;</span><br><span class="line">            start += <span class="number">100</span>;</span><br><span class="line">            <span class="keyword">const</span> currentTime = <span class="title class_">Data</span>.<span class="title function_">now</span>() + diffTime;</span><br><span class="line">            <span class="keyword">const</span> duration = targetTime - currentTime;</span><br><span class="line">            <span class="comment">//秒杀时间到</span></span><br><span class="line">            <span class="keyword">if</span>(duration &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                stop = <span class="literal">true</span>;</span><br><span class="line">                duration = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">render</span>(duration);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">animate</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">duration</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> sec = duration / <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">let</span> min = sec / <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">let</span> hour = min / <span class="number">60</span>;</span><br><span class="line">    sec = <span class="title function_">format</span>(sec % <span class="number">60</span>);</span><br><span class="line">    min = <span class="title function_">format</span>(min % <span class="number">60</span>);</span><br><span class="line">    hour = <span class="title function_">format</span>(hour % <span class="number">60</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> html = <span class="string">`<span class="subst">$&#123;hour&#125;</span>:<span class="subst">$&#123;min&#125;</span>:<span class="subst">$&#123;sec&#125;</span>`</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;xxx&quot;</span>).<span class="property">innerHTML</span> = html;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">format</span>(<span class="params">time</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> str = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> str.<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔（二）</title>
      <link href="/2024/03/29/%E9%9A%8F%E7%AC%94%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2024/03/29/%E9%9A%8F%E7%AC%94%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="随笔（二）"><a href="#随笔（二）" class="headerlink" title="随笔（二）"></a>随笔（二）</h1><p>刚刷完一道题，有点疲倦，随便写写关于之前项目与数字资产这个领域的流水账吧。</p><h3 id="一、数字资产VS数据资产"><a href="#一、数字资产VS数据资产" class="headerlink" title="一、数字资产VS数据资产"></a>一、数字资产VS数据资产</h3><p>在聊相关东西之前，这里首先对数据资产和数字资产这两个概念进行区分：</p><ul><li>形式上：数据资产是以数据为载体的信息资源，其价值取决于数据的质量、相关性和分析利用的能力；而数字资产是以数字形式存在的具体资产，本身就有明确的所有权和价值。</li><li>来源上：数据资产是企业业务活动中产生；数字资产是通过特定的创作、发行或交易过程中产生。</li><li>流通上：数据资产大多存在于B2B的企业；数字资产本身就是流通的产品，在B2B企业与个人、C2C个人间都可以流转。</li><li>价值上：数据资产体现在运营与决策上；数字资产体现在其市场交易价格。</li></ul><p>这里可以简单提一嘴数据资产（PS：我在21年做过数据资产的估值分析平台），数据资产的存在前提是大量有价值的数据，并不是所有数据都有价值，而数据价值具有不确定性、稀缺性和多样性。这带来了一个棘手的问题—如何有效甄别海量数据中有价值的数据，如何有效分析并量化数据资产的价值。这当然有许多解决方案，大家可以查阅相关论文，我们当时的解决方案大致是将数据分为五个特征维度，根据估值模型得到数据内在价值，估值模型基于循环神经网络结合EDAAM模型。</p><h3 id="二、数字资产实际运用"><a href="#二、数字资产实际运用" class="headerlink" title="二、数字资产实际运用"></a>二、数字资产实际运用</h3><p>数字资产从出现到流转的整个过程都是虚拟化的，其基于数字化的大背景。</p><p>这里大家要明确区分数字化和电子化，电子化本质是把组织内部的各个业务活动映射到IT信息系统里面，是现实与虚拟的映射，具有强关联性。而数字化不一样，与现实无关，整个生命周期都是虚拟的。举个例子，电子支付是现实的纸币与电子设备中的数据进行映射，两者确立等价关系；而数字人民币由央行确立国家背书，四行+微信支付宝进行发售，整个过程都是虚拟的。</p><h4 id="A-数字化"><a href="#A-数字化" class="headerlink" title="A. 数字化"></a>A. 数字化</h4><p>既然数字资产是基于数字化的，那其实际运用必然促进世界数字化的发展。</p><p>目前世界上可见的数字资产非常多，无论是最近杭州亚运会的奥运火炬、手办等，还是国内开始推行的数字人民币，及盛行已久的比特币，等等这些都是数字资产。我们仔细观察这些，会发现它们有一个共同的特点：确权。这其实非常符合区块链的思维：去中心化、可溯源、安全可靠。</p><p>我们就以数字货币为例，源头为央行发行监管，由央行下属的四大行中农工建和微信支付宝进行流转管理，各个过程全透明和可溯源，同时又依靠国家公信力做背书，安全可靠。我们可以构想一下，当国家推进助农扶贫的时候，数字货币由财政部与银行发起拨款，流转发改委、省市县乡各级政府，最终到个人，每个过程都是透明可溯源的。</p><p>那大家可能会有个疑问，既然数字货币这么美好，为什么国家没有大力推行。其实主要有以下几个原因：一是国内大众负债表过多；二是会带来太多投机者；三是受到国外诸如美国的打压。当然国内正在试行金融沙盒，如在香港地区就在发现数字资产。</p><p>金融科技平台那个项目就是对数字资产从发行、流转、溯源、审查各个部分进行全生命周期管理，而数字资产又有很多形式，如数字货币、票据等。依据区块链确权、可溯源，安全可靠这些特点，平台通过区块链完成项目的模拟实现。</p><h4 id="B-可编程"><a href="#B-可编程" class="headerlink" title="B. 可编程"></a>B. 可编程</h4><p>数字资产除了数字化，其实还有个很重要的特质—可编程，也就是可以通过智能合约实现自动化的交易和管理。智能合约是一种在区块链上执行的计算机程序，可以根据预设的规则和条件执行特定的操作。</p><p>大家可能觉得还是太抽象了，我通过例子来说明其重要价值。大家经常听过开放商跑路，农民工讨薪这类新闻，抑或是在理发店健身房充钱，结果这些机构提桶跑路。面对这类问题，可以通过设置对应的智能合约进行交易管理，也就是“预付款”。</p><p>在A节里面，我已经提到了数字货币这个概念，它是可交易的。那么在给与开发商工程款时候，工程款以数字货币形式发放，工人每完成一个周期的项目，即可获得对应比例的货币。同理，你可以往理发店充值一定金额的数字货币，每理发一次，商家才可真正收到款项。</p><p>这种供应链金融中众多的资产，虽然有许多业务往来，但吞吐量其实并不大，所以还是依据区块链的思维去解决。我们平台还简单做了一个功能版块—模板，因为未来一定是工业物联网时代，未来APP开发需要有对应性的场景模板去解决针对性的问题，因为预设的规则和条件不一样。</p>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔（一）</title>
      <link href="/2024/03/18/%E9%9A%8F%E7%AC%94%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2024/03/18/%E9%9A%8F%E7%AC%94%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="随笔（一）"><a href="#随笔（一）" class="headerlink" title="随笔（一）"></a>随笔（一）</h1><p>最近在看面试八股文，有点无聊，重新回顾了一下生疏的知识点。</p><h3 id="一-websocket"><a href="#一-websocket" class="headerlink" title="一. websocket"></a>一. websocket</h3><h4 id="1-基本介绍与对比"><a href="#1-基本介绍与对比" class="headerlink" title="1. 基本介绍与对比"></a>1. 基本介绍与对比</h4><p>一种基于TCP的应用层协议，浏览器与服务器只需一次握手即可持久连接，进行全双工通讯。</p><p>其实就是客户端通知服务器哪些ID的客户端可以处理事件。</p><p>特点：服务器可以向客户端主动推动消息，客户端也可以主动向服务器推送消息。</p><p>缺点：在服务器端配置比较复杂。</p><p><strong>对比</strong>：短轮询：每隔一段时间就发送请求，浪费资源；长轮询：服务端收到请求，挂起；SSE：使用流信息让服务器向客户端推送信息。</p><h4 id="2-多tab页通信"><a href="#2-多tab页通信" class="headerlink" title="2. 多tab页通信"></a>2. 多tab页通信</h4><p>前端现在常常流行SPA，页面切换基于vue-router，如果逻辑复杂，处理会很麻烦，所以有的功能会利用MPA，那就存在浏览器多tab页通信问题，解决方案如下：</p><ul><li>localStorage：同源共享策略，将需要共享的信息通过setStorage(name, val)的方式存储，获取只需监听store事件即可。【同源共享，但存储大小有限制】</li><li>websocket：websocket最大的特点就是全双工通信，利用此特点，建立第三方服务器，让每个tab页成为客户端，建立通信。当一个tab页进行信息更新，直接send即可，接着让服务器进行共享信息广播（除进行更新的tab页）。【推荐用于跨域共享】</li><li>shareWorker：由于js是单线程的，针对此出现了webWorker，而shareWorker就是其中的一种。机制与websocket一致，但是是非跨域。某个tab页通过postMessage更新信息，其他tab页借onMessage监听共享信息。【兼容性不好】</li><li>cookie+setInterval：古老方法，共享信息存入cookie，但是cookie没有store的监听机制，需要通过如setInterval这种方法模拟轮询机制，进行信息广播。【存储大小有限制，消耗性能】</li></ul><h4 id="3-跨域"><a href="#3-跨域" class="headerlink" title="3. 跨域"></a>3. 跨域</h4><ul><li><p>JSONP：利用script标签不受跨域限制，将带有callback参数的GET请求嵌入。【只支持GET请求】</p></li><li><p>CORS：跨域资源共享机制。实施需要服务器进行相关配置，后端设置响应头Access-Control-Allow-Origin（表示哪些域名可以访问资源）。</p><p>浏览器访问需要判断是简单请求还是非简单请求，条件是：</p><ul><li><input checked="" disabled="" type="checkbox"> GET&#x2F;POST&#x2F;HEAD</li><li><input checked="" disabled="" type="checkbox"> Accept、Accept-Language、Content-Language、Last-Event-ID、Content-Type(application&#x2F;x-www-form-urlencoded、multipart&#x2F;form-data、text&#x2F;plain)</li></ul><p>非简单请求发送之前需要发送预检请求（OPTIONS）进行嗅探，询问服务器可访问范围。</p></li><li><p>代理转发</p><p>原理：同源策略只是浏览器对安全的限制，而服务器之间没有同源策略。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(<span class="function">(<span class="params">&#123;command, mode&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> env = <span class="title function_">loadEnv</span>(mode, process.<span class="title function_">cwd</span>(), <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="title function_">vue</span>()</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">server</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: env.<span class="property">VITE_APP_PORT</span>,</span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">            <span class="attr">target</span>: env.<span class="property">VITE_APP_API_BASEURL</span>,</span><br><span class="line">            <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>本地开发这里就用到代理，浏览器通过配置server，将实际请求转到本地服务，再转发到后端地址。</p><p>最终代码打包会通过如nginx来实现。</p></li><li><p>postMessage</p><p>H5新增的跨文档消息传递机制</p></li><li><p>websocket</p></li></ul><h3 id="二、webpack"><a href="#二、webpack" class="headerlink" title="二、webpack"></a>二、webpack</h3><p>首先得了解页面渲染过程，首先源代码parse AST，接着使用diff对AST进行操作，最后将修改后的AST generate。这里涉及到JS语言是解释性的原因，C&#x2F;Java等都是直接转成二进制文件进行运行。</p><p>如今都是将AST转成字节码进行编译，但是以前都是直接通过解释器对AST进行展示。</p><p><img src="D:\study\pic_bed\pic_bed\img\study\w1.jpeg"></p><p>所以可以在AST—&gt;结果之间加入工具（多一个步骤进行操作）</p><h4 id="1-Babel"><a href="#1-Babel" class="headerlink" title="1. Babel"></a>1. Babel</h4><p>是source to source的转换，常用功能如ES6转ES5、缺失特性处理、源码转换、taro编译等。</p><p>分为三个阶段：</p><ul><li>parse：源代码—&gt;AST</li><li>transform：遍历AST，使用visitor访问节点，进行增删改，返回新的AST</li><li>generate：AST—&gt;目标代码字符串，同时生成sourcemap（源码到目标代码的转换关系），这玩意用来调试</li></ul><p>AST的公共属性有：type、start、end（源码起始位置）、loc、leadingComments、innerComments、trailingComments、extra（额外信息）</p><p><strong>API</strong>：parser、traverse、visitors、generator（含sourcemaps：true）、code-frame（标记代码位置）</p><p>babel-auto-tracker：埋点，可以监控函数执行效率。</p><p><strong>polyfill</strong>：Babel虽然说是对ES6进行5的转化，但这只是语法层面，api层面需要ployfill。</p><h4 id="2-webpack"><a href="#2-webpack" class="headerlink" title="2. webpack"></a>2. webpack</h4><p>使用原因：执行效率，不打包基础支持不够。</p><p>打包方式：</p><ol><li>把js、css、image看作一个模块，用import&#x2F;require引入</li><li>找到entry，通过entry找到依赖文件，将其打包在一块</li><li>将最终的bundle文件拆分，异步按需加载</li><li>一个文件多处引用，也仅打包为一个文件</li><li>多个entry中如果有相同代码，可以用插件抽离</li></ol><p><img src="https://picbed.currysheep.cn/img/study/w2.jpeg"></p><p>具体过程描述一下：首先通过入口文件创建chunk，默认名字叫main；接着进入模块文件（根据entry地址），逐一转换文件代码，具体过程为：chunk中创建模块记录表（模块id也就是文件绝对路径+转换后的代码），每次转换前看一下表有没有转换过，如果没有，就读取文件内容，语法分析形成AST，记录依赖保存到dependencies中，替换依赖函数，将转换的代码放入模块记录表里面。</p><ul><li><p><input checked="" disabled="" type="checkbox"> <strong>loader</strong></p><p>由于webpack只支持JS和JSON，可以通过loader去支持其他文件类型并进行转换。</p><p>loader<strong>本质</strong>是一个函数，接收源文件作为参数，返回转换的结果。</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>babel-loader</td><td>转换ES6、ES7等新语法</td></tr><tr><td>style-loader</td><td>将css通过style标签放进html的head里</td></tr><tr><td>css-loader</td><td>支持.css文件加载解析</td></tr><tr><td>less-loader</td><td>将less转换成css</td></tr><tr><td>ts-loader</td><td>将ts转换成js</td></tr><tr><td>file-loader</td><td>进行图片、字体的打包</td></tr><tr><td>raw-loader</td><td>将文件以字符串导入</td></tr><tr><td>thread-loader</td><td>多进程打包JS、CSS，与happypack一样</td></tr></tbody></table><p>加载解析less</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">        &#123;</span><br><span class="line">            test: /\.less$/,</span><br><span class="line">            use: [&#x27;style-loader&#x27;, &#x27;css-loader&#x27;, &#x27;less-loader&#x27;],</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析ES6</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">        &#123;</span><br><span class="line">            test: /\.js$/,</span><br><span class="line">            use: &#x27;babel-loader&#x27;,</span><br><span class="line">            exclude: /node_modules/   //不在这个文件夹中寻找</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><input checked="" disabled="" type="checkbox"> <strong>版本区别</strong></p><p>在webpack5之前，读取文件需要借助raw-loader、url-loader、file-loader。5就直接通过资源类型模块（asset module type）来替换。</p><table><thead><tr><th>5</th><th>5之前</th><th>作用</th></tr></thead><tbody><tr><td>assert&#x2F;resource</td><td>file-loader</td><td>将文件发送到输出目录</td></tr><tr><td>assert&#x2F;inline</td><td>url-loader</td><td>导出资源data url</td></tr><tr><td>assert&#x2F;source</td><td>raw-loader</td><td>导出文件源代码</td></tr><tr><td>assert</td><td></td><td></td></tr></tbody></table><p>举例子说一下吧，比如图片加载，我们推荐外部引用使用link，内部直接<strong>资源内联</strong>即可。这种切换标准可以在assert中设置图片大小maxsize，如果小于maxsize，直接将图片转为base64进行嵌入img src中。</p></li><li><p><input checked="" disabled="" type="checkbox"> 插件</p><p>作用：用于bundle文件优化，资源管理和环境变量注入，作用在整个构建过程。</p><table><thead><tr><th>常用插件</th><th>作用</th></tr></thead><tbody><tr><td>HtmlWebpackPlugin</td><td>将输出的css&#x2F;js等套入html模板内</td></tr><tr><td>CleanWebpackPlugin</td><td>清理dist目录</td></tr><tr><td>ExtractTextWebpackPlugin</td><td>提取css</td></tr><tr><td>uglifyjsWebpackPlugin</td><td>压缩JS</td></tr><tr><td>CommonsChunkPlugin</td><td>build之后js文件夹里面那些公共js</td></tr></tbody></table></li><li><p><input checked="" disabled="" type="checkbox"> mode</p><p>有三种：development、production、none</p></li></ul><h4 id="3-文件监听"><a href="#3-文件监听" class="headerlink" title="3. 文件监听"></a>3. 文件监听</h4><p>文件监听：源码发生变化，自动重新构建出新的输出文件。</p><p>webpack开启监听方法：</p><ol><li><p>启动webpack，带上–watch，本质就是轮询，所以不建议采用【每次要手动刷新浏览器】</p></li><li><p>配置webpack.config.js中设置watch：true</p><p>此种方法就是HMR热更新，目的是做到不用刷新浏览器而将新变更的模块替换旧模块。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        hot: true,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="D:\study\pic_bed\pic_bed\img\study\w3.jpeg"></p><p>npm run server</p><p>runtime可以理解为js运行环境</p><p>这里可能涉及到<strong>文件指纹</strong>，就是文件名加个base后缀，判断文件是否有改动。</p></li></ol><h4 id="4-代码压缩"><a href="#4-代码压缩" class="headerlink" title="4. 代码压缩"></a>4. 代码压缩</h4><p>针对的主要就是html、css、js文件进行压缩。</p><table><thead><tr><th>插件</th><th>使用</th></tr></thead><tbody><tr><td>Html-minimzer-webpack-plugin</td><td>new HtmlMinimzerPlugin()</td></tr><tr><td>css-minimzer-webpack-plugin</td><td>new CssMinimzerPlugin()</td></tr><tr><td>terser-webpack-plugin</td><td>new TerserPlugin()</td></tr></tbody></table><h4 id="5-小程序适配"><a href="#5-小程序适配" class="headerlink" title="5. 小程序适配"></a>5. 小程序适配</h4><p>这些插件的使用让我想起之前做学校答题小程序多端适配问题，网上的解决方案有什么用em&#x2F;rem，这种开发的时候贼麻烦，其实还是可以使用px完成本地开发，然后用px2rem-loader和lib-flexible（淘宝的库）实现多设备同步。</p><p>但是会遇到一个问题，lib-flexible是个js文件，需要引入，但是webpack打包的时候，script标签是在最后面的，这样无法自动转换（如font-size），影响渲染效果。</p><p>解决方案：使用<strong>资源内联</strong>方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    &lt;%= require(&#x27;raw-loader!babel-loader!../node_moudles/amfe-flexible/index.min.js&#x27;).default %&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>raw-loader以字符串导入文件，babel-loader针对ES6的语法兼容问题。</p><h4 id="6-项目打包"><a href="#6-项目打包" class="headerlink" title="6. 项目打包"></a>6. 项目打包</h4><p>SPA页面渲染是生成AST，在框架加载完毕，才将html&#x2F;css等样式渲染上去，不利于搜索引擎抓包，为此出现了SSR（vue用的是Nuxt.js）等概念，都是为了SEO优化。</p><p>针对MPA打包，原理就是通过遍历入口文件（Object.keys(entryFiles)），对每个页面使用HtmlWebpackPlugin将各页面样式套入模板内，导出入口、数组（存放加载完的页面）。</p><p><strong>DLL</strong>的目的是提前对基础库进行打包，加快build速度，但是实际情况vue-cli等都是关闭的，因为dll需要提前配置，不一定效益成正比。</p><p>这里就需要提到一个问题，我之前的管理平台为啥使用<strong>vite</strong>，而不是webpack进行打包。vite内部借助Esbuild来提升性能（Esbuild是用go开发，多线程打包，代码直接变为机器码），而webpack打包过程中存在众多resolve、loader、parse、transform等，都需要js来操作，而js本身就是解释性语言，需要编译，调试还是单线程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const res = await esbuild.tansform(code, options)    //将code转化为指定格式的内容</span><br><span class="line">esbuild.build(options)   //打包构建</span><br></pre></td></tr></table></figure><p>vite利用Esbuild来进行预构建和内容转换，其中预构建目的是 将非ESM规范代码转换、将第三方依赖内部的多个文件合并为一个，减少http请求数量。</p><p>这个收集第三方依赖的过程：解析模块的路径，触发onResolve hook，判断是第三方依赖还是业务代码，最终所有文件都在 &#x2F;node_modules&#x2F;.vite&#x2F;deps 中。</p><p>vite本质和webpack差不多，第一步createAssets收集和处理文件代码，vite借助esbuild，而webpack里面借助Babel；第二步createGraph创建文件依赖图；第三步bundle，输出bundle.js文件。</p><h3 id="三、项目规范"><a href="#三、项目规范" class="headerlink" title="三、项目规范"></a>三、项目规范</h3><h4 id="1-项目规范"><a href="#1-项目规范" class="headerlink" title="1. 项目规范"></a>1. 项目规范</h4><p>项目的规范还要有测试（单元测试、冒烟测试等）、git规范、changelog文档</p><p>git常用命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line">git status</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#x27;注释&#x27;</span><br><span class="line">git push</span><br><span class="line">git branch -b xxx</span><br><span class="line">git merge &#x27;xxx&#x27;</span><br></pre></td></tr></table></figure><p>解决冲突问题：</p><ol><li><p>两分支修改同一文件：</p><p>当前分支直接修改代码，然后提交即可</p></li><li><p>两分支修改了同一个文件名字：</p><p>本地当前分支上，修改冲突代码，push（记得要沟通）</p></li></ol><h3 id="四、项目优化"><a href="#四、项目优化" class="headerlink" title="四、项目优化"></a>四、项目优化</h3><h4 id="1-vue性能优化"><a href="#1-vue性能优化" class="headerlink" title="1. vue性能优化"></a>1. vue性能优化</h4><ul><li><p>编码角度</p><p>不要把数据都放在data中；</p><p>keep-alive缓存组件；</p><p>尽可能拆分组件，提高复用率；</p><p>key值唯一；</p><p>路由懒加载；</p><p>数据持久化存储尽量用防抖、节流；</p></li><li><p>加载优化</p><p>按需加载；</p><p>内容懒加载；</p><p>图片懒加载；</p></li><li><p>用户体验</p><p>骨架屏；</p></li><li><p>SEO优化</p><p>预渲染；</p><p>服务端ssr；</p></li><li><p>打包优化</p><p>多线程打包（vite）；</p><p>CDN形式加载第三方模块；</p><p>抽离公共文件；</p></li></ul><h4 id="2-首屏优化"><a href="#2-首屏优化" class="headerlink" title="2. 首屏优化"></a>2. 首屏优化</h4><ol><li>使用路由懒加载；</li><li>非首屏组件使用异步组件；</li><li>首屏不重要的组件延迟加载；</li><li>减少首屏js\css文件大小；</li><li>尽量减少DOM的数量和层级；</li><li>精灵图；</li><li>图片懒加载；</li></ol><h4 id="3-vue3优化"><a href="#3-vue3优化" class="headerlink" title="3. vue3优化"></a>3. vue3优化</h4><p>vue3为啥性能比2好，讨论前首先需知道两者区别。</p><ul><li><p>2 VS 3</p><p>2数据劫持用的是object.defineProperty，3用的是proxy，实现对所有对象的监听，无需对数组重写方法；</p><p>3支持framegrament，可以有多个根节点；</p><p>2用的是选项式api，3是组合式api；</p><p>生命周期不同，3直接setup；</p><p>2可以用原型，3是工厂函数；</p></li><li><p>性能优势</p><p>diff算法的优化（加了静态标记）；</p><p>静态提升（对没有变化的元素只渲染一次，后面复用）；</p><p>事件监听缓存；</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js原生复制文本</title>
      <link href="/2024/02/21/js%E5%8E%9F%E7%94%9F%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/"/>
      <url>/2024/02/21/js%E5%8E%9F%E7%94%9F%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="js原生复制文本到剪切板"><a href="#js原生复制文本到剪切板" class="headerlink" title="js原生复制文本到剪切板"></a>js原生复制文本到剪切板</h1><p>功能：实现一键复制文本内容，用于鼠标右键粘贴。</p><p>简单的模板如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> textarea = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;textarea&quot;</span>);</span><br><span class="line">textarea.<span class="property">value</span> = <span class="string">&#x27;要复制的内容&#x27;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(textarea);</span><br><span class="line">textarea.<span class="title function_">select</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(textarea);</span><br></pre></td></tr></table></figure><p>现对其实现思路进行逐行分析。</p><ol><li><p>首先动态创建 textarea 标签</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> textarea = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;textarea&quot;</span>);</span><br></pre></td></tr></table></figure><p>document.createElement()是一个JavaScript DOM方法，用于在文档中创建指定的HTML元素，只需要在JS中调用该方法，并指定要创建的元素的标签名称作为参数。</p><p>创建完成后，即可对其进行相关操作，如添加文本内容、设置属性或将其添加至另一个元素中。比如这里其实设置textarea相关属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//该 textarea 设为 readonly 防止 iOS 下自动唤起键盘，同时将 textarea 移出可视区域</span></span><br><span class="line">textarea.<span class="property">readOnly</span> = <span class="string">&#x27;readonly&#x27;</span>;</span><br><span class="line">textarea.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;absolute&#x27;</span>;</span><br><span class="line">textarea.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&#x27;-9999px&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>将要 copy 的值赋给 textarea 标签的 value 属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">textarea.<span class="property">value</span> = <span class="string">&#x27;要复制的内容&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>将 textarea 插入到 body 中</p><p>document.createElement()是在对象中创建一个对象，要与appendChild() 或 insertBefore()方法联合使用。其中，appendChild() 方法在节点的子节点列表末添加新的子节点；insertBefore() 方法在节点的子节点列表任意位置插入新的节点。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(textarea);</span><br></pre></td></tr></table></figure></li><li><p>选中值并复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">textareaEle.<span class="title function_">select</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>)</span><br></pre></td></tr></table></figure><p>当然实际过程中，如果复制成功要进行相关操作，直接进行判断即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">textarea.<span class="title function_">select</span>()</span><br><span class="line"><span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> (result) &#123;</span><br><span class="line">    <span class="comment">//根据实际进行设计</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>body中将插入的内容移除</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(textarea)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传及相关操作</title>
      <link href="/2024/02/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
      <url>/2024/02/18/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传及相关操作"><a href="#文件上传及相关操作" class="headerlink" title="文件上传及相关操作"></a>文件上传及相关操作</h1><h3 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1. 基础知识"></a>1. 基础知识</h3><p>数据传输到后端分为两种：</p><ul><li>二级制blob传输：formDate传输</li><li>base64传输：转为base64传输</li></ul><p>相关对象：</p><ul><li>files：通过input标签过来的文件</li><li>blob：二进制内容（不可变），包含众多操作方法</li><li>formDate：用于与后端传输的对象</li><li>fileReader：把文件读取为某种形式，如base64、text</li></ul><p>注意：files本质是blob的子类，文件的断点上传、切片都是基于blob。</p><h3 id="2-文件处理"><a href="#2-文件处理" class="headerlink" title="2. 文件处理"></a>2. 文件处理</h3><p>首先给定一个input标签，type属性值必须是file。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot; @change=&quot;fileChange&quot; /&gt;</span><br></pre></td></tr></table></figure><p>接着开始对上传过来的文件进行相关处理。</p><h4 id="2-1-文件属性限制"><a href="#2-1-文件属性限制" class="headerlink" title="2.1 文件属性限制"></a>2.1 文件属性限制</h4><p>当你需要对文件的大小、类型做出限制时，可以直接抓取其对应属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElNotification</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> file = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(file.<span class="property">size</span> &gt; <span class="number">10</span> * <span class="number">24</span> * <span class="number">24</span>)&#123;</span><br><span class="line">        <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;Warning&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;文件不能大于10M！&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(file.<span class="property">type</span> !== <span class="string">&#x27;video/mp4&#x27;</span>)&#123;</span><br><span class="line">        <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;Warning&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;文件格式不正确！&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-文件相关操作"><a href="#2-2-文件相关操作" class="headerlink" title="2.2 文件相关操作"></a>2.2 文件相关操作</h4><ul><li><p><input checked="" disabled="" type="checkbox"> 文件切割</p><p>在1.1提过相关基础知识，file其实本质是blob的子类。那么可以将上传的文件转化成二级制格式进行切割，接着再将切割后的对象转化为file。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> file = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">let</span> _sliceBlob = <span class="keyword">new</span> <span class="title class_">Blob</span>([file]).<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">5000</span>);</span><br><span class="line">        <span class="keyword">let</span> _sliceFile = <span class="keyword">new</span> <span class="title class_">File</span>([_sliceBlob], <span class="string">&quot;test.png&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时完成了文件的切割操作，当然实际没有这部分需求，可以省略。</p></li><li><p><input checked="" disabled="" type="checkbox"> 格式转换</p><p>我们刚才介绍过文件传输到后端有多种格式，如果我们需要按照base64的格式进行传输，那可以进行以下操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fr = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line">fr.<span class="title function_">readAsDataURL</span>(_sliceFile);</span><br><span class="line"><span class="comment">//读取文本</span></span><br><span class="line"><span class="comment">//fr.readAsText(_sliceFile);</span></span><br></pre></td></tr></table></figure></li><li><p><input checked="" disabled="" type="checkbox"> 图片预览、截取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img :src=&quot;imgbase64&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> imgbase64 = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> file = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">let</span> _sliceBlob = <span class="keyword">new</span> <span class="title class_">Blob</span>([file]).<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">5000</span>);</span><br><span class="line">        <span class="keyword">let</span> _sliceFile = <span class="keyword">new</span> <span class="title class_">File</span>([_sliceBlob], <span class="string">&quot;test.png&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> fr = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line">        <span class="comment">//图片预览，只要再设置大小即可进行图片缩略</span></span><br><span class="line">        fr.<span class="title function_">readAsDataURL</span>(file);   </span><br><span class="line">        <span class="comment">//图片截取</span></span><br><span class="line">        <span class="comment">//fr.readAsDataURL(_sliceFile)</span></span><br><span class="line">        fr.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            imgbase64.<span class="property">value</span> = fr.<span class="property">result</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们也能发现，文本预览其实本质也一样，只不过是读取方式不一样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fr.readAsText(file)</span><br></pre></td></tr></table></figure></li><li><p><input checked="" disabled="" type="checkbox"> 文件提交</p><p>文件传输形式其实跟Content-Type有关，主要为两种：</p><pre><code>1. form表单，我们在表单中输入数据，如果不设置enctype，以默认application/x-www-form-urlencoded 方式提交数据；但通常表单上传文件会设置enctype，以multipart/form-data方式。   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> _fileObj = <span class="title function_">ref</span>(&#123;&#125;);</span><br><span class="line"><span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    _fileObj.<span class="property">value</span> = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">submit</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> _formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">    _formData.<span class="title function_">append</span>(<span class="string">&quot;file&quot;</span>, _fileObj);</span><br><span class="line">    axios.<span class="title function_">post</span>(<span class="string">&quot;/xx_url&quot;</span>, _formData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><ol start="2"><li>以字符串形式，通过fileReader以base64或txt进行传递。</li></ol></li></ul><h3 id="3-实际操作"><a href="#3-实际操作" class="headerlink" title="3. 实际操作"></a>3. 实际操作</h3><p>虽然标题是实际操作哈，但是前面展示的代码都可在实际中粘贴直接运行。</p><p>单文件上传前面已经提到了，2.2文件相关操作中文件提交就是单文件上传，非常简单。</p><h4 id="3-1-多文件上传"><a href="#3-1-多文件上传" class="headerlink" title="3.1 多文件上传"></a>3.1 多文件上传</h4><p>很多教程都是说input标签直接加multiple即可，确实可以完成对应功能，但是用户体验感不好，需要进行优化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot; @change=&quot;fileChange&quot; multiple/&gt;</span><br></pre></td></tr></table></figure><p>这其实需要用户按住ctrl进行操作，但是用户更加偏向于一份份上传，所以可以进行改良。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> imgList = <span class="title function_">ref</span>([]);</span><br><span class="line"><span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">files</span>.<span class="property">length</span> &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        imgList.<span class="property">value</span>.<span class="title function_">concat</span>(e.<span class="property">target</span>.<span class="property">files</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        imgList.<span class="property">value</span>.<span class="title function_">push</span>(e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传的时候直接遍历整个imgList，一份份文件上传即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">submit</span>(<span class="params"></span>)&#123;</span><br><span class="line">    imgList.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> _formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">        _formData.<span class="title function_">append</span>(item.<span class="property">name</span> + <span class="string">&quot;file&quot;</span>, item);</span><br><span class="line">        axios.<span class="title function_">post</span>(<span class="string">&quot;/xx_url&quot;</span>, _formData);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们可以看出来，多文件上传本质就是循环的单文件上传。</p><h4 id="3-2-切片上传"><a href="#3-2-切片上传" class="headerlink" title="3.2 切片上传"></a>3.2 切片上传</h4><p>当文件体积过大时，可以使用切片上传，以2M为单位进行切片。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> _fileObj = <span class="title function_">ref</span>(&#123;&#125;);</span><br><span class="line"><span class="keyword">let</span> percentage = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    _fileObj.<span class="property">value</span> = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">submit</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> size = <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">const</span> fileSize = _fileObj.<span class="property">size</span>;</span><br><span class="line">    <span class="keyword">let</span> current = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(current &lt; fileSize)&#123;</span><br><span class="line">        <span class="keyword">let</span> _formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">        _formData.<span class="title function_">append</span>(_fileObj.<span class="property">name</span>, _fileObj.<span class="title function_">slice</span>(current, current + size));</span><br><span class="line">        <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;/xx_url&quot;</span>, _formData);</span><br><span class="line">        precentage = <span class="title class_">Math</span>.<span class="title function_">min</span>((current / fileSize) * <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">        current += size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-断点续传"><a href="#3-3-断点续传" class="headerlink" title="3.3 断点续传"></a>3.3 断点续传</h4><p>我实际没遇到过，这玩意实际应该是后端的活。本质就是切片上传中current存入缓存中，以便下次从current直接开始继续传输。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loaclStorage.setItem(_fileObj.name, current);</span><br></pre></td></tr></table></figure><h4 id="3-4-图片处理"><a href="#3-4-图片处理" class="headerlink" title="3.4 图片处理"></a>3.4 图片处理</h4><p>图片本质也是文件的一种，所以上述文件的操作，图片皆可使用。但是图片上传存在与普通文件不同点，如图片压缩、剪裁等，现进行简要介绍一下概念。</p><ul><li><p>图片压缩</p><p>思路为首先获取文件对象，转成base64，接着创建canvas对象，调用drawImage进行绘制（具体参数分别为对象、横纵坐标、长宽）。最后转化为blob&#x2F;base64，进行压缩。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;fileChange&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">ref</span>=<span class="string">&quot;img1&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgbase64&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> imgbase64 = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 获取图片的真实DOM</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> img1 = <span class="title function_">ref</span>(<span class="literal">null</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">fileChange</span>(<span class="params">e</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 读取</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> file = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 预览</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> fr = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        fr.<span class="title function_">readAsDataURL</span>(file);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        fr.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            imgbase64.<span class="property">value</span> = fr.<span class="property">result</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// VUE异步，也可以使用$nexttick</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 创建canvas对象，且是2d的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">let</span> pressCanvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                pressCanvas.<span class="property">width</span> = img1.<span class="property">value</span>.<span class="property">width</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                pressCanvas.<span class="property">height</span> = img1.<span class="property">value</span>.<span class="property">height</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">let</span> ctx = pressCanvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 绘制图片</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                ctx.<span class="title function_">drawImage</span>(img1.<span class="property">value</span>, <span class="number">0</span>, <span class="number">0</span>, img1.<span class="property">value</span>.<span class="property">width</span>, img1.<span class="property">value</span>.<span class="property">height</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 进行转换，blob还是base64</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 注意，转换对象得是真实DOM</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 参数说明：回调函数，转换类型，压缩值（0-1）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                pressCanvas.<span class="title function_">toBlob</span>(<span class="function">(<span class="params">blob</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="comment">// 调用上传接口</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="keyword">let</span> _formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    _formData.<span class="title function_">append</span>(<span class="string">&quot;file&quot;</span>, blob);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    axios.<span class="title function_">post</span>(<span class="string">&quot;/xx_url&quot;</span>, _formData);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;, <span class="string">&quot;image/jpeg&quot;</span>, <span class="number">0.6</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>截图保存</p><p>截图保存分为两种：</p><ol><li>截取 图片DOM &#x2F; canvasDOM &#x2F; videoDOM，这种只要在绘制完成（drawImage），直接格式转换后直接filesaver即可；</li><li>截取页面上的DOM（div &#x2F; document.body），则要使用 html2canvas；</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>金融科技管理平台</title>
      <link href="/2024/01/16/%E9%87%91%E8%9E%8D%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/"/>
      <url>/2024/01/16/%E9%87%91%E8%9E%8D%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="金融科技管理平台"><a href="#金融科技管理平台" class="headerlink" title="金融科技管理平台"></a>金融科技管理平台</h1><p>2023年9月开始跟随博士参加了研创赛，最终年底拿了研创赛国银，虽然成绩不错，但项目搭建本身个人没吃透。代码的编写，由于本人当时还未系统完成学习，很多功能都是依靠组件库依葫芦画瓢，细节与优化并不完美。</p><p>于是今天决定记录一下，将其中重点功能进行叙述，此笔记仅展示项目的部分代码（非个人项目）。</p><p><img src="https://picbed.currysheep.cn/img/finance/welcome.png"></p><h3 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h3><p>使用vite搭建（<a href="https://www.vitejs.net/guide/#scaffolding-your-first-vite-project%EF%BC%89">https://www.vitejs.net/guide/#scaffolding-your-first-vite-project）</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vite@latest</span><br></pre></td></tr></table></figure><p>然后自己取个项目名字，选择所需开发配套（我这里选择vue、JS即可）。</p><p>接着进入项目，安装所需依赖，即可运行。</p><ol><li><p>为了后期管理方便，在src下新建router(路由文件)、utils(公共文件)、views(页面组件文件)、api（地址管理文件）、components（公共组件文件）及asserts。</p></li><li><p>下载所需依赖包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i axios vue-router vuex</span><br></pre></td></tr></table></figure></li><li><p>路由与main.js文件关联。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createRouter, createWebHashHistory &#125; from &quot;vue-router&quot;;</span><br><span class="line">import Login from &#x27;../views/Login.vue&#x27;;</span><br><span class="line"></span><br><span class="line">const routes = [</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#x27;/&#x27;,</span><br><span class="line">        component: Login</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">const router = createRouter(&#123;</span><br><span class="line">    history: createWebHashHistory(),</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">export default router;</span><br></pre></td></tr></table></figure><p>main.js引用路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import router from &#x27;./router&#x27;</span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>store与main.js文件关联</p><p>vuex：集中式管理状态容器，可以实现任意组件间通信！</p><p>在store文件夹下新建文件index.js，创建大仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createStore &#125; from &quot;vuex&quot;;</span><br><span class="line">import admin from &#x27;./admin&#x27;</span><br><span class="line"></span><br><span class="line">export default createStore(&#123;</span><br><span class="line">    // 存储数据</span><br><span class="line">    state:&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    //计算属性</span><br><span class="line">    getters: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    mutations: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    modules: &#123;</span><br><span class="line">        admin</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>main.js与引用路由方法一样，引入状态管理store。</p></li><li><p>vite相关配置</p><p>这个本质其实就是开发环境与生产环境配置。</p><p>由于我是使用vite搭建环境，所以使用此方法的朋友需要知道vite环境变量和相关模式。至于为何使用vite，就一个字：快！</p><ul><li><input checked="" disabled="" type="checkbox"> vite在 import.meta.env 对象上暴露环境变量；</li><li><input checked="" disabled="" type="checkbox"> 只有以 VITE_ 为前缀的变量才会暴露给经过vite处理的代码（防止泄露到客户端）；</li></ul><p>实际操作中，在自己根目录下新建 .env.development 与 .env.production 文件，在里面配置端口号和接口地址等信息。接着在vite.config.js文件引入loadEnv函数，配置修改如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">export default defineConfig((&#123;command, mode&#125;) =&gt; &#123;</span><br><span class="line">    const env = loadEnv(mode, process.cwd(), &#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      plugins: [</span><br><span class="line">        vue()</span><br><span class="line">      ],</span><br><span class="line">      server: &#123;</span><br><span class="line">        host: &#x27;0.0.0.0&#x27;,</span><br><span class="line">        port: env.VITE_APP_PORT,</span><br><span class="line">        proxy: &#123;</span><br><span class="line">          &#x27;/api&#x27;: &#123;</span><br><span class="line">            target: env.VITE_APP_API_BASEURL,</span><br><span class="line">            changeOrigin: true,</span><br><span class="line">            rewrite: (path) =&gt; path.replace(/^\/api/, &#x27;&#x27;),</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注意，Vite默认不加载.env文件，所以要使用loadEnv函数来指定加载，具体配置可以参考vite官方文档。</p></li><li><p>axios使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></table></figure><p>在官网里面我们可以看到其具体使用方法，直接导入后，axios.get…，这种使用方式虽然简单，但不易于维护，所以一般都需要封装。</p><p>我在utils文件夹下新建一个request的JS文件来封装这个库，下面这些代码可以参考axios官网，包括拦截器等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line"></span><br><span class="line">export function request(config)&#123;</span><br><span class="line">    const instance = axios.create(&#123;</span><br><span class="line">        // `baseURL` 将自动加在 `url` 前面</span><br><span class="line">        baseURL: import.meta.env.VITE_APP_API_BASEURL,</span><br><span class="line">        //指定请求超时的毫秒数</span><br><span class="line">        timeout: 5000,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 添加请求拦截器</span><br><span class="line">    instance.interceptors.request.use(function (config) &#123;</span><br><span class="line">        // 在发送请求之前做些什么(如插入token)</span><br><span class="line">        return config;</span><br><span class="line">    &#125;, function (error) &#123;</span><br><span class="line">        // 对请求错误做些什么</span><br><span class="line">        return Promise.reject(error);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 添加响应拦截器</span><br><span class="line">    instance.interceptors.response.use(function (response) &#123;</span><br><span class="line">        // 2xx 范围内的状态码都会触发该函数。</span><br><span class="line">        // 对响应数据做点什么</span><br><span class="line">        return response;</span><br><span class="line">    &#125;, function (error) &#123;</span><br><span class="line">        // 超出 2xx 范围的状态码都会触发该函数。</span><br><span class="line">        // 对响应错误做点什么</span><br><span class="line">        if(error.response)&#123;</span><br><span class="line">            if(error.status == 500)&#123;</span><br><span class="line">                alert(&#x27;服务器内部发送错误！&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return Promise.reject(error);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 发送一个真正的请求</span><br><span class="line">    return instance(config)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那当我们需要向多个服务器发送多个请求，那只需在此新建多个实例，按需配置对应的拦截器就行，非常方便！</p><p>使用时，直接引用request即可，不过我这里由于功能太复杂，页面太多，我在views文件夹每个页面下各建了一个管理接口方法的文件（service.js），真正规范的应该是在页面同级目录下新建service文件夹，对应管理。</p></li><li><p>element-plus引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus</span><br></pre></td></tr></table></figure><p>main.js引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import ElementPlus from &#x27;element-plus&#x27;</span><br><span class="line">import &#x27;element-plus/dist/index.css&#x27;</span><br><span class="line">createApp(App).use(router).use(store).use(ElementPlus).mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="二、页面开发"><a href="#二、页面开发" class="headerlink" title="二、页面开发"></a>二、页面开发</h3><p>本次页面开发所用组件库如下：</p><ul><li>element-plus（<a href="https://element-plus.gitee.io/zh-CN/%EF%BC%89">https://element-plus.gitee.io/zh-CN/）</a></li><li>echarts（<a href="https://echarts.apache.org/examples/en/index.html%EF%BC%89">https://echarts.apache.org/examples/en/index.html）</a></li></ul><h4 id="2-1-登录注册"><a href="#2-1-登录注册" class="headerlink" title="2.1 登录注册"></a>2.1 登录注册</h4><p>考虑到登录注册所需信息不一样的情况，先使用Tabs组件进行包裹，再使用form表单。</p><p>我这里只展示登录初始写法吧（注册一样的），一些细节问题要着重注意，我放在3.2进行叙述。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tabs v-model=&quot;activeName&quot; class=&quot;demo-tabs&quot;&gt;</span><br><span class="line">    &lt;el-tab-pane label=&quot;账号登录&quot; name=&quot;first&quot;&gt;</span><br><span class="line">        &lt;el-form :model=&quot;form&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;用户名字&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;userName&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;手机号码&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;phone&quot;/&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;用户密码&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;pwd&quot; type=&quot;password&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;权限密码&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;topPwd&quot; type=&quot;password&quot; /&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-form-item&gt;</span><br><span class="line">                &lt;el-button type=&quot;primary&quot; @click=&quot;onSubmit&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button&gt;取消&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">    &lt;/el-tab-pane&gt;</span><br><span class="line">&lt;/el-tabs&gt;</span><br></pre></td></tr></table></figure><p>同时使用reactive动态接收登录信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const form = reactive(&#123;</span><br><span class="line">    userName: &quot;&quot;,</span><br><span class="line">    phone: &quot;&quot;,</span><br><span class="line">    pwd: &quot;&quot;,</span><br><span class="line">    topPwd: &quot;&quot;</span><br><span class="line">&#125;);</span><br><span class="line">const &#123;userName, phone, pwd, topPwd&#125; = toRefs(form);</span><br></pre></td></tr></table></figure><p>我在第一章第6部分已经对axios进行了封装，我这里因为接口太多，我直接在login.vue建立同级的service.js文件，进行请求发送管理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import api from &#x27;../../api&#x27;;</span><br><span class="line">import &#123; request &#125; from &quot;../../utils/request&quot;;</span><br><span class="line"> </span><br><span class="line">export function login(data)&#123;</span><br><span class="line">    if(data.topPwd)&#123;</span><br><span class="line">        const params = &#123;</span><br><span class="line">            &quot;name&quot;: data?.userName,</span><br><span class="line">            &quot;telephone&quot;: data?.phone,</span><br><span class="line">            &quot;password&quot;: data?.pwd,</span><br><span class="line">            &quot;platformPassword&quot;: data?.topPwd</span><br><span class="line">        &#125;</span><br><span class="line">        return request(&#123;</span><br><span class="line">            url: api.admin.Login,</span><br><span class="line">            method: &#x27;POST&#x27;,</span><br><span class="line">            data: params</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就是封装了登录请求的方法，这里注意的点在于我把所有接口信息全部重命名在api文件夹下的admin.js下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export const Login = &#x27;/login&#x27;;</span><br></pre></td></tr></table></figure><p>然后再在index.js文件下统一暴露，方便对url地址进行管理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import * as admin from &#x27;./admin&#x27;</span><br><span class="line">export default&#123;</span><br><span class="line">    admin</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们可以直接对登录请求所获信息进行操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">const onSubmit = () =&gt; &#123;</span><br><span class="line">    const data = &#123;...form&#125;;</span><br><span class="line">    login(data).then(res =&gt; &#123;</span><br><span class="line">        console.log(res)</span><br><span class="line">        if(res.data.code == 200)&#123;</span><br><span class="line">            // 登录成功</span><br><span class="line">            ElMessage.success(&quot;登录成功&quot;);</span><br><span class="line">            // 信息存入缓存</span><br><span class="line">            token.setStore(&quot;type&quot;, res?.data.type);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            ElMessage.warning(res?.data.msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).catch(err =&gt; &#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">        ElMessage.error(&quot;登录失败，请重试！&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">    if(token.getStore(&quot;type&quot;))&#123;</span><br><span class="line">        // 跳转欢迎页</span><br><span class="line">        router.push(&quot;/home&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在实际浏览过程中，会需要将一些个人信息存入浏览器缓存，以便快捷登录、功能权限设置等。</p><p>此系统需要将登录的个人信息中的权限类型存入缓存，我在utils公共文件下新建currentToken.js，对缓存信息写入、获取、清空的操作进行设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">window._ = &#123;</span><br><span class="line">    setStore: (name, content) =&gt; &#123;</span><br><span class="line">        window.localStorage.setItem(name, content);</span><br><span class="line">    &#125;,</span><br><span class="line">    getStore: (name) =&gt; &#123;</span><br><span class="line">        return window.localStorage.getItem(name);</span><br><span class="line">    &#125;,</span><br><span class="line">    clear: () =&gt; &#123;</span><br><span class="line">        window.localStorage.clear();</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">export default window._;</span><br></pre></td></tr></table></figure><p>于是我们每次引用token，使用相关方法即可操作缓存信息。</p><p>此时我们已经完成了登录操作版块！</p><h4 id="2-2-路由配置"><a href="#2-2-路由配置" class="headerlink" title="2.2 路由配置"></a>2.2 路由配置</h4><p>注册登录完成后，信息存入浏览器缓存，接着应该跳转到首页，我们在构建首页前，需要配置各个页面路由。</p><p>我在第一章第3部分完成了路由与main.js的关联，这里只需要将所需新建的页面写入就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">const routes = [</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#x27;/&#x27;,</span><br><span class="line">        component: () =&gt; import(&#x27;../views/Login/Login.vue&#x27;),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#x27;/home&#x27;,</span><br><span class="line">        component: Home,</span><br><span class="line">        children: [</span><br><span class="line">            &#123;</span><br><span class="line">                path: &#x27;&#x27;,</span><br><span class="line">                component: () =&gt; import(&#x27;../views/Welcome/index.vue&#x27;),</span><br><span class="line">                meta: &#123; title: &quot;欢迎&quot;&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                path: &#x27;connect&#x27;,</span><br><span class="line">                component: () =&gt; import(&#x27;../views/Connect/index.vue&#x27;),</span><br><span class="line">                meta: &#123; title: &quot;联邦学习&quot;&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                path: &#x27;digit&#x27;,</span><br><span class="line">                component: () =&gt; import(&#x27;../views/Digit/index.vue&#x27;),</span><br><span class="line">                meta: &#123; title: &quot;协调存储&quot;&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                path: &#x27;template&#x27;,</span><br><span class="line">                component: () =&gt; import(&#x27;../views/Template/index.vue&#x27;),</span><br><span class="line">                meta: &#123; title: &quot;合约模板&quot;&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                path: &#x27;welcome&#x27;,</span><br><span class="line">                component: () =&gt; import(&#x27;../views/Welcome/index.vue&#x27;),</span><br><span class="line">                meta: &#123; title: &quot;欢迎&quot;&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                path: &#x27;opera&#x27;,</span><br><span class="line">                children: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        path: &#x27;index&#x27;,</span><br><span class="line">                        component: () =&gt; import(&#x27;../views/Opera/index.vue&#x27;),</span><br><span class="line">                        meta: &#123; title: &quot;网络拓扑&quot;&#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        path: &#x27;create&#x27;,</span><br><span class="line">                        component: () =&gt; import(&#x27;../views/Opera/Create.vue&#x27;),</span><br><span class="line">                        meta: &#123; title: &quot;网络新建&quot;&#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">                meta: &#123; title: &quot;网络运维&quot;&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">        meta: &#123; title: &quot;系统&quot;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这里有人可能会发现我并未像之前导入Home组件一样一次性导入其他页面组件。我使用了懒加载的方式，匹配到对应路径才会动态导入，这是目前比较推荐的方式，性能更好。</p><p>接着就可以进行路由的相关操作，如路由跳转useRouter。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">const router = useRouter();</span><br><span class="line">const onSubmit = () =&gt; &#123;</span><br><span class="line">    ...</span><br><span class="line">    if(token.getStore(&quot;type&quot;))&#123;</span><br><span class="line">        // 跳转欢迎页</span><br><span class="line">        router.push(&quot;/home&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们需要掌握一些基础信息，路由有两种模式：hash与history。</p><ul><li><p>其中hash的url带#，hash出现在url中，但不出现在HTTP请求中，改变hash，不会重新加载页面。hash路由又称前端路由，是SPA的标配。</p></li><li><p>history模式是传统的路由分发模式，输入一个URL时，服务器会接收这个请求，并解析这个URL，然后做出相应的逻辑处理。如果没有相应的路由或资源，返回404。</p></li></ul><p>前端路由本质：为 SPA 中的各个视图匹配一个唯一标识。这意味着用户前进、后退触发的新内容，都会映射到不同的 URL 上去。（拦截用户的刷新操作，感知 URL 的变化）</p><h4 id="2-3-基础模块"><a href="#2-3-基础模块" class="headerlink" title="2.3 基础模块"></a>2.3 基础模块</h4><p>在构建各页面前，得将基础模块构建完毕，包括侧面导航栏、面包屑等。</p><p>侧面导航栏我直接在组件库menu里面选择了collapse折叠面板。</p><p>具体实现过程如下，参考element-plus组件库中的menu组件，自己选择喜欢的样式，然后选中对应代码复制即可。我这里在views文件夹下新建Home文件夹，将代码copy到index.vue下。</p><p>（考虑到代码过多，我直接截取部分，样式部分我就不展示了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;aside class=&quot;menu&quot;&gt;</span><br><span class="line">    &lt;!-- 左侧菜单栏 --&gt;</span><br><span class="line">    &lt;el-radio-group v-model=&quot;isCollapse&quot; style=&quot;margin-bottom: 20px&quot;&gt;</span><br><span class="line">        &lt;el-radio-button :label=&quot;false&quot;&gt;展开&lt;/el-radio-button&gt;</span><br><span class="line">        &lt;el-radio-button :label=&quot;true&quot;&gt;折叠&lt;/el-radio-button&gt;</span><br><span class="line">    &lt;/el-radio-group&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;el-menu</span><br><span class="line">        default-active=&quot;1&quot;</span><br><span class="line">        class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">        :collapse=&quot;isCollapse&quot;</span><br><span class="line">    &gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;1&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;House /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;template #title&gt;&lt;router-link to=&quot;/home/welcome&quot;&gt;欢迎&lt;/router-link&gt;&lt;/template&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;template #title&gt;&lt;router-link to=&quot;/home/connect&quot;&gt;联邦学习&lt;/router-link&gt;&lt;/template&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-sub-menu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template #title&gt;</span><br><span class="line">                &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;</span><br><span class="line">                &lt;span&gt;碳金融&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-sub-menu index=&quot;3-1&quot;&gt;</span><br><span class="line">                &lt;template #title&gt;&lt;span&gt;碳审核&lt;/span&gt;&lt;/template&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;3-1-1&quot;&gt;新建&lt;/el-menu-item&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;3-1-2&quot;&gt;查询&lt;/el-menu-item&gt;</span><br><span class="line">            &lt;/el-sub-menu&gt;</span><br><span class="line">            &lt;el-sub-menu index=&quot;3-2&quot;&gt;</span><br><span class="line">                &lt;template #title&gt;&lt;span&gt;碳交易&lt;/span&gt;&lt;/template&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;3-2-1&quot;&gt;开户&lt;/el-menu-item&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;3-2-2&quot;&gt;查询&lt;/el-menu-item&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;3-2-3&quot;&gt;转账&lt;/el-menu-item&gt;</span><br><span class="line">                &lt;el-menu-item index=&quot;3-2-4&quot;&gt;记录&lt;/el-menu-item&gt;</span><br><span class="line">            &lt;/el-sub-menu&gt;</span><br><span class="line">        &lt;/el-sub-menu&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">&lt;/aside&gt;</span><br></pre></td></tr></table></figure><p>这里我结合多种组件的特性，主要包括菜单的可折叠（collapse）、多级菜单（sub-menu与menu-item）。</p><p>我这里设置菜单默认是展开的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">const isCollapse = ref(false);</span><br></pre></td></tr></table></figure><p>接着根据菜单栏的对应页面，创建对应的页面组件，同时配置对应的路由（参考2.2），我这里菜单栏的页面跳转使用的是router-link。</p><p>这里值得注意的是在路由配置中，&#x2F; 的使用得极其慎重，在children中，一般不以 &#x2F; 开头。原因在于 &#x2F; 代表的是绝对路径，不以  &#x2F; 开头则是相对路径。</p><p>接着是数据展示，直接使用router-view即可，与router-link进行配对，我们布局设置是左侧菜单栏，右侧数据展示的传统配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;main class=&quot;content&quot;&gt;</span><br><span class="line">    &lt;!-- 数据展示 --&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/main&gt;</span><br></pre></td></tr></table></figure><p>现在大家只需根据个人情况在对应的页面填充即可，但是大家可能还会用到面包屑，所以我进行简要描述一下。</p><p>在路由配置中，我其实已经给每个路由meta中设置了对应的title，此目的在于面包屑展示的前提是获取跳转的页面的数据。</p><p>然后我们在components下新建Breadcrumb文件，route的matched到的是一个数组，里面存的就是获取到的路由对象，面包屑展示的就是每个路由对象（item）的meta的title属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-breadcrumb :separator-icon=&quot;ArrowRight&quot;&gt;</span><br><span class="line">    &lt;el-breadcrumb-item v-for=&quot;(item, index) in $route.matched&quot; :key=&quot;index&quot; :to=&quot;&#123; path: item.path &#125;&quot;&gt;</span><br><span class="line">        &#123;&#123; item.meta.title &#125;&#125;</span><br><span class="line">    &lt;/el-breadcrumb-item&gt;</span><br><span class="line">&lt;/el-breadcrumb&gt;</span><br></pre></td></tr></table></figure><p>这里我们发现面包屑应该是个全局组件，那我们在main.js里面导入组件，同时注册全局组件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 导入面包屑组件</span><br><span class="line">import Breadcrumb from &#x27;./components/Breadcrumb.vue&#x27;;</span><br><span class="line"></span><br><span class="line">// 注册全局组件</span><br><span class="line">app</span><br><span class="line">  .component(&#x27;Breadcrumb&#x27;, Breadcrumb)</span><br><span class="line">  </span><br><span class="line">app.use(router).use(store).use(ElementPlus).mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p>然后哪个页面使用，直接使用即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 使用面包屑组件 --&gt;</span><br><span class="line">&lt;Breadcrumb&gt;&lt;/Breadcrumb&gt;</span><br></pre></td></tr></table></figure><h3 id="三、常见细节"><a href="#三、常见细节" class="headerlink" title="三、常见细节"></a>三、常见细节</h3><h4 id="3-1-样式配置"><a href="#3-1-样式配置" class="headerlink" title="3.1 样式配置"></a>3.1 样式配置</h4><p>虽然大部分样式都是根据个人情况设置，但仍然存在一些必需的样式，我这里将自己所认为的配置进行举例。</p><p>在Home中，配置的样式其实是会影响所有页面的，那直接在这里配置数据的展示情况、菜单栏的属性都是必须的。</p><p>让整个页面的展示使用flex布局，同时考虑到我做的是网页端，还需设置最小宽度。菜单栏需要设置固定宽度、最小高度及加上盒子尺寸。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.container&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    min-width: 1280px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.menu&#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-双token登录"><a href="#3-2-双token登录" class="headerlink" title="3.2 双token登录"></a>3.2 双token登录</h4><p>讲述一下登录逻辑吧，使用的是双token的无感刷新及重新认证思想。不使用基于cookie的session的原因：在特定时间有大量用户访问服务器的时候，服务端可能需要存储大量sessionID，而假如存在多台服务器，一台存储的服务器超载还需转移，同时集群的情况下，负载均衡会造成登录不成功，还会造成跨域相关问题。</p><ol><li>输入相关信息（用户名、密码、类型密码），服务端使用jwt去配置双token（accessToken、refreshToken）；</li><li>前端使用storage去存储token；</li><li>每次请求前，使用请求拦截器对请求头配置Authorization字段；</li><li>服务端收到请求，进行响应，此时还需配置响应拦截器，这里主要判断accessToken是否失效（code是否为4003）进行操作。<ol><li>短token失效，暂存过期请求，长token请求；</li><li>长token有效，服务端重新发送短token及更新的长token，前端再调用过期请求与新短token进行请求；</li><li>长token无效，重新登录。</li></ol></li></ol><p>这部分具体代码涉及前后端，go不是很熟悉，等我不再面试，去公司仓库找一下。</p><h4 id="3-3-图表使用"><a href="#3-3-图表使用" class="headerlink" title="3.3 图表使用"></a>3.3 图表使用</h4><p>这里我使用的是echarts，大家有其他喜欢的也可以，本人使用echarts原因主要胜在其“悠久”。</p><p>大家直接去它模板库选择自己合适的就行（<a href="https://echarts.apache.org/examples/en/index.html%EF%BC%89%EF%BC%8C%E6%88%91%E8%BF%99%E9%87%8C%E6%AF%94%E5%A6%82%E5%9C%A8%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E7%89%88%E5%9D%97%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E6%97%B6%E9%9C%80%E8%A6%81%E5%B1%95%E7%A4%BA%E5%90%84%E9%98%B6%E6%AE%B5%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%89%80%E4%BB%A5%E7%9B%B4%E6%8E%A5%E9%87%87%E7%94%A8%E4%BA%86%E5%9F%BA%E7%A1%80%E7%9A%84%E6%8A%98%E7%BA%BF%E5%9B%BE%E3%80%82">https://echarts.apache.org/examples/en/index.html），我这里比如在联邦学习版块训练数据时需要展示各阶段训练数据，所以直接采用了基础的折线图。</a></p><p>使用前先安装相关库，注意这是vue3。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts vue-echarts</span><br></pre></td></tr></table></figure><p>接着我使用了全局引入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//引入ECharts</span><br><span class="line">import VueECharts from &#x27;vue-echarts&#x27;</span><br><span class="line">import &#x27;echarts&#x27;</span><br><span class="line"></span><br><span class="line">// 注册全局组件</span><br><span class="line">app</span><br><span class="line">  .component(&#x27;v-chart&#x27;, VueECharts)</span><br></pre></td></tr></table></figure><p>虽然折线图只在平台一个地方使用，但是为了后续的模块化管理，我还是和面包屑一样单独做成一个组件。</p><p>这里我使用了vue3新的组件数据传递方式<strong>defineProps</strong>，用于在子组件中定义接收哪些父组件的props。当父组件（联邦学习版块）的props发生变化时，子组件（折线图）也会随之响应。</p><p>在子组件声明该组件需要接收的props，它需要传递一个包含props字段的对象，每个字段表示该props的默认值和类型等信息。同时我定义了一个可以修改数据的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;v-chart autoresize ref=&quot;charts&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import &#123;defineProps, ref, onMounted, defineExpose&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">    const charts = ref()</span><br><span class="line">    const props = defineProps(&#123;</span><br><span class="line">        option: &#123;</span><br><span class="line">            type: Object</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    const setOption = (option) =&gt; &#123;</span><br><span class="line">        charts.value.setOption(&#123;</span><br><span class="line">            tooltip: &#123;</span><br><span class="line">                trigger: &#x27;axis&#x27;,</span><br><span class="line">                axisPointer: &#123;</span><br><span class="line">                    type: &#x27;shadow&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            grid: &#123;</span><br><span class="line">                left: &#x27;3%&#x27;,</span><br><span class="line">                right: &#x27;4%&#x27;,</span><br><span class="line">                bottom: &#x27;3%&#x27;,</span><br><span class="line">                containLabel: true</span><br><span class="line">            &#125;,</span><br><span class="line">            xAxis: [</span><br><span class="line">                &#123;</span><br><span class="line">                    type: &#x27;category&#x27;,</span><br><span class="line">                    data: option.colChartsName,</span><br><span class="line">                    axisTick: &#123;</span><br><span class="line">                        alignWithLabel: true</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            yAxis: [</span><br><span class="line">                &#123;</span><br><span class="line">                    type: &#x27;value&#x27;,</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            series: [</span><br><span class="line">                &#123;</span><br><span class="line">                    // name: option.RoundNumber,</span><br><span class="line">                    type: &#x27;line&#x27;,</span><br><span class="line">                    data: option.colChartsData</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">        setOption(props.option)</span><br><span class="line">    &#125;)</span><br><span class="line">    //导出方法给父组件使用</span><br><span class="line">    defineExpose(&#123;</span><br><span class="line">        setOption</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这里需要在main.js里面导入组件，同时注册全局组件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 导入折线图</span><br><span class="line">import ELine from &#x27;./components/ELine.vue&#x27;;</span><br><span class="line"></span><br><span class="line">// 注册全局组件</span><br><span class="line">app</span><br><span class="line">  .component(&#x27;ELine&#x27;, ELine)</span><br></pre></td></tr></table></figure><p>接着直接在父组件使用即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;ELine :option=&quot;option&quot; ref=&quot;charts&quot;&gt;&lt;/ELine&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">    let roundNum = new Array();</span><br><span class="line">    let acc = new Array();</span><br><span class="line">    const charts = ref();</span><br><span class="line">    const option = ref(&#123;</span><br><span class="line">        colChartsName: [],</span><br><span class="line">        colChartsData: [],</span><br><span class="line">        colUnitName: &quot;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    const refresh = () =&gt; &#123;</span><br><span class="line">        roundNum = [];</span><br><span class="line">        acc.splice(0);</span><br><span class="line">        getResult().then((res) =&gt; &#123;</span><br><span class="line">            for(let i = 0; i &lt; res?.data.result.length; i++)&#123;</span><br><span class="line">                roundNum.push(res.data.result[i].RoundNumber);</span><br><span class="line">                acc.push(res.data.result[i].Accuracy * 100);</span><br><span class="line">            &#125;</span><br><span class="line">            option.value.colChartsName = roundNum;</span><br><span class="line">            option.value.colChartsData = acc;</span><br><span class="line">            //调用子组件的方法</span><br><span class="line">            charts.value.setOption(option.value)     </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-4-粘贴复制"><a href="#3-4-粘贴复制" class="headerlink" title="3.4 粘贴复制"></a>3.4 粘贴复制</h4><p>我们经常在一些地方见到对某些信息的展示与copy功能，此平台在合约模板版块对各种合约的代码提供copy功能。主要流程是用户点击按钮，展示相关代码，用户可以选择copy，成功复制后右上角出现信息弹窗。我在这里简述一下关键实现步骤。</p><p>首先各合约简要信息使用el-card进行展示，点击按钮后，信息弹出使用el-dialog。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;!-- dialogVisible用于控制弹窗的关闭与否 --&gt;</span><br><span class="line">    &lt;el-dialog</span><br><span class="line">        v-model=&quot;dialogVisible&quot;</span><br><span class="line">        title=&quot;Code&quot;</span><br><span class="line">        width=&quot;90%&quot;</span><br><span class="line">        :before-close=&quot;handleClose&quot;</span><br><span class="line">    &gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123;msgCode&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;template #footer&gt;</span><br><span class="line">            &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">                &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button plain type=&quot;primary&quot; @click=&quot;copyCode&quot;&gt;</span><br><span class="line">                    复制</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>其中，这个copyCode方法很重要，完成对信息的copy，具体解释看我博客相关对应文档，里面有对逐行代码分析。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const copyCode = () =&gt; &#123;</span><br><span class="line">    dialogVisible.value = false;</span><br><span class="line">    const textarea = document.createElement(&quot;textarea&quot;);</span><br><span class="line">    textarea.value = msgCode.value;</span><br><span class="line">    document.body.appendChild(textarea);</span><br><span class="line">    textarea.select();</span><br><span class="line">    document.execCommand(&#x27;copy&#x27;)</span><br><span class="line">    document.body.removeChild(textarea);</span><br><span class="line">    ElNotification(&#123;</span><br><span class="line">        title: &#x27;Info&#x27;,</span><br><span class="line">        message: &#x27;已成功复制到粘贴板&#x27;,</span><br><span class="line">        type: &#x27;info&#x27;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ElNotification是element-plus的一个组件。</p><h4 id="3-5-首屏优化"><a href="#3-5-首屏优化" class="headerlink" title="3.5 首屏优化"></a>3.5 首屏优化</h4><p>首屏速度是用户体验的最关键一环，而首屏速度最大决定因素是资源的加载速度。</p><p>资源加载速度 &#x3D; 资源大小 + 网速。</p><p>所以我们要考虑资源大小部分的影响方面：</p><ol><li>压缩</li><li>部分代码切割出来做异步加载</li><li>代码尽量精简</li></ol><p>这里我们主要针对的是第二个。</p><h5 id="3-5-1-页面加载"><a href="#3-5-1-页面加载" class="headerlink" title="3.5.1 页面加载"></a>3.5.1 页面加载</h5><p>因此我们需要知道页面加载的方式有哪些：</p><ol><li><p>prefetch加载</p><p>优先加载没有标记prefetch的link资源。</p><p>用户体验感很好，但是会浪费一定的带宽。</p></li><li><p>script加载</p><p>充分按需引入，用到再加载，不用永不加载，充分节省带宽，但是因为切换要等待，我认为体验感不好，没有采用这种。但也介绍一下吧，关闭全局prefetch。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    chainWebpack: config =&gt; &#123;</span><br><span class="line">        config.plugins.delete(&#x27;prefetch&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时已经全局关闭，但是如果你要部分使用此功能，在对应部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpackPrefetch: true</span><br></pre></td></tr></table></figure><p>优化经验：首先使用按需引入的版本，接着在组件mounted阶段再引入库或者使用时引入，我按照我自己项目的操作来举个例子。</p><p>因为我的UI库使用的是element-plus，在合约模板这个版块，我只要用到2个组件，就可以只引用这两个。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &#123; ElMessageBox, ElNotification &#125; from &#x27;element-plus&#x27;;</span><br></pre></td></tr></table></figure><p>当然这个例子不是很恰当，因为官方网站提供了按需引入的方法。但是注意这种方法很有必要，因为在Vite项目中，Tree-shaking是默认启用的。</p></li><li><p>页面闪动</p><p>初始化时代码还没有解析的情况下，可能会出现花屏现象，当然出现时间极其短暂，但也需要解决。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[v-cloak] &#123; display: none;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="3-5-2-图片懒加载"><a href="#3-5-2-图片懒加载" class="headerlink" title="3.5.2 图片懒加载"></a>3.5.2 图片懒加载</h5><p>这里我手动造了轮子，基于浏览器的原生构造函数交叉观察器intersectionObserve实现。</p><p>具体使用这里进行介绍一下，初始化接收两个参数，一个是回调函数，对观察的img对象数组entries进行操作，一旦进入可视区域，替换src，另一个是options，包含被观察的元素root、rootMagin等。具体代码见我“交叉观察器”的文章。</p><h4 id="3-6-组件缓存"><a href="#3-6-组件缓存" class="headerlink" title="3.6 组件缓存"></a>3.6 组件缓存</h4><p>当我们来回切换页面时，该页面可能需要不断向后台请求数据，从而渲染页面，而多次渲染会带来性能问题。因此我们需要进行页面状态的保存，这时候我们需要区分页面组件是否卸载。</p><p>比如我登录的时候，登录的组件在我登录后，会卸载掉，但是我登录后，我采用的是SPA，Home组件并不会卸载。而我在网络运维\网络拓扑页面访问时，每次都需要获取所有的网络信息，如果不进行缓存，非常影响用户体验。</p><p>解决上述问题的方案其实很简单，在Home中对数据展示外层套一个<keep-alive></keep-alive>即可，但是vue-router的版本一般是4.x以上的都改用了新的写法，用slot插槽进行配合。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;main class=&quot;content&quot;&gt;</span><br><span class="line">    &lt;!-- 数据展示 --&gt;</span><br><span class="line">    &lt;router-view v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">        &lt;keep-alive&gt;</span><br><span class="line">            &lt;component :is=&quot;Component&quot; /&gt;</span><br><span class="line">        &lt;/keep-alive&gt;</span><br><span class="line">    &lt;/router-view&gt;</span><br><span class="line">&lt;/main&gt;</span><br></pre></td></tr></table></figure><h4 id="3-7-前进后退"><a href="#3-7-前进后退" class="headerlink" title="3.7 前进后退"></a>3.7 前进后退</h4><p>由于单页应用在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能，所有的页面切换需要自己建立堆栈管理。不过项目当时未有这个需求，所以暂时没做。</p><h4 id="3-8-SEO"><a href="#3-8-SEO" class="headerlink" title="3.8 SEO"></a>3.8 SEO</h4><p>因为VUE框架一般都是使用SPA，因此在SEO上由突然弱势（SEO条件之一是需要在MPA上），因此只能针对这个做尽可能的优化，但是没有彻底的解决方案。</p><ul><li><p>预渲染</p><ul><li><p>使用prerender-spa-plugin，解决页面单一情况；</p></li><li><p>使用vue-meta-info，解决title、描述、关键字；</p></li></ul><p>缺点：不适合众多页面需要SEO的需求；title、描述、关键字只能是静态的。</p></li><li><p>SSR</p><ul><li>使用nuxt.js扩展</li><li>使用asyncData请求数据</li><li>具体打包过程：首先npm run build，接着把四个文件（.nuxt、nuxt.config.js、package.json、static）拷贝到服务器，有node环境的服务器安装依赖运行npm run start，最后nginx配置。</li></ul></li></ul><h3 id="四、对应处理"><a href="#四、对应处理" class="headerlink" title="四、对应处理"></a>四、对应处理</h3><h4 id="4-1-滚动处理"><a href="#4-1-滚动处理" class="headerlink" title="4.1 滚动处理"></a>4.1 滚动处理</h4><p>在网络运维&#x2F;网络拓扑版块，首先要展示所有网络信息，后针对单条信息查询节点、状态信息渲染不同的模块。但是网络信息数据量常常有几百条，而每个网络对应的节点等又是几十条信息，测试的时候发现有两个瑕疵：一是渲染速度下降，内容展示慢（平均渲染区间1.72~1.8s）；二是如果有操作（编辑、删除等），操作卡顿，渲染更新也慢。虽然1s多还可以，但是我们为了比赛现场展示效果，还是需要进行处理。</p><p>针对这个问题，网上大部分解决方案是写组件，用插槽插入。但是这改变原有父子结构，而且我本身功能已经完成了，再次修改，工作量极大，同时封装成组件，自己要写的代码还是很多。这时候可以发现自定义指令是个好的解决方案，现来阐述一下具体细节。</p><p>先讲一下思路吧，解决这个无限滚动，有两种方案：</p><ol><li>触底，获取滚动元素后，进行滚动监听，监听的是触底（首次加载K条数据，每次触底，再多获取K条数据），数据形式为0<del>K，0</del>2K，0~3K。此方法初次渲染确实无卡顿，但是随着往下滚动，速度会越来越慢。</li><li>动态截取，随着滚动，实时计算截取点（start、over），始终保证数据在一个固定值。每次都是渲染固定量的数据，保证渲染质量。</li></ol><p>首先新建文件v-myscroll文件，用以存放自定义指令，当然也可以直接在main.js直接写，我觉得不美观。start、over计算涉及以下几个值：scrrollTop视口到滚动顶部的高度、clientHeight窗口的高度、scrollHeight可滚动的内容总高度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">let num = ref(0);</span><br><span class="line">let start = ref(0);</span><br><span class="line">let over = ref(15);</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    install(app) &#123;</span><br><span class="line">        app.directive(&#x27;myscroll&#x27;, &#123;</span><br><span class="line">            //完成初始化工作（其实就是指令用在table上会调用一次），其中binding参数是指令接收的数据</span><br><span class="line">            mounted(el, binding) &#123;</span><br><span class="line">                //获取滚动元素，并做滚动监听</span><br><span class="line">                let target = el.querySelector(&#x27;.el-scrollbar__wrap&#x27;);</span><br><span class="line">                target.addEventListener(&#x27;scroll&#x27;, () =&gt; &#123;  </span><br><span class="line">                    //这加减5的含义是为了做缓冲，滚动更加流畅</span><br><span class="line">                    start.value = Math.ceil(Math.max(target.scrollTop / 39.67 - 5, 0)) </span><br><span class="line">                    over.value = Math.ceil(Math.min((target.scrollTop + target.clientHeight) / 39.67 + 5, num));</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updated(el, binding) &#123;</span><br><span class="line">                let target = el.querySelector(&#x27;.el-scrollbar__wrap&#x27;);</span><br><span class="line">                //这里针对的是table</span><br><span class="line">                const _table = target.querySelector(&#x27;table&#x27;);</span><br><span class="line">                num = binding.value;  //自定义指令接收到的数据</span><br><span class="line">                //通过padding 将盒子撑起来, 上面用paddingTop</span><br><span class="line">                _table.style.paddingTop = start.value * 39.67 + &#x27;px&#x27;; </span><br><span class="line">                //over之后数据量要先撑开，但不去加载,用paddingBottom设置完成为真实的高度</span><br><span class="line">                _table.style.paddingBottom = (num - over.value) * 39.67 + &#x27;px&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">export &#123;</span><br><span class="line">    start, over</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着全局导入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//引入myscroll</span><br><span class="line">import myscroll from &#x27;./utils/v-myscroll&#x27; ;</span><br><span class="line"></span><br><span class="line">app.use(myscroll)</span><br></pre></td></tr></table></figure><p>最后使用即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table v-myscroll=&quot;num&quot; :data=&quot;tableData.slice(start, over)&quot; :border=true&gt;</span><br><span class="line">    &lt;el-table-column label=&quot;networkname&quot; prop=&quot;networkname&quot; /&gt;</span><br><span class="line">    &lt;el-table-column label=&quot;channelname&quot; prop=&quot;channelname&quot; /&gt;</span><br><span class="line">    &lt;el-table-column align=&quot;right&quot;&gt;</span><br><span class="line">        &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                type=&quot;danger&quot;</span><br><span class="line">                @click=&quot;handleDelete(scope.row)&quot;</span><br><span class="line">            &gt;</span><br><span class="line">                删除</span><br><span class="line">            &lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 获取所有网络信息</span><br><span class="line">let tableData = ref([]);</span><br><span class="line">let num = ref(0);</span><br><span class="line">queryAllNetwork(type).then((res) =&gt; &#123;</span><br><span class="line">    tableData.value = res?.data;</span><br><span class="line">     num.value = tableData.value.length;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>本身写到这里就可以结束了，但是最近新接触了一个知识点，我觉得非常有趣，也记录一下吧。</p><p>当遇到海量数据，可以使用fragment+animationFrame处理。具体过程是先设置切片数值，然后调用document.createFragment()，接着在fragment上面添加数据，接着循环此方法步骤，通过window.requestAnimationFrame(fn)来完成。</p><h4 id="4-2-文件操作"><a href="#4-2-文件操作" class="headerlink" title="4.2 文件操作"></a>4.2 文件操作</h4><p>在协同存储这个功能版块遇到了一个复杂的需求，图片的上传。要求是输入密钥、选择身份后，可以与多份文件上传，且完成文件压缩、预览等任务。</p><p>简单说一下思路吧，这文件的操作必然封装成组件，因为需要与其他信息一块传递，所以涉及父子组件通信。子组件内部需要对文件选择按钮进行二次修饰，完成上传文件信息的传递。同时预览之前需要预留一块空间，一方面为了美观，另一方面减少来回预览对DOM的影响，这里需要使用插槽。</p><p>首先新建Upload组件，展示一下子组件关键代码，里面关于文件压缩、预览功能可以查看博客的相关文章（文件上传及相关操作），里面进行了代码详细解释。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comStyle&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;label-but&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;span-but&quot;</span>&gt;</span>选择文件<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input-but&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>  @<span class="attr">change</span>=<span class="string">&quot;fileChange&quot;</span> <span class="attr">multiple</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        </span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-skeleton</span> <span class="attr">style</span>=<span class="string">&quot;width: 21vw&quot;</span> <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">animated</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">el-skeleton-item</span> <span class="attr">variant</span>=<span class="string">&quot;image&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">el-card</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">:body-style</span>=<span class="string">&quot;&#123; padding: &#x27;0px&#x27;, marginBottom: &#x27;-10px&#x27; &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                &gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">ref</span>=<span class="string">&quot;img1&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgbase64&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-skeleton</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; ref, defineExpose, defineEmits &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; <span class="title class_">ElNotification</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&quot;clickDigit&quot;</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> _fileObj = <span class="title function_">ref</span>(&#123;&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> imgList = <span class="title function_">ref</span>([]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">true</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> imgbase64 = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 获取图片的真实DOM</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> img1 = <span class="title function_">ref</span>(<span class="literal">null</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> fileChange = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> file = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> fr = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        fr.<span class="title function_">readAsDataURL</span>(file);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        fr.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            imgbase64.<span class="property">value</span> = fr.<span class="property">result</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            loading.<span class="property">value</span> = <span class="literal">false</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">let</span> pressCanvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                pressCanvas.<span class="property">width</span> = img1.<span class="property">value</span>.<span class="property">width</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                pressCanvas.<span class="property">height</span> = img1.<span class="property">value</span>.<span class="property">height</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">let</span> ctx = pressCanvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                ctx.<span class="title function_">drawImage</span>(img1.<span class="property">value</span>, <span class="number">0</span>, <span class="number">0</span>, img1.<span class="property">value</span>.<span class="property">width</span>, img1.<span class="property">value</span>.<span class="property">height</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                pressCanvas.<span class="title function_">toBlob</span>(<span class="function">(<span class="params">blob</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="keyword">let</span> _formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    _formData.<span class="title function_">append</span>(<span class="string">&quot;file&quot;</span>, blob);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    imgList.<span class="property">value</span>.<span class="title function_">push</span>(_formData);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;, <span class="string">&quot;image/jpeg&quot;</span>, <span class="number">0.6</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="title function_">emits</span>(<span class="string">&quot;clickDigit&quot;</span>, imgList);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这里可能需要对预览进行一下阐述，这里可以发现运用了两个插槽，插槽名为template的渲染 skeleton 模板的内容，而名为default是真正渲染的DOM，两者通过loading这个Boolean变量控制。</p><p>接着全局引用，在协调存储（Digit）进行调用，将传过来的数据赋值给表单中_fileObj，我这里数据格式应该为[“[Object FormData]”, “[Object FormData]”]。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;el-form :inline=<span class="string">&quot;true&quot;</span> :model=<span class="string">&quot;formStore&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;demo-form-inline&quot;</span>&gt;</span><br><span class="line">        ...</span><br><span class="line">        &lt;el-form-item&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">Upload</span> @<span class="attr">clickDigit</span>=<span class="string">&quot;clickDigit&quot;</span>/&gt;</span></span> </span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">import</span> &#123; reactive, toRefs, toRaw &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> formStore = <span class="title function_">reactive</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">sk</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">region</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">_fileObj</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> &#123; sk, region, _fileObj &#125; = <span class="title function_">toRefs</span>(formStore);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">clickDigit</span>(<span class="params">params</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        _fileObj.<span class="property">value</span> = params.<span class="property">value</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br></pre></td></tr></table></figure><h4 id="4-3-多组件嵌套"><a href="#4-3-多组件嵌套" class="headerlink" title="4.3 多组件嵌套"></a>4.3 多组件嵌套</h4><p>项目常需要用到el-table表格组件，在使用中有众多不便利性：</p><ol><li><p>表格title属性需要手动且正确输入，当表格众多、对应属性众多时，非常不便利；</p></li><li><p>针对数据行，如果数据需要配置tag，那就需要通过三元运算符修改，代码非常复杂（简单写一下案例）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//原本样式</span><br><span class="line">&lt;el-table-column prop=&quot;state&quot; label=&quot;State&quot; width=&quot;120&quot; /&gt;</span><br><span class="line"></span><br><span class="line">//对应修改</span><br><span class="line">&lt;el-table-column prop=&quot;state&quot; label=&quot;State&quot; width=&quot;120&quot;&gt;</span><br><span class="line">    &lt;template #default=&#123;row&#125;&gt;</span><br><span class="line">        &lt;el-tag class=&quot;ml-2&quot; :type=&quot;row.state === 0 ? &#x27;danger&#x27; : &#x27;success&#x27;&quot;&gt;</span><br><span class="line">            &#123;&#123;row.state === 0 ? &#x27;禁用&#x27; : &#x27;启用&#x27;&#125;&#125;</span><br><span class="line">        &lt;/el-tag&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure></li><li><p>element-plus组件库没有在table中封装分页，这也需要我们每次重复配套添加el-pagination组件，绑定各种事件、获取页码数。</p></li></ol><p>这个可以预先改进，我还没完成，要去东北旅游+寒假结束准备实习，后面有时间进行更新…</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交叉观察器</title>
      <link href="/2024/01/11/%E4%BA%A4%E5%8F%89%E8%A7%82%E5%AF%9F%E5%99%A8/"/>
      <url>/2024/01/11/%E4%BA%A4%E5%8F%89%E8%A7%82%E5%AF%9F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="交叉观察器"><a href="#交叉观察器" class="headerlink" title="交叉观察器"></a>交叉观察器</h1><p>先简要介绍一下使用背景吧，页面进行滚动时，信息不断呈现（如图片、多行数据等），如果页面一次性加载所有数据，会造成卡顿，所以出现了图片懒加载、无限滚动、组件延迟加载等概念。而实现这些功能的前提是判断信息是否出现在可视区域内，交叉观察器就是一种方式。</p><h3 id="1-基础概念"><a href="#1-基础概念" class="headerlink" title="1. 基础概念"></a>1. 基础概念</h3><p>intersectionObserve是浏览器提供的原生构造函数，观察元素和可视区域是否发生交叉。</p><p>这里我们要明确一个概念，可视区域不一定指整个浏览器窗口，指的是你想要展示数据的DOM元素的区域。</p><h3 id="2-基本使用"><a href="#2-基本使用" class="headerlink" title="2. 基本使用"></a>2. 基本使用</h3><p>因为是构造函数，所以得先初始化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let IO = new IntersectionObserver(callback, options);</span><br></pre></td></tr></table></figure><p>介绍一下这两个参数：</p><ul><li><p>callback</p><p>callback接收两个参数：</p><ul><li><p>entries</p><p>一个intersectionObserverEntry对象数组，存储观察元素的信息。原因是观察的对象可能有很多个。</p></li><li><p>observer</p><p>返回被调用的IO实例，通常无需操作。</p></li></ul></li><li><p>options</p><p>对象形式，记录一些配置信息：</p><ul><li><p>root：被观察元素，不配置默认是浏览器窗口</p></li><li><p>threshold：交叉比例</p></li><li><p>rootMargin</p><p><img src="D:\study\pic_bed\pic_bed\img\study\IO.jpeg"></p></li></ul></li></ul><p><strong>实例方法</strong>：</p><ul><li><input checked="" disabled="" type="checkbox"> IO.observe(element)：开始观察element元素</li><li><input checked="" disabled="" type="checkbox"> IO.unobserve([element])：结束观察</li><li><input checked="" disabled="" type="checkbox"> IO.disconnect()：关闭观察器</li></ul><h3 id="3-图片懒加载"><a href="#3-图片懒加载" class="headerlink" title="3. 图片懒加载"></a>3. 图片懒加载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;viewport&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;./place.jpg&quot; data-src=&quot;xxxx&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;./place.jpg&quot; data-src=&quot;xxxx&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;./place.jpg&quot; data-src=&quot;xxxx&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">let viewport = document.getElementById(&quot;viewport&quot;); // 可视区域</span><br><span class="line">let imgList = document.querySelectorAll(&quot;.imgs&quot;); // 被观察元素</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let options = &#123;</span><br><span class="line">    root: viewport</span><br><span class="line">&#125;</span><br><span class="line">let IO = new IntersectionObserver(IOCallback, options);</span><br><span class="line"></span><br><span class="line">// 循环所有 img 标签，使它被观察</span><br><span class="line">imgList.forEach((item) =&gt; &#123;</span><br><span class="line">    IO.observe(item)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 回调函数</span><br><span class="line">function IOCallback(entries, observer) &#123;</span><br><span class="line">    // 循环所有观察元素</span><br><span class="line">    entries.forEach(item =&gt; &#123;</span><br><span class="line">      // 如果出现在可视区内，则替换 src</span><br><span class="line">      if (item.isIntersecting) &#123;</span><br><span class="line">        console.info(&quot;出现在可视区内&quot;)</span><br><span class="line">        item.target.src = item.target.dataset.src  // 替换 src</span><br><span class="line">        IO.unobserve(item.target)  // 停止观察当前元素 避免不可见时候再次调用 callback 函数</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建简易教程</title>
      <link href="/2024/01/08/Blog%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/01/08/Blog%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="Blog实战搭建"><a href="#Blog实战搭建" class="headerlink" title="Blog实战搭建"></a>Blog实战搭建</h2><p>2024.01.08 突然想简易搭建一个个人博客，存放自己之前的学习笔记，同时方便自己对之前开发的项目进行梳理。</p><p>博客搭建使用的是Hexo框架，主要是好看。</p><p>官方安装地址：<a href="https://hexo.io/zh-cn/docs/%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%8D%E6%98%AF%E5%BE%88%E7%90%86%E8%A7%A3%EF%BC%8C%E7%9B%B4%E6%8E%A5%E7%9C%8B%E6%88%91%E5%8F%8B%E9%93%BE%EF%BC%88Fomalhaut%EF%BC%89%E7%9A%84%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0%EF%BC%9Ahttps://www.fomal.cc/posts/e593433d.html%E3%80%82">https://hexo.io/zh-cn/docs/，如果不是很理解，直接看我友链（Fomalhaut）的环境部署文章：https://www.fomal.cc/posts/e593433d.html。</a></p><p>使用git生成ssh公钥，本地 .ssh&#x2F;id_rsa.pub 文件下复制，在GitHub进行生成SSH key。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>接着进行测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>这是我个人的GitHub相关代码仓库地址：xxx。</p><h3 id="一、Vercel部署"><a href="#一、Vercel部署" class="headerlink" title="一、Vercel部署"></a>一、Vercel部署</h3><p>Vercel是一个云计算平台，主要用于托管、构建和部署静态网站和单页面应用程序。</p><p>使用GitHub账户关联登录后，创建新项目，将GitHub仓库中存储静态博客的代码import进来。</p><p>将项目进行部署（deploy）后，跳转到控制面板。</p><p>接着将自己的域名添加解析记录，我个人购买的是阿里云的域名，在域名控制台&#x2F;域名解析&#x2F;解析设置里面，添加对应的解析记录（包括主机记录、记录类型、记录值）。</p><p><img src="C:\Users\thinkpad\AppData\Roaming\Typora\typora-user-images\image-20240111150541195.png" alt="image-20240111150541195"></p><p>接着就可以直接输入域名看到自己的个人博客初始界面了，这是不想买服务器的人的福音。</p><p>注意：在自己博客代码的_config.yml文件中需将url改成自己的新域名。</p><h3 id="二、主题安装及设置"><a href="#二、主题安装及设置" class="headerlink" title="二、主题安装及设置"></a>二、主题安装及设置</h3><ul><li>安装butterfly主题：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在blog-demo&#x2F;node_modules文件夹下找到hexo-theme-butterfly文件夹。</p><ul><li><p>相关设置：</p><ul><li><p>_config.yml文件中修改主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></li><li><p>安装两个渲染器，是生成基础页面所需的依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li><li><p>由于个人博客搭建完毕后，不会进行页面二次大改，因此需要减少主题升级后可能带来的问题</p><p>找到blog-demo&#x2F;node_modules&#x2F;hexo-theme-butterfly中的 _config.yml文件，复制到根目录blog-demo下，</p><p>这里重命名为_config.butterfly.yml。</p></li></ul></li><li><p>基础用法</p><ul><li><p>Front-matter</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>title</td><td>页面标题</td></tr><tr><td>date</td><td>创建日期</td></tr><tr><td>type</td><td>标签、分类、友情链接需要配置</td></tr><tr><td>comments</td><td>是否显示评论模块</td></tr><tr><td>updated</td><td>更新日期</td></tr><tr><td>description</td><td>描述</td></tr></tbody></table></li><li><p>标签页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>在\source\tags\index.md下，添加type: “tags”。</p></li><li><p>友情链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page link</span><br></pre></td></tr></table></figure><p>在\source\link\index.md下，添加type: “link”</p></li><li><p>\source的_data创建一个link.yml文件（如果沒有 _data 文件夹，请自行创建），并写入相关信息，下面是我的参考信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>class_name: 1.技术支持<br>  class_desc: 本网站的搭建由以下开源作者提供技术支持<br>  link_list:<br>- name: Hexo<br>  link: <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br>  avatar: <a href="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</a><br>  descr: 快速、简单且强大的网志框架<br>  siteshot: <a href="https://source.fomal.cc/siteshot/hexo.io.jpg">https://source.fomal.cc/siteshot/hexo.io.jpg</a>  </p><ul><li>class_name: 2.友情链接<br>class_desc: 一些朋友<br>link_list:<ul><li>name: Fomalhaut🥝<br>link: <a href="https://fomal.cc/">https://fomal.cc/</a><br>avatar: &#x2F;assets&#x2F;head.jpg<br>descr: 博客搭建参考作者<br>siteshot: <a href="https://source.fomal.cc/siteshot/www.fomal.cn.jpg">https://source.fomal.cc/siteshot/www.fomal.cn.jpg</a></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>全局搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>_config.yml站点配置文件中进行对应修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">    path: search.xml</span><br><span class="line">    field: post</span><br><span class="line">    content: true</span><br></pre></td></tr></table></figure></li></ul></li><li><p>主题设置</p><p>所有设置均在_config.butterfly.yml主题配置文件中进行选择配置</p><ul><li><p>menu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">首页: / || fas fa-home</span><br><span class="line">  归档: /archives/ || fas fa-archive</span><br><span class="line">  标签: /tags/ || fas fa-tags</span><br><span class="line">  分类: /categories/ || fas fa-folder-open</span><br><span class="line">  列表||fas fa-list:</span><br><span class="line">    音乐: /music/ || fas fa-music</span><br><span class="line">    视频: /movies/ || fas fa-video</span><br><span class="line">  友链: /link/ || fas fa-link</span><br><span class="line">  关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>并在source文件下创建对应的文件夹。</p></li><li><p>其他设置</p><table><thead><tr><th>属性</th><th>设置</th></tr></thead><tbody><tr><td>social</td><td>个人社交账号展示。</td></tr><tr><td>error_404</td><td>报错页面</td></tr><tr><td>local search</td><td>本地搜索</td></tr><tr><td>favicon</td><td>网站图标</td></tr><tr><td>avatar</td><td>头像</td></tr><tr><td>cover</td><td>文章封面</td></tr><tr><td>post_meta</td><td>文章相关属性</td></tr><tr><td>toc</td><td>目录</td></tr><tr><td>noticeOutdate</td><td>文章过期提醒</td></tr><tr><td>canvas_nest</td><td>true</td></tr><tr><td>beautify</td><td>自定义大标题前面的图标</td></tr><tr><td>hr_icon</td><td>分割线图标</td></tr><tr><td>subtitle</td><td>副标题</td></tr><tr><td>aside</td><td>侧边栏</td></tr><tr><td>translate</td><td>语言转换</td></tr><tr><td>darkmode</td><td>黑夜模式</td></tr><tr><td>readmode</td><td>阅读模式</td></tr><tr><td>aplayerInject</td><td>音乐插件</td></tr><tr><td>snackbar</td><td>弹窗</td></tr><tr><td>instantpage</td><td>预加载</td></tr><tr><td>pangu</td><td>中英文之间加空格</td></tr><tr><td>lazyload</td><td>图片懒加载</td></tr><tr><td>index_img</td><td>文章主页图片</td></tr></tbody></table></li></ul></li><li><p>上传与更新</p><p>项目本地</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo s</span><br></pre></td></tr></table></figure><p>部署GitHub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo g;hexo d</span><br></pre></td></tr></table></figure></li></ul><h3 id="三、特色"><a href="#三、特色" class="headerlink" title="三、特色"></a>三、特色</h3><h4 id="3-1-live-2D看板"><a href="#3-1-live-2D看板" class="headerlink" title="3.1 live-2D看板"></a>3.1 live-2D看板</h4><p>博客自带的看板娘，消耗资源少，因此使用。</p><p>以管理员身份安装对应依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>安装所喜欢的样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-wanko/live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>在站点配置文件<code>_config.yml</code>添加配置项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line">live2d:</span><br><span class="line">  enable: true #开关插件版看板娘</span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line">  # scriptFrom: jsdelivr # jsdelivr CDN</span><br><span class="line">  # scriptFrom: unpkg # unpkg CDN</span><br><span class="line">  # scriptFrom: https://npm.elemecdn.com/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br><span class="line">  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko # npm-module package name</span><br><span class="line">    # use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br><span class="line">    # use: ./wives/wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https://npm.elemecdn.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br><span class="line">  display:</span><br><span class="line">    position: left #控制看板娘位置</span><br><span class="line">    width: 150 #控制看板娘大小</span><br><span class="line">    height: 300 #控制看板娘大小</span><br><span class="line">  mobile:</span><br><span class="line">    show: false # 手机中是否展示</span><br></pre></td></tr></table></figure><h4 id="3-2-留言板"><a href="#3-2-留言板" class="headerlink" title="3.2 留言板"></a>3.2 留言板</h4><p>安装指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-envelope --save</span><br></pre></td></tr></table></figure><p>在站点配置文件<code>_config.yml</code>添加配置项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># envelope_comment</span><br><span class="line"># see https://akilar.top/posts/e2d3c450/</span><br><span class="line">envelope_comment:</span><br><span class="line">  enable: true #控制开关</span><br><span class="line">  custom_pic:      </span><br><span class="line">    cover: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/violet.jpg #信笺头部图片</span><br><span class="line">    line: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/line.png #信笺底部图片</span><br><span class="line">    beforeimg: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/before.png # 信封前半部分</span><br><span class="line">    afterimg: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/after.png # 信封后半部分</span><br><span class="line">  message: #信笺正文，多行文本，写法如下</span><br><span class="line">    - 有什么想问的？</span><br><span class="line">    - 有什么想说的？</span><br><span class="line">    - 有什么想吐槽的？</span><br><span class="line">    - 哪怕是有什么想吃的，都可以告诉我哦~</span><br><span class="line">  bottom: 自动书记人偶竭诚为您服务！ #仅支持单行文本</span><br><span class="line">  height: #1050px，信封划出的高度</span><br><span class="line">  path: #【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html</span><br><span class="line">  front_matter: #【可选】comments页面的 front_matter 配置</span><br><span class="line">    title: 留言板</span><br><span class="line">    comments: true</span><br></pre></td></tr></table></figure><h4 id="3-3-一图流"><a href="#3-3-一图流" class="headerlink" title="3.3 一图流"></a>3.3 一图流</h4><p>在source文件夹下新建css文件夹，创建一个css文件。</p><p>此css文件代码如下，主要是将顶部图和页脚不要的元素设置为透明。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/* 页脚与头图透明 */</span><br><span class="line">#footer &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 白天模式遮罩透明 */</span><br><span class="line">#footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 夜间模式遮罩透明 */</span><br><span class="line">[data-theme=&quot;dark&quot;] #footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">[data-theme=&quot;dark&quot;] #page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着在主题配置文件的inject配置项head中引入刚刚自己创建的css文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span><br></pre></td></tr></table></figure><p>同时将index_img和footer_bg配置项取消头图与页脚图的加载项，避免冗余加载。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># The banner image of home page</span><br><span class="line">index_img: </span><br><span class="line"></span><br><span class="line"># Footer Background</span><br><span class="line">footer_bg: false</span><br></pre></td></tr></table></figure><h4 id="3-4-页脚徽标与计时器"><a href="#3-4-页脚徽标与计时器" class="headerlink" title="3.4 页脚徽标与计时器"></a>3.4 页脚徽标与计时器</h4><p>安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-footer-beautify --save</span><br></pre></td></tr></table></figure><p>站点配置文件添加配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># footer_beautify</span><br><span class="line"># 页脚计时器：[Native JS Timer](https://akilar.top/posts/b941af/)</span><br><span class="line"># 页脚徽标：[Add Github Badge](https://akilar.top/posts/e87ad7f8/)</span><br><span class="line">footer_beautify:</span><br><span class="line">  enable:</span><br><span class="line">    timer: true # 计时器开关</span><br><span class="line">    bdage: true # 徽标开关</span><br><span class="line">  priority: 5 #过滤器优先权</span><br><span class="line">  enable_page: all # 应用页面</span><br><span class="line">  exclude: #屏蔽页面</span><br><span class="line">    # - /posts/</span><br><span class="line">    # - /about/</span><br><span class="line">  layout: # 挂载容器类型</span><br><span class="line">    type: id</span><br><span class="line">    name: footer-wrap</span><br><span class="line">    index: 0</span><br><span class="line">  # 计时器部分配置项（看你喜欢哪个，下载下来放到自己的source文件夹下）</span><br><span class="line">  # 这是我的  </span><br><span class="line">  runtime_js: /js/runtime.js</span><br><span class="line">  # 徽标部分配置项</span><br><span class="line">  swiperpara: 0 #若非0，则开启轮播功能，每行徽标个数</span><br><span class="line">  bdageitem:</span><br><span class="line">    - link: https://hexo.io/ #徽标指向网站链接</span><br><span class="line">      shields: https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo #徽标API</span><br><span class="line">      message: 博客框架为Hexo_v6.2.0 #徽标提示语</span><br><span class="line">    - link: https://butterfly.js.org/</span><br><span class="line">      shields: https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender</span><br><span class="line">      message: 主题版本Butterfly_v4.3.1</span><br><span class="line">    - link: https://vercel.com/</span><br><span class="line">      shields: https://img.shields.io/badge/Hosted-Vercel-brightgreen?style=flat&amp;logo=Vercel</span><br><span class="line">      message: 本站采用多线部署，主线路托管于Vercel</span><br><span class="line">    - link: https://dashboard.4everland.org/</span><br><span class="line">    # https://img.shields.io/badge/Hosted-4EVERLAND-3FE2C1?style=flat&amp;logo=IPFS</span><br><span class="line">      shields: https://img.shields.io/badge/Hosted-4EVERLAND-22DDDD?style=flat&amp;logo=IPFS</span><br><span class="line">      message: 本站采用多线部署，备用线路托管于4EVERLAND</span><br><span class="line">    - link: https://github.com/</span><br><span class="line">      shields: https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub</span><br><span class="line">      message: 本站项目由Github托管</span><br><span class="line">    - link: http://creativecommons.org/licenses/by-nc-sa/4.0/</span><br><span class="line">      shields: https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris</span><br><span class="line">      message: 本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可</span><br><span class="line">  swiper_css: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span><br><span class="line">  swiper_js: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span><br><span class="line">  swiperbdage_init_js: https://npm.elemecdn.com/hexo-butterfly-footer-beautify/lib/swiperbdage_init.min.js</span><br></pre></td></tr></table></figure><p>对应的配置项说明如下。</p><table><thead><tr><th>参数</th><th>值</th><th>含义</th></tr></thead><tbody><tr><td>priority</td><td>数值</td><td>过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td>enable.timer</td><td>bool</td><td>【必选】计时器控制开关</td></tr><tr><td>enable.bdage</td><td>bool</td><td>【必选】徽标控制开关</td></tr><tr><td>enable_page</td><td>path</td><td>填写想要应用的页面,如根目录就填’&#x2F;‘,分类页面就填 ’&#x2F;categories&#x2F;‘ ，默认为all</td></tr><tr><td>exclude</td><td>path</td><td>填写想要屏蔽的页面，可以多个。仅当enable_page为’all’时生效。</td></tr><tr><td>layout.type</td><td>id&#x2F;class</td><td>挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td>layout.name</td><td>text</td><td>【必选】挂载容器名称</td></tr><tr><td>layout.index</td><td>自然数</td><td>前提是layout.type为class，用来确认究竟排在第几个顺位</td></tr><tr><td>runtime_js</td><td>url</td><td>【必选】页脚计时器脚本，可参考<a href="https://akilar.top/posts/b941af/">https://akilar.top/posts/b941af/</a></td></tr><tr><td>runtime_css</td><td>url</td><td>自定义样式，预留开发者接口</td></tr><tr><td>swiperpara</td><td>数值</td><td>若非零，则开启轮播功能，此项表示每行最多容纳徽标个数，用来应对徽标过多显得页脚拥挤的问题</td></tr><tr><td>bdageitem.link</td><td>url</td><td>页脚徽标指向的网站链接</td></tr><tr><td>bdageitem.shields</td><td>url</td><td>【必选】页脚徽标对应的API，API具体写法示例参照<a href="https://akilar.top/posts/e87ad7f8/">https://akilar.top/posts/e87ad7f8/</a></td></tr><tr><td>bdageitem.message</td><td>text</td><td>页脚徽标悬停时显示的信息</td></tr><tr><td>swiper_css</td><td>url</td><td>swiper的依赖</td></tr><tr><td>swiper_js</td><td>url</td><td>swiper的依赖</td></tr><tr><td>swiperbdage_init_js</td><td>url</td><td>swiper初始化方法</td></tr></tbody></table><p>计时器后续需要下载自己的样式！</p><h4 id="3-5-磁铁新版（失败）"><a href="#3-5-磁铁新版（失败）" class="headerlink" title="3.5 磁铁新版（失败）"></a>3.5 磁铁新版（失败）</h4><p>安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-magnet --save</span><br></pre></td></tr></table></figure><p>站点配置文件添加配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">magnet:</span><br><span class="line">  enable: true</span><br><span class="line">  priority: 1</span><br><span class="line">  enable_page: /</span><br><span class="line">  type: categories</span><br><span class="line">  devide: 2</span><br><span class="line">  display:</span><br><span class="line">    - name: 教程</span><br><span class="line">      display_name: 小冰の魔改教程</span><br><span class="line">      icon: 📚</span><br><span class="line">    - name: 游戏评测</span><br><span class="line">      display_name: 小冰の游戏评测</span><br><span class="line">      icon: 🎮</span><br><span class="line">    - name: 生活趣闻</span><br><span class="line">      display_name: 小冰の生活趣闻</span><br><span class="line">      icon: 🐱‍👓</span><br><span class="line">    - name: vue</span><br><span class="line">      display_name: 小冰の编程学习</span><br><span class="line">      icon: 👩‍💻</span><br><span class="line">    - name: 学习</span><br><span class="line">      display_name: 小冰の读书笔记</span><br><span class="line">      icon: 📒</span><br><span class="line">    - name: 随想</span><br><span class="line">      display_name: 小冰の胡思乱想</span><br><span class="line">      icon: 💡</span><br><span class="line">  color_setting:</span><br><span class="line">    text_color: black</span><br><span class="line">    text_hover_color: white</span><br><span class="line">    background_color: &quot;#f2f2f2&quot;</span><br><span class="line">    background_hover_color: &quot;#b30070&quot;</span><br><span class="line">  layout:</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  temple_html: &#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height: auto&quot;&gt;&lt;div id=&quot;catalog_magnet&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure><h4 id="3-6-置顶滚动栏"><a href="#3-6-置顶滚动栏" class="headerlink" title="3.6 置顶滚动栏"></a>3.6 置顶滚动栏</h4><p>安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><p>站点配置文件添加配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">swiper:</span><br><span class="line">  enable: true # 开关</span><br><span class="line">  priority: 5 #过滤器优先权</span><br><span class="line">  enable_page: all # 应用页面</span><br><span class="line">  timemode: date #date/updated</span><br><span class="line">  layout: # 挂载容器类型</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  default_descr: 再怎么看我也不知道怎么描述它的啦！</span><br><span class="line">  swiper_css: /css/swiper.min.css #swiper css依赖</span><br><span class="line">  swiper_js: /js/swiper.min.js #swiper js依赖</span><br><span class="line">  custom_css: /css/swiperstyle.css # 适配主题样式补丁</span><br><span class="line">  custom_js: /js/swiper_init.js # swiper初始化方法</span><br></pre></td></tr></table></figure><h4 id="3-7-文章双侧栏"><a href="#3-7-文章双侧栏" class="headerlink" title="3.7 文章双侧栏"></a>3.7 文章双侧栏</h4><p>安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><p>站点配置文件添加配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">butterfly_article_double_row:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>在custom.css文件添加以下代码，解决文章数目奇数bug。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/* 翻页按钮居中 */</span><br><span class="line">#pagination &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  margin: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-8-wowjs动画"><a href="#3-8-wowjs动画" class="headerlink" title="3.8 wowjs动画"></a>3.8 wowjs动画</h4><p>安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure><p>站点配置文件添加配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">wowjs:</span><br><span class="line">  enable: true #控制动画开关。true是打开，false是关闭</span><br><span class="line">  priority: 10 #过滤器优先级</span><br><span class="line">  mobile: false #移动端是否启用，默认移动端禁用</span><br><span class="line">  animateitem:</span><br><span class="line">    - class: recent-post-item #必填项，需要添加动画的元素的class</span><br><span class="line">      style: animate__zoomIn #必填项，需要添加的动画</span><br><span class="line">      duration: 2s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span><br><span class="line">      delay: 1s #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span><br><span class="line">      offset: 100 #选填项，开始动画的距离（相对浏览器底部）</span><br><span class="line">      iteration: 2 #选填项，动画重复的次数</span><br><span class="line">    - class: card-widget</span><br><span class="line">      style: animate__zoomIn</span><br><span class="line">  animate_css: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/animate.min.css</span><br><span class="line">  wow_js: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow.min.js</span><br><span class="line">  wow_init_js: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow_init.js</span><br></pre></td></tr></table></figure><h4 id="3-9-GitCalendar"><a href="#3-9-GitCalendar" class="headerlink" title="3.9 GitCalendar"></a>3.9 GitCalendar</h4><p>安装插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-gitcalendar --save</span><br></pre></td></tr></table></figure><p>站点配置文件添加配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="四、图床"><a href="#四、图床" class="headerlink" title="四、图床"></a>四、图床</h3><h4 id="4-1-github-vercel"><a href="#4-1-github-vercel" class="headerlink" title="4.1 github+vercel"></a>4.1 github+vercel</h4><p>首先在GitHub上新建一个仓库，接着完成本地访问远程仓库的权限配置。</p><p>新建一个存放图片的文件夹，里面存放自己喜欢的图片。</p><p>进入Vercel控制面板新建项目，导入刚刚新建的GitHub仓库，部署。</p><p>进入项目的控制台，添加自己域名的二级域名，并在域名解析控制台添加对应的解析（也可以提前解析，二级域名的ip值和主域名一样）。</p><p>通过<strong>自定义域名+资源路径</strong>即可访问到对应的资源，例如下面的地址可以访问我的图片。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picbed.currysheep.cn/img/homepage/boating.jpg</span><br></pre></td></tr></table></figure><p>注：更新图片，只要将图片存到对应的图片文件夹里面，然后更新GitHub仓库即可。</p><h4 id="4-2-picgo"><a href="#4-2-picgo" class="headerlink" title="4.2 picgo"></a>4.2 picgo</h4><p>picgo：这是一个用于快速上传图片并获取图片 URL 链接的工具，关键是他可以与Typora配套一起使用，在粘贴图片的同时上传图片，十分方便！</p><p>在此链接<a href="https://github.com/Molunerfinn/PicGo/releases%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%89%88%E6%9C%AC%E3%80%82">https://github.com/Molunerfinn/PicGo/releases下载所需版本。</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3组件间通信方式</title>
      <link href="/2023/10/01/vue3%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/"/>
      <url>/2023/10/01/vue3%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="vue3组件间通信方式"><a href="#vue3组件间通信方式" class="headerlink" title="vue3组件间通信方式"></a>vue3组件间通信方式</h3><h4 id="1-props（父给子）"><a href="#1-props（父给子）" class="headerlink" title="1. props（父给子）"></a>1. props（父给子）</h4><p>props：vue3中，子组件获取数据，直接defineProps([‘xxx’])，即可在模板中使用，但是props是只读的。</p><h4 id="2-自定义事件（子给父）"><a href="#2-自定义事件（子给父）" class="headerlink" title="2. 自定义事件（子给父）"></a>2. 自定义事件（子给父）</h4><p>vue框架事件分为两种：原生DOM事件、自定义事件。</p><p>原生DOM事件会带回调函数，里面必定包含基础的event事件对象。</p><p>在vue3中，原生DOM事件不管放在标签or组件标签上，都是原生DOM事件。</p><p>自定义事件完成父子组件传递数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//子组件Event</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=&#x27;handler&#x27;)&quot;&gt;</span><br><span class="line">            点击出发自定义事件xxx</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    let a = defineEmits([&#x27;xxx&#x27;])</span><br><span class="line">    const handler = () =&gt; &#123;</span><br><span class="line">        //第一个参数为事件类型xxx，后面为注入数据</span><br><span class="line">        a(&quot;xxx&quot;,&quot;aabb&quot;,&quot;sdd&quot;...)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;Event @xxx=&quot;handler&quot;&gt;</span><br><span class="line">    &lt;/Event&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import Evenet from &#x27;./Event.vue&#x27;;</span><br><span class="line">    const handler = (event) =&gt; &#123;</span><br><span class="line">        //展示数据</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>####3. 全局事件总线（兄弟之间）</p><p>使用mitt插件。</p><p>安装完成后，新建bus文件夹，里面新建index.ts。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import mitt from &#x27;mitt&#x27;;</span><br><span class="line">const $bus = mitt();</span><br><span class="line">export default $bus</span><br></pre></td></tr></table></figure><p>接着即可完成兄弟组件数据通信。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//接收数据者</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import $bus from &#x27;../../bus&#x27;;</span><br><span class="line">    //组合API函数</span><br><span class="line">    import &#123;onMounted&#125; from &#x27;vue&#x27;;</span><br><span class="line">    //组件挂载完毕，当前组件绑定事件，接收兄弟组件传来的数据</span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">        //第一个参数为事件类型，第二个参数为事件回调</span><br><span class="line">        $bus.on(&#x27;aa&#x27;, (e)=&gt;&#123;</span><br><span class="line">            console.log(e)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//发送数据者</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import $bus from &#x27;../../bus&#x27;;</span><br><span class="line">    //事件回调</span><br><span class="line">    const handler = () =&gt; &#123;</span><br><span class="line">        $bus.emit(&#x27;aa&#x27;,&#123;dd: &quot;bb&quot;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="4-v-model"><a href="#4-v-model" class="headerlink" title="4. v-model"></a>4. v-model</h4><p>v-model：基础用法为收集表单数据，完成数据双向绑定。</p><p>但是也可以实现组件之间通信！</p><p>v-model在组件上使用：相当于给子组件传递props[modelValue]，绑定自定义事件update:modelValue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;Event v-model:a=&quot;a&quot; v-model:b=&quot;b&quot;&gt;&lt;/Event&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import Evenet from &#x27;./Event.vue&#x27;;</span><br><span class="line">    import &#123;ref&#125; from &#x27;vue&#x27;;</span><br><span class="line">    //父数据</span><br><span class="line">    let a = ref(&quot;xxxx&quot;);</span><br><span class="line">    let b = ref(&quot;xxxxxx&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//子组件Event</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=&quot;handler&quot;&gt;a&#123;&#123;a&#125;&#125;&lt;/button&gt;</span><br><span class="line">        &lt;button&gt;b&#123;&#123;b&#125;&#125;&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    let props = defineProps([&#x27;a&#x27;, &#x27;b&#x27;]);</span><br><span class="line">    let $emit = defineEmits([&#x27;update:a&#x27;, &#x27;update:b&#x27;])</span><br><span class="line">    const handler = () =&gt; &#123;</span><br><span class="line">        //第一个参数为事件类型xxx，后面为注入数据</span><br><span class="line">        $emit(&#x27;update:a&#x27;, props.a + 3);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="5-useAttrs"><a href="#5-useAttrs" class="headerlink" title="5. useAttrs"></a>5. useAttrs</h4><p>此方法可以获取组件标签身上的属性与事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;HindButton type=&quot;primary&quot; size=&quot;small&quot;&gt;&lt;/HindButton&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//子组件HindButton</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-button :=&quot;$attrs&quot;&gt;&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import &#123;useAttrs&#125; from &#x27;vue&#x27;;</span><br><span class="line">    let $attrs = useAttrs();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意：props与useAttrs方法都可以获取父组件的属性和属性值，但是props优先级更高。</p><h4 id="6-ref与-parent"><a href="#6-ref与-parent" class="headerlink" title="6. ref与$parent"></a>6. ref与$parent</h4><p>ref：可以获取真实的DOM节点，可以获取到子组件的实例VC。</p><p>$parent：可以获取到父组件的实例。</p><h4 id="7-provide与inject"><a href="#7-provide与inject" class="headerlink" title="7. provide与inject"></a>7. provide与inject</h4><p>实现隔辈组件通信。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//祖先组件</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import Evenet from &#x27;./Event.vue&#x27;;</span><br><span class="line">    import &#123;ref, provide&#125; from &#x27;vue&#x27;;</span><br><span class="line">    let car = ref(&quot;xasda&quot;);</span><br><span class="line">    //第一个参数为key，第二个参数为数据</span><br><span class="line">    provide(&quot;TOKEN&quot;, car)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//后辈组件Evenet</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import &#123;ref, inject&#125; from &#x27;vue&#x27;;</span><br><span class="line">    let car = inject(&quot;TOKEN&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意：可以修改数据，不是只读，和props不一样！</p><h4 id="8-pinia"><a href="#8-pinia" class="headerlink" title="8. pinia"></a>8. pinia</h4><ul><li><p>vuex：集中式管理状态容器，可以实现任意组件间通信！</p><p>核心概念：state、mutations、actions、getters、modules。</p></li><li><p>pinia：集中式管理状态容器，可以实现任意组件间通信！</p><p>核心概念：state、actions、getters。</p></li></ul><ol><li><p>选择式写法</p><p>在store文件夹下新建文件index.ts，创建大仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import &#123;createPinia&#125; from &#x27;pinia&#x27;;</span><br><span class="line">let store = createPinia();</span><br><span class="line">export default createPinia</span><br></pre></td></tr></table></figure><p>在main.js引入仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import store from &#x27;./store&#x27;;</span><br><span class="line">app.use(store);</span><br></pre></td></tr></table></figure><p>接着在store文件夹下创建modules文件夹，存放小仓库，新建info.ts。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import &#123;defineStore&#125; from &#x27;pinia&#x27;;</span><br><span class="line"></span><br><span class="line">//defineStore方法返回一个函数，让组件可以获取仓库数据</span><br><span class="line">//参数：小仓库名字+小仓库配置对象</span><br><span class="line">let useInfoStore = defineStore(&quot;info&quot;, &#123;</span><br><span class="line">    //存储数据：state</span><br><span class="line">    state: () =&gt; &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            a: &quot;asdasa&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        updateA(param)&#123;</span><br><span class="line">            //直接对this.a进行修改</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    //计算属性</span><br><span class="line">    getters: &#123;</span><br><span class="line">        total()&#123;</span><br><span class="line">            //返回计算结果res</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">export default useInfoStore；</span><br></pre></td></tr></table></figure><p>此时，组件即可选取仓库，获取对应数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=&quot;updateState&quot;&gt;修改数据&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import &#123;useInfoStore&#125; from &#x27;../../store/modules/info.ts&#x27;;</span><br><span class="line">    let info = useInfoStore();</span><br><span class="line">    </span><br><span class="line">    const updateState = () =&gt; &#123;</span><br><span class="line">        //可以直接对info.a进行修改</span><br><span class="line">        //也可以调用仓库里面actions自定义的方法</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>组合式写法</p><p>在store&#x2F;modules文件夹下，新建todo.ts。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import &#123;defineStore&#125; from &#x27;pinia&#x27;;</span><br><span class="line">import &#123;ref&#125; from &#x27;vue&#x27;;</span><br><span class="line"></span><br><span class="line">//参数：小仓库名字+小仓库配置对象</span><br><span class="line">let useTodoStore = defineStore(&quot;todo&quot;, () =&gt; &#123;</span><br><span class="line">    let todos = ref([&#123;a: &quot;asdasda&quot;&#125;]);</span><br><span class="line">    </span><br><span class="line">    //返回一个对象：属性和方法。以给组件使用</span><br><span class="line">    return &#123;</span><br><span class="line">        todos,</span><br><span class="line">        update()&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">export default useTodoStore；</span><br></pre></td></tr></table></figure><p>接着组件开始调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=&quot;updateTodo&quot;&gt;修改数据&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import &#123;useTodoStore&#125; from &#x27;../../store/modules/todo.ts&#x27;;</span><br><span class="line">    let todo = useTodoStore();</span><br><span class="line">    </span><br><span class="line">    const updateTodo = () =&gt; &#123;</span><br><span class="line">        todo.update();</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h4 id="9-插槽"><a href="#9-插槽" class="headerlink" title="9. 插槽"></a>9. 插槽</h4><ul><li><p><input disabled="" type="checkbox"> 默认插槽</p><p><slot></slot></p></li><li><p><input disabled="" type="checkbox"> 具名插槽</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//子组件Test</span><br><span class="line">&lt;slot name=&quot;a&quot;&gt;&lt;/slot&gt;</span><br><span class="line">&lt;slot name=&quot;b&quot;&gt;&lt;/slot&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">父组件</span><br><span class="line">&lt;Test&gt;</span><br><span class="line">    &lt;template v-slot:a&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;template v-slot:b&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/Test&gt;</span><br></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> 作用域插槽（很常用）</p><p>可以传递数据的插槽，子组件可将数据回传给父组件，父组件决定如何将数据在子组件内展示。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {    --trans-light: rgba(255, 255, 255, 0.88);    --trans-dark: rgba(25, 25, 25, 0.88);    --border-style: 1px solid rgb(169, 169, 169);    --backdrop-filter: blur(5px) saturate(150%);  }    /* 页脚与头图透明 */  #footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }    /* 翻页按钮居中 */  #pagination {    width: 100%;    margin: auto;  }      /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 25px;    border: var(--border-style);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 18px;    border: var(--border-style);  }    /* 文章页、归档页、普通页面 */  div#post,  div#page,  div#archive {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border: var(--border-style);    border-radius: 20px;  }    /* 导航栏 */  #page-header.nav-fixed #nav {    background: rgba(255, 255, 255, 0.75);    backdrop-filter: var(--backdrop-filter);  }    [data-theme="dark"] #page-header.nav-fixed #nav {    background: rgba(0, 0, 0, 0.7) !important;  }    /* 夜间模式遮罩 */  [data-theme="dark"] #recent-posts > .recent-post-item,  [data-theme="dark"] #aside-content .card-widget,  [data-theme="dark"] div#post,  [data-theme="dark"] div#archive,  [data-theme="dark"] div#page {    background: var(--trans-dark);  }      /* 夜间模式页脚页头遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }    /* 阅读模式 */  .read-mode #aside-content .card-widget {    background: rgba(158, 204, 171, 0.5) !important;  }  .read-mode div#post {    background: rgba(158, 204, 171, 0.5) !important;  }    /* 夜间模式下的阅读模式 */  [data-theme="dark"] .read-mode #aside-content .card-widget {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;  }  [data-theme="dark"] .read-mode div#post {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;  }    /* 侧边栏个人信息卡片动态渐变色 */  #aside-content > .card-widget.card-info {    background: linear-gradient(      -45deg,      #e8d8b9,      #eccec5,      #a3e9eb,      #bdbdf0,      #eec1ea    );    box-shadow: 0 0 5px rgb(66, 68, 68);    position: relative;    background-size: 400% 400%;    -webkit-animation: Gradient 10s ease infinite;    -moz-animation: Gradient 10s ease infinite;    animation: Gradient 10s ease infinite !important;  }  @-webkit-keyframes Gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }  @-moz-keyframes Gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }  @keyframes Gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }    /* 黑夜模式适配 */  [data-theme="dark"] #aside-content > .card-widget.card-info {    background: #191919ee;  }    /* 个人信息Follow me按钮 */  #aside-content > .card-widget.card-info > #card-info-btn {    background-color: #3eb8be;    border-radius: 8px;  }        /* 【霓虹灯】纯css关键帧实现 */  /* 日间模式不生效 */  [data-theme="light"] #site-name,  [data-theme="light"] #site-title,  [data-theme="light"] #site-subtitle,  [data-theme="light"] #post-info {    animation: none;  }  /* 夜间模式生效 */  [data-theme="dark"] #site-name,  [data-theme="dark"] #site-title {    animation: light_15px 10s linear infinite;  }  [data-theme="dark"] #site-subtitle {    animation: light_10px 10s linear infinite;  }  [data-theme="dark"] #post-info {    animation: light_5px 10s linear infinite;  }  /* 关键帧描述 */  @keyframes light_15px {    0% {      text-shadow: #5636ed 0 0 15px;    }    12.5% {      text-shadow: #11ee5e 0 0 15px;    }    25% {      text-shadow: #f14747 0 0 15px;    }    37.5% {      text-shadow: #f1a247 0 0 15px;    }    50% {      text-shadow: #f1ee47 0 0 15px;    }    50% {      text-shadow: #b347f1 0 0 15px;    }    62.5% {      text-shadow: #002afa 0 0 15px;    }    75% {      text-shadow: #ed709b 0 0 15px;    }    87.5% {      text-shadow: #39c5bb 0 0 15px;    }    100% {      text-shadow: #5636ed 0 0 15px;    }  }    @keyframes light_10px {    0% {      text-shadow: #5636ed 0 0 10px;    }    12.5% {      text-shadow: #11ee5e 0 0 10px;    }    25% {      text-shadow: #f14747 0 0 10px;    }    37.5% {      text-shadow: #f1a247 0 0 10px;    }    50% {      text-shadow: #f1ee47 0 0 10px;    }    50% {      text-shadow: #b347f1 0 0 10px;    }    62.5% {      text-shadow: #002afa 0 0 10px;    }    75% {      text-shadow: #ed709b 0 0 10px;    }    87.5% {      text-shadow: #39c5bb 0 0 10px;    }    100% {      text-shadow: #5636ed 0 0 10px;    }  }    @keyframes light_5px {    0% {      text-shadow: #5636ed 0 0 5px;    }    12.5% {      text-shadow: #11ee5e 0 0 5px;    }    25% {      text-shadow: #f14747 0 0 5px;    }    37.5% {      text-shadow: #f1a247 0 0 15px;    }    50% {      text-shadow: #f1ee47 0 0 5px;    }    50% {      text-shadow: #b347f1 0 0 5px;    }    62.5% {      text-shadow: #002afa 0 0 5px;    }    75% {      text-shadow: #ed709b 0 0 5px;    }    87.5% {      text-shadow: #39c5bb 0 0 5px;    }    100% {      text-shadow: #5636ed 0 0 5px;    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/swiper.min.css"/>
      <url>/css/swiper.min.css</url>
      
        <content type="html"><![CDATA[/** * Swiper 4.1.6 * Most modern mobile touch slider and framework with hardware accelerated transitions * http://www.idangero.us/swiper/ * * Copyright 2014-2018 Vladimir Kharlampidi * * Released under the MIT License * * Released on: February 11, 2018 */.swiper-container{margin:0 auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-container-no-flexbox .swiper-slide{float:left}.swiper-container-vertical>.swiper-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-box-sizing:content-box;box-sizing:content-box}.swiper-container-android .swiper-slide,.swiper-wrapper{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.swiper-container-multirow>.swiper-wrapper{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.swiper-container-free-mode>.swiper-wrapper{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out;margin:0 auto}.swiper-slide{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;width:100%;height:100%;position:relative;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform}.swiper-invisible-blank-slide{visibility:hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide{height:auto}.swiper-container-autoheight .swiper-wrapper{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-transition-property:height,-webkit-transform;transition-property:height,-webkit-transform;-o-transition-property:transform,height;transition-property:transform,height;transition-property:transform,height,-webkit-transform}.swiper-container-3d{-webkit-perspective:1200px;perspective:1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper{-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-container-3d .swiper-slide-shadow-left{background-image:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-right{background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-top{background-image:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-bottom{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper{-ms-touch-action:pan-y;touch-action:pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper{-ms-touch-action:pan-x;touch-action:pan-x}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:27px;height:44px;margin-top:-22px;z-index:10;cursor:pointer;background-size:27px 44px;background-position:center;background-repeat:no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E");left:10px;right:auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E");right:10px;left:auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E")}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;-webkit-transition:.3s opacity;-o-transition:.3s opacity;transition:.3s opacity;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullet{width:8px;height:8px;display:inline-block;border-radius:100%;background:#000;opacity:.2}button.swiper-pagination-bullet{border:none;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet-active{opacity:1;background:#007aff}.swiper-container-vertical>.swiper-pagination-bullets{right:10px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:6px 0;display:block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;-webkit-transition:.2s top,.2s -webkit-transform;transition:.2s top,.2s -webkit-transform;-o-transition:.2s transform,.2s top;transition:.2s transform,.2s top;transition:.2s transform,.2s top,.2s -webkit-transform}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);white-space:nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s left,.2s -webkit-transform;transition:.2s left,.2s -webkit-transform;-o-transition:.2s transform,.2s left;transition:.2s transform,.2s left;transition:.2s transform,.2s left,.2s -webkit-transform}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s right,.2s -webkit-transform;transition:.2s right,.2s -webkit-transform;-o-transition:.2s transform,.2s right;transition:.2s transform,.2s right;transition:.2s transform,.2s right,.2s -webkit-transform}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:#007aff;position:absolute;left:0;top:0;width:100%;height:100%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top}.swiper-container-horizontal>.swiper-pagination-progressbar{width:100%;height:4px;left:0;top:0}.swiper-container-vertical>.swiper-pagination-progressbar{width:4px;height:100%;left:0;top:0}.swiper-pagination-white .swiper-pagination-bullet-active{background:#fff}.swiper-pagination-progressbar.swiper-pagination-white{background:rgba(255,255,255,.25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill{background:#fff}.swiper-pagination-black .swiper-pagination-bullet-active{background:#000}.swiper-pagination-progressbar.swiper-pagination-black{background:rgba(0,0,0,.25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill{background:#000}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:10px;position:relative;-ms-touch-action:none;background:rgba(0,0,0,.1)}.swiper-container-horizontal>.swiper-scrollbar{position:absolute;left:1%;bottom:3px;z-index:50;height:5px;width:98%}.swiper-container-vertical>.swiper-scrollbar{position:absolute;right:3px;top:1%;z-index:50;width:5px;height:98%}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(0,0,0,.5);border-radius:10px;left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}.swiper-zoom-container{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg{max-width:100%;max-height:100%;-o-object-fit:contain;object-fit:contain}.swiper-slide-zoomed{cursor:move}.swiper-lazy-preloader{width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;-webkit-transform-origin:50%;-ms-transform-origin:50%;transform-origin:50%;-webkit-animation:swiper-preloader-spin 1s steps(12,end) infinite;animation:swiper-preloader-spin 1s steps(12,end) infinite}.swiper-lazy-preloader:after{display:block;content:'';width:100%;height:100%;background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%236c6c6c'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E");background-position:50%;background-size:100%;background-repeat:no-repeat}.swiper-lazy-preloader-white:after{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%23fff'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E")}@-webkit-keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.swiper-container .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out}.swiper-container-fade .swiper-slide{pointer-events:none;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity}.swiper-container-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube{overflow:visible}.swiper-container-cube .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0;width:100%;height:100%}.swiper-container-cube .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-cube.swiper-container-rtl .swiper-slide{-webkit-transform-origin:100% 0;-ms-transform-origin:100% 0;transform-origin:100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev{pointer-events:auto;visibility:visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0;width:100%;height:100%;background:#000;opacity:.6;-webkit-filter:blur(50px);filter:blur(50px);z-index:0}.swiper-container-flip{overflow:visible}.swiper-container-flip .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-container-flip .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-coverflow .swiper-wrapper{-ms-perspective:1200px}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/swiperstyle.css"/>
      <url>/css/swiperstyle.css</url>
      
        <content type="html"><![CDATA[* {    -webkit-box-sizing:border-box;    -moz-box-sizing:border-box;    box-sizing:border-box}div#swiper_container {    background:rgba(255, 255, 255, 0)}.blog-slider {    width:100%;    position:relative;    border-radius:12px 8px 8px 12px;    margin:auto;    background:var(--global-bg);    padding:10px;    -webkit-transition:all .3s;    -moz-transition:all .3s;    -o-transition:all .3s;    -ms-transition:all .3s;    transition:all .3s}.blog-slider__item {    display:-webkit-box;    display:-moz-box;    display:-webkit-flex;    display:-ms-flexbox;    display:box;    display:flex;    -webkit-box-align:center;    -moz-box-align:center;    -o-box-align:center;    -ms-flex-align:center;    -webkit-align-items:center;    align-items:center}.blog-slider__item.swiper-slide-active .blog-slider__img img {    opacity:1;    -ms-filter:none;    filter:none;    -webkit-transition-delay:.3s;    -moz-transition-delay:.3s;    -o-transition-delay:.3s;    -ms-transition-delay:.3s;    transition-delay:.3s}.blog-slider__item.swiper-slide-active .blog-slider__content>* {    opacity:1;    -ms-filter:none;    filter:none;    -webkit-transform:none;    -moz-transform:none;    -o-transform:none;    -ms-transform:none;    transform:none}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(1) {    -webkit-transition-delay:.3s;    -moz-transition-delay:.3s;    -o-transition-delay:.3s;    -ms-transition-delay:.3s;    transition-delay:.3s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(2) {    -webkit-transition-delay:.4s;    -moz-transition-delay:.4s;    -o-transition-delay:.4s;    -ms-transition-delay:.4s;    transition-delay:.4s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(3) {    -webkit-transition-delay:.5s;    -moz-transition-delay:.5s;    -o-transition-delay:.5s;    -ms-transition-delay:.5s;    transition-delay:.5s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(4) {    -webkit-transition-delay:.6s;    -moz-transition-delay:.6s;    -o-transition-delay:.6s;    -ms-transition-delay:.6s;    transition-delay:.6s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(5) {    -webkit-transition-delay:.7s;    -moz-transition-delay:.7s;    -o-transition-delay:.7s;    -ms-transition-delay:.7s;    transition-delay:.7s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(6) {    -webkit-transition-delay:.8s;    -moz-transition-delay:.8s;    -o-transition-delay:.8s;    -ms-transition-delay:.8s;    transition-delay:.8s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(7) {    -webkit-transition-delay:.9s;    -moz-transition-delay:.9s;    -o-transition-delay:.9s;    -ms-transition-delay:.9s;    transition-delay:.9s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(8) {    -webkit-transition-delay:1s;    -moz-transition-delay:1s;    -o-transition-delay:1s;    -ms-transition-delay:1s;    transition-delay:1s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(9) {    -webkit-transition-delay:1.1s;    -moz-transition-delay:1.1s;    -o-transition-delay:1.1s;    -ms-transition-delay:1.1s;    transition-delay:1.1s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(10) {    -webkit-transition-delay:1.2s;    -moz-transition-delay:1.2s;    -o-transition-delay:1.2s;    -ms-transition-delay:1.2s;    transition-delay:1.2s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(11) {    -webkit-transition-delay:1.3s;    -moz-transition-delay:1.3s;    -o-transition-delay:1.3s;    -ms-transition-delay:1.3s;    transition-delay:1.3s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(12) {    -webkit-transition-delay:1.4s;    -moz-transition-delay:1.4s;    -o-transition-delay:1.4s;    -ms-transition-delay:1.4s;    transition-delay:1.4s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(13) {    -webkit-transition-delay:1.5s;    -moz-transition-delay:1.5s;    -o-transition-delay:1.5s;    -ms-transition-delay:1.5s;    transition-delay:1.5s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(14) {    -webkit-transition-delay:1.6s;    -moz-transition-delay:1.6s;    -o-transition-delay:1.6s;    -ms-transition-delay:1.6s;    transition-delay:1.6s}.blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(15) {    -webkit-transition-delay:1.7s;    -moz-transition-delay:1.7s;    -o-transition-delay:1.7s;    -ms-transition-delay:1.7s;    transition-delay:1.7s}.blog-slider__img {    width:200px;    -webkit-flex-shrink:0;    flex-shrink:0;    height:200px;    padding:10px;    border-radius:5px;    -webkit-transform:translateX(0);    -moz-transform:translateX(0);    -o-transform:translateX(0);    -ms-transform:translateX(0);    transform:translateX(0);    overflow:hidden}.blog-slider__img:after {    content:'';    position:absolute;    top:0;    left:0;    width:100%;    height:100%;    border-radius:5px;    opacity:.8}.blog-slider__img img {    width:100%;    height:100%;    object-fit:cover;    display:block;    opacity:0;    border-radius:5px;    -webkit-transition:all .3s;    -moz-transition:all .3s;    -o-transition:all .3s;    -ms-transition:all .3s;    transition:all .3s}.blog-slider__content {    padding-right:50px;    padding-left:50px}.blog-slider__content>* {    opacity:0;    -webkit-transform:translateY(25px);    -moz-transform:translateY(25px);    -o-transform:translateY(25px);    -ms-transform:translateY(25px);    transform:translateY(25px);    -webkit-transition:all .4s;    -moz-transition:all .4s;    -o-transition:all .4s;    -ms-transition:all .4s;    transition:all .4s}.blog-slider__code {    color:var(--font-color);    margin-bottom:0;    display:block;    font-weight:500}.blog-slider__title {    font-size:18px;    font-weight:700;    color:var(--font-color);    margin-bottom:15px;    -webkit-line-clamp:1;    display:-webkit-box;    overflow:hidden;    -webkit-box-orient:vertical}.blog-slider__text {    color:var(--font-color);    -webkit-line-clamp:1;    display:-webkit-box;    overflow:hidden;    -webkit-box-orient:vertical;    margin-bottom:15px;    line-height:1.5em;    width:100%;    display:block;    word-break:break-all;    word-wrap:break-word}.blog-slider__button {    display:-webkit-inline-box;    display:-moz-inline-box;    display:-webkit-inline-flex;    display:-ms-inline-flexbox;    display:inline-box;    display:inline-flex;    background-color:var(--btn-bg);    padding:4px 14px;    border-radius:8px;    color:var(--btn-color);    text-decoration:none;    font-weight:500;    -webkit-box-pack:center;    -moz-box-pack:center;    -o-box-pack:center;    -ms-flex-pack:center;    -webkit-justify-content:center;    justify-content:center;    text-align:center;    letter-spacing:1px;    display:none}.blog-slider__button:hover {    background-color:var(--btn-hover-color);    color:var(--btn-color)}.blog-slider .swiper-container-horizontal>.swiper-pagination-bullets, .blog-slider .swiper-pagination-custom, .blog-slider .swiper-pagination-fraction {    bottom:10px;    left:0;    width:100%}.blog-slider__pagination {    position:absolute;    z-index:21;    right:20px;    width:11px!important;    text-align:center;    left:auto!important;    top:50%;    bottom:auto!important;    -webkit-transform:translateY(-50%);    -moz-transform:translateY(-50%);    -o-transform:translateY(-50%);    -ms-transform:translateY(-50%);    transform:translateY(-50%)}.blog-slider__pagination.swiper-pagination-bullets .swiper-pagination-bullet {    margin:8px 0}.blog-slider__pagination .swiper-pagination-bullet {    width:11px;    height:11px;    display:block;    border-radius:10px;    background:#858585;    opacity:.2;    -webkit-transition:all .3s;    -moz-transition:all .3s;    -o-transition:all .3s;    -ms-transition:all .3s;    transition:all .3s}.blog-slider__pagination .swiper-pagination-bullet-active {    opacity:1;    -ms-filter:none;    filter:none;    background:var(--btn-bg);    height:30px}@media screen and (max-width:600px) {    .blog-slider__pagination {        -webkit-transform:translateX(-50%);        -moz-transform:translateX(-50%);        -o-transform:translateX(-50%);        -ms-transform:translateX(-50%);        transform:translateX(-50%);        left:50%!important;        top:320px;        width:100%!important;        display:-webkit-box;        display:-moz-box;        display:-webkit-flex;        display:-ms-flexbox;        display:box;        display:flex;        -webkit-box-pack:center;        -moz-box-pack:center;        -o-box-pack:center;        -ms-flex-pack:center;        -webkit-justify-content:center;        justify-content:center;        -webkit-box-align:center;        -moz-box-align:center;        -o-box-align:center;        -ms-flex-align:center;        -webkit-align-items:center;        align-items:center    }    .blog-slider__pagination.swiper-pagination-bullets .swiper-pagination-bullet {        margin:0 5px    }    .blog-slider__pagination .swiper-pagination-bullet-active {        height:11px;        width:30px    }    .blog-slider__button {        display:-webkit-inline-box;        display:-moz-inline-box;        display:-webkit-inline-flex;        display:-ms-inline-flexbox;        display:inline-box;        display:inline-flex;        width:100%    }    .blog-slider__text {        margin-bottom:40px    }    .blog-slider {        min-height:350px;        height:auto;        margin-top:110px;        margin-bottom:10px    }    .blog-slider__content {        margin-top:-80px;        text-align:center;        padding:0 30px    }    .blog-slider__item {        -webkit-box-orient:vertical;        -moz-box-orient:vertical;        -o-box-orient:vertical;        -webkit-flex-direction:column;        -ms-flex-direction:column;        flex-direction:column    }    .blog-slider__img {        -webkit-transform:translateY(-50%);        -moz-transform:translateY(-50%);        -o-transform:translateY(-50%);        -ms-transform:translateY(-50%);        transform:translateY(-50%);        width:90%    }    .blog-slider__content {        padding-left:10px;        padding-right:10px    }    .blog-slider__pagination.swiper-pagination-clickable.swiper-pagination-bullets {        top:110px    }}@media screen and (min-width:600px) {    .blog-slider {        height:200px    }    .blog-slider__img {        height:200px    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date;function createtime(){    now.setTime(now.getTime() + 1e3);    var e = new Date("2024/01/08 00:00:00"),t = Math.trunc(234e8 + (now - e) / 1e3*17), a = (t/1496e5).toFixed(6), o = new Date("2024/01/08 00:00:00"),n = (now-o)/1e3/60/60/24, r = Math.floor(n), i = (now-o)/1e3/60/60-24*r,s=Math.floor(i);    1 == String(s).length && (s = "0" + s);    var d = (now-o)/1e3/60-1440*r-60*s,l = Math.floor(d); 1 == String(l).length && (l = "0" + l);    var g = (now-o)/1e3-86400*r-3600*s-60*l, b = Math.round(g);    1 == String(b).length && (b = "0" + b);    let c = "";    c = s<18&&s>=9 ? `                        <div style="font-size:13px; font-weight:bold">                            本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒                             <i id="heartbeat" class='fas fa-heartbeat'></i>                             <br>                             旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀                        </div>`                    :`                         <div style="font-size:13px;font-weight:bold">                        本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒                         <i id="heartbeat" class='fas fa-heartbeat'></i>                         <br>                         旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀                    </div>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((    () => { createtime() }) ,1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/swiper_init.js"/>
      <url>/js/swiper_init.js</url>
      
        <content type="html"><![CDATA[var swiper = new Swiper('.blog-slider', {  passiveListeners: true,  spaceBetween: 30,  effect: 'fade',  loop: true,  autoplay: {    disableOnInteraction: true,    delay: 3000  },  mousewheel: true,  // autoHeight: true,  pagination: {    el: '.blog-slider__pagination',    clickable: true,  }});var comtainer = document.getElementById('swiper_container');  if (comtainer !== null) {    comtainer.onmouseenter = function() {      swiper.autoplay.stop();    };    comtainer.onmouseleave = function() {      swiper.autoplay.start();      }  } else {}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/swiper.min.js"/>
      <url>/js/swiper.min.js</url>
      
        <content type="html"><![CDATA[/** * Swiper 4.1.6 * Most modern mobile touch slider and framework with hardware accelerated transitions * http://www.idangero.us/swiper/ * * Copyright 2014-2018 Vladimir Kharlampidi * * Released under the MIT License * * Released on: February 11, 2018 */!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var e="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,t="undefined"==typeof window?{document:e,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,i=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function s(s,a){var r=[],n=0;if(s&&!a&&s instanceof i)return s;if(s)if("string"==typeof s){var o,l,d=s.trim();if(d.indexOf("<")>=0&&d.indexOf(">")>=0){var h="div";for(0===d.indexOf("<li")&&(h="ul"),0===d.indexOf("<tr")&&(h="tbody"),0!==d.indexOf("<td")&&0!==d.indexOf("<th")||(h="tr"),0===d.indexOf("<tbody")&&(h="table"),0===d.indexOf("<option")&&(h="select"),(l=e.createElement(h)).innerHTML=d,n=0;n<l.childNodes.length;n+=1)r.push(l.childNodes[n])}else for(o=a||"#"!==s[0]||s.match(/[ .<>:~]/)?(a||e).querySelectorAll(s.trim()):[e.getElementById(s.trim().split("#")[1])],n=0;n<o.length;n+=1)o[n]&&r.push(o[n])}else if(s.nodeType||s===t||s===e)r.push(s);else if(s.length>0&&s[0].nodeType)for(n=0;n<s.length;n+=1)r.push(s[n]);return new i(r)}function a(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}s.fn=i.prototype,s.Class=i,s.Dom7=i;"resize scroll".split(" ");var r={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var a in e)this[s][a]=e[a],this[s].setAttribute(a,e[a]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0]){if(i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage)return i.dom7ElementDataStorage[e];var a=i.getAttribute("data-"+e);return a||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,a=e[0],r=e[1],n=e[2],o=e[3];function l(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.unshift(e),s(t).is(r))n.apply(t,i);else for(var a=s(t).parents(),o=0;o<a.length;o+=1)s(a[o]).is(r)&&n.apply(a[o],i)}}function d(e){var t=e&&e.target?e.target.dom7EventData||[]:[];t.unshift(e),n.apply(this,t)}"function"==typeof e[1]&&(a=(i=e)[0],n=i[1],o=i[2],r=void 0),o||(o=!1);for(var h,p=a.split(" "),c=0;c<this.length;c+=1){var u=this[c];if(r)for(h=0;h<p.length;h+=1)u.dom7LiveListeners||(u.dom7LiveListeners=[]),u.dom7LiveListeners.push({type:a,listener:n,proxyListener:l}),u.addEventListener(p[h],l,o);else for(h=0;h<p.length;h+=1)u.dom7Listeners||(u.dom7Listeners=[]),u.dom7Listeners.push({type:a,listener:n,proxyListener:d}),u.addEventListener(p[h],d,o)}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s=e[0],a=e[1],r=e[2],n=e[3];"function"==typeof e[1]&&(s=(i=e)[0],r=i[1],n=i[2],a=void 0),n||(n=!1);for(var o=s.split(" "),l=0;l<o.length;l+=1)for(var d=0;d<this.length;d+=1){var h=this[d];if(a){if(h.dom7LiveListeners)for(var p=0;p<h.dom7LiveListeners.length;p+=1)r?h.dom7LiveListeners[p].listener===r&&h.removeEventListener(o[l],h.dom7LiveListeners[p].proxyListener,n):h.dom7LiveListeners[p].type===o[l]&&h.removeEventListener(o[l],h.dom7LiveListeners[p].proxyListener,n)}else if(h.dom7Listeners)for(var c=0;c<h.dom7Listeners.length;c+=1)r?h.dom7Listeners[c].listener===r&&h.removeEventListener(o[l],h.dom7Listeners[c].proxyListener,n):h.dom7Listeners[c].type===o[l]&&h.removeEventListener(o[l],h.dom7Listeners[c].proxyListener,n)}return this},trigger:function(){for(var i=[],s=arguments.length;s--;)i[s]=arguments[s];for(var a=i[0].split(" "),r=i[1],n=0;n<a.length;n+=1)for(var o=0;o<this.length;o+=1){var l=void 0;try{l=new t.CustomEvent(a[n],{detail:r,bubbles:!0,cancelable:!0})}catch(t){(l=e.createEvent("Event")).initEvent(a[n],!0,!0),l.detail=r}this[o].dom7EventData=i.filter(function(e,t){return t>0}),this[o].dispatchEvent(l),this[o].dom7EventData=[],delete this[o].dom7EventData}return this},transitionEnd:function(e){var t,i=["webkitTransitionEnd","transitionend"],s=this;function a(r){if(r.target===this)for(e.call(this,r),t=0;t<i.length;t+=1)s.off(i[t],a)}if(e)for(t=0;t<i.length;t+=1)s.on(i[t],a);return this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(this.length>0){var i=this[0],s=i.getBoundingClientRect(),a=e.body,r=i.clientTop||a.clientTop||0,n=i.clientLeft||a.clientLeft||0,o=i===t?t.scrollY:i.scrollTop,l=i===t?t.scrollX:i.scrollLeft;return{top:s.top+o-r,left:s.left+l-n}}return null},css:function(e,i){var s;if(1===arguments.length){if("string"!=typeof e){for(s=0;s<this.length;s+=1)for(var a in e)this[s].style[a]=e[a];return this}if(this[0])return t.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(s=0;s<this.length;s+=1)this[s].style[e]=i;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(a){var r,n,o=this[0];if(!o||void 0===a)return!1;if("string"==typeof a){if(o.matches)return o.matches(a);if(o.webkitMatchesSelector)return o.webkitMatchesSelector(a);if(o.msMatchesSelector)return o.msMatchesSelector(a);for(r=s(a),n=0;n<r.length;n+=1)if(r[n]===o)return!0;return!1}if(a===e)return o===e;if(a===t)return o===t;if(a.nodeType||a instanceof i){for(r=a.nodeType?[a]:a,n=0;n<r.length;n+=1)if(r[n]===o)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,s=this.length;return new i(e>s-1?[]:e<0?(t=s+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var t,s=[],a=arguments.length;a--;)s[a]=arguments[a];for(var r=0;r<s.length;r+=1){t=s[r];for(var n=0;n<this.length;n+=1)if("string"==typeof t){var o=e.createElement("div");for(o.innerHTML=t;o.firstChild;)this[n].appendChild(o.firstChild)}else if(t instanceof i)for(var l=0;l<t.length;l+=1)this[n].appendChild(t[l]);else this[n].appendChild(t)}return this},prepend:function(t){var s,a;for(s=0;s<this.length;s+=1)if("string"==typeof t){var r=e.createElement("div");for(r.innerHTML=t,a=r.childNodes.length-1;a>=0;a-=1)this[s].insertBefore(r.childNodes[a],this[s].childNodes[0])}else if(t instanceof i)for(a=0;a<t.length;a+=1)this[s].insertBefore(t[a],this[s].childNodes[0]);else this[s].insertBefore(t,this[s].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&s(this[0].nextElementSibling).is(e)?new i([this[0].nextElementSibling]):new i([]):this[0].nextElementSibling?new i([this[0].nextElementSibling]):new i([]):new i([])},nextAll:function(e){var t=[],a=this[0];if(!a)return new i([]);for(;a.nextElementSibling;){var r=a.nextElementSibling;e?s(r).is(e)&&t.push(r):t.push(r),a=r}return new i(t)},prev:function(e){if(this.length>0){var t=this[0];return e?t.previousElementSibling&&s(t.previousElementSibling).is(e)?new i([t.previousElementSibling]):new i([]):t.previousElementSibling?new i([t.previousElementSibling]):new i([])}return new i([])},prevAll:function(e){var t=[],a=this[0];if(!a)return new i([]);for(;a.previousElementSibling;){var r=a.previousElementSibling;e?s(r).is(e)&&t.push(r):t.push(r),a=r}return new i(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?s(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return s(a(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var r=this[i].parentNode;r;)e?s(r).is(e)&&t.push(r):t.push(r),r=r.parentNode;return s(a(t))},closest:function(e){var t=this;return void 0===e?new i([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],s=0;s<this.length;s+=1)for(var a=this[s].querySelectorAll(e),r=0;r<a.length;r+=1)t.push(a[r]);return new i(t)},children:function(e){for(var t=[],r=0;r<this.length;r+=1)for(var n=this[r].childNodes,o=0;o<n.length;o+=1)e?1===n[o].nodeType&&s(n[o]).is(e)&&t.push(n[o]):1===n[o].nodeType&&t.push(n[o]);return new i(a(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,a;for(i=0;i<e.length;i+=1){var r=s(e[i]);for(a=0;a<r.length;a+=1)this[this.length]=r[a],this.length+=1}return this},styles:function(){return this[0]?t.getComputedStyle(this[0],null):{}}};Object.keys(r).forEach(function(e){s.fn[e]=r[e]});var n,o,l,d={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,i){var s,a,r;void 0===i&&(i="x");var n=t.getComputedStyle(e,null);return t.WebKitCSSMatrix?((a=n.transform||n.webkitTransform).split(",").length>6&&(a=a.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),r=new t.WebKitCSSMatrix("none"===a?"":a)):s=(r=n.MozTransform||n.OTransform||n.MsTransform||n.msTransform||n.transform||n.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===i&&(a=t.WebKitCSSMatrix?r.m41:16===s.length?parseFloat(s[12]):parseFloat(s[4])),"y"===i&&(a=t.WebKitCSSMatrix?r.m42:16===s.length?parseFloat(s[13]):parseFloat(s[5])),a||0},parseUrlQuery:function(e){var i,s,a,r,n={},o=e||t.location.href;if("string"==typeof o&&o.length)for(r=(s=(o=o.indexOf("?")>-1?o.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,i=0;i<r;i+=1)a=s[i].replace(/#\S+/g,"").split("="),n[decodeURIComponent(a[0])]=void 0===a[1]?void 0:decodeURIComponent(a[1])||"";return n},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var a=e[s];if(void 0!==a&&null!==a)for(var r=Object.keys(Object(a)),n=0,o=r.length;n<o;n+=1){var l=r[n],h=Object.getOwnPropertyDescriptor(a,l);void 0!==h&&h.enumerable&&(d.isObject(i[l])&&d.isObject(a[l])?d.extend(i[l],a[l]):!d.isObject(i[l])&&d.isObject(a[l])?(i[l]={},d.extend(i[l],a[l])):i[l]=a[l])}}return i}},h=(l=e.createElement("div"),{touch:t.Modernizr&&!0===t.Modernizr.touch||!!("ontouchstart"in t||t.DocumentTouch&&e instanceof t.DocumentTouch),pointerEvents:!(!t.navigator.pointerEnabled&&!t.PointerEvent),prefixedPointerEvents:!!t.navigator.msPointerEnabled,transition:(o=l.style,"transition"in o||"webkitTransition"in o||"MozTransition"in o),transforms3d:t.Modernizr&&!0===t.Modernizr.csstransforms3d||(n=l.style,"webkitPerspective"in n||"MozPerspective"in n||"OPerspective"in n||"MsPerspective"in n||"perspective"in n),flexbox:function(){for(var e=l.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in t||"WebkitMutationObserver"in t,passiveListener:function(){var e=!1;try{var i=Object.defineProperty({},"passive",{get:function(){e=!0}});t.addEventListener("testPassiveListener",null,i)}catch(e){}return e}(),gestures:"ongesturestart"in t}),p=function(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})},c={components:{configurable:!0}};p.prototype.on=function(e,t){var i=this;return"function"!=typeof t?i:(e.split(" ").forEach(function(e){i.eventsListeners[e]||(i.eventsListeners[e]=[]),i.eventsListeners[e].push(t)}),i)},p.prototype.once=function(e,t){var i=this;if("function"!=typeof t)return i;return i.on(e,function s(){for(var a=[],r=arguments.length;r--;)a[r]=arguments[r];t.apply(i,a),i.off(e,s)})},p.prototype.off=function(e,t){var i=this;return e.split(" ").forEach(function(e){void 0===t?i.eventsListeners[e]=[]:i.eventsListeners[e].forEach(function(s,a){s===t&&i.eventsListeners[e].splice(a,1)})}),i},p.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a,r=this;return r.eventsListeners?("string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),a=r):(i=e[0].events,s=e[0].data,a=e[0].context||r),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(r.eventsListeners[e]){var t=[];r.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(a,s)})}}),r):r},p.prototype.useModulesParams=function(e){var t=this;t.modules&&Object.keys(t.modules).forEach(function(i){var s=t.modules[i];s.params&&d.extend(e,s.params)})},p.prototype.useModules=function(e){void 0===e&&(e={});var t=this;t.modules&&Object.keys(t.modules).forEach(function(i){var s=t.modules[i],a=e[i]||{};s.instance&&Object.keys(s.instance).forEach(function(e){var i=s.instance[e];t[e]="function"==typeof i?i.bind(t):i}),s.on&&t.on&&Object.keys(s.on).forEach(function(e){t.on(e,s.on[e])}),s.create&&s.create.bind(t)(a)})},c.components.set=function(e){this.use&&this.use(e)},p.installModule=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var a=e.name||Object.keys(s.prototype.modules).length+"_"+d.now();return s.prototype.modules[a]=e,e.proto&&Object.keys(e.proto).forEach(function(t){s.prototype[t]=e.proto[t]}),e.static&&Object.keys(e.static).forEach(function(t){s[t]=e.static[t]}),e.install&&e.install.apply(s,t),s},p.use=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach(function(e){return s.installModule(e)}),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(p,c);var u={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),d.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=this.params,t=this.$wrapperEl,i=this.size,s=this.rtl,a=this.wrongRTL,r=t.children("."+this.params.slideClass),n=this.virtual&&e.virtual.enabled?this.virtual.slides.length:r.length,o=[],l=[],p=[],c=e.slidesOffsetBefore;"function"==typeof c&&(c=e.slidesOffsetBefore.call(this));var u=e.slidesOffsetAfter;"function"==typeof u&&(u=e.slidesOffsetAfter.call(this));var v=n,f=this.snapGrid.length,m=this.snapGrid.length,g=e.spaceBetween,b=-c,w=0,y=0;if(void 0!==i){var x,E;"string"==typeof g&&g.indexOf("%")>=0&&(g=parseFloat(g.replace("%",""))/100*i),this.virtualSize=-g,s?r.css({marginLeft:"",marginTop:""}):r.css({marginRight:"",marginBottom:""}),e.slidesPerColumn>1&&(x=Math.floor(n/e.slidesPerColumn)===n/this.params.slidesPerColumn?n:Math.ceil(n/e.slidesPerColumn)*e.slidesPerColumn,"auto"!==e.slidesPerView&&"row"===e.slidesPerColumnFill&&(x=Math.max(x,e.slidesPerView*e.slidesPerColumn)));for(var T,S=e.slidesPerColumn,C=x/S,M=C-(e.slidesPerColumn*C-n),z=0;z<n;z+=1){E=0;var P=r.eq(z);if(e.slidesPerColumn>1){var k=void 0,$=void 0,L=void 0;"column"===e.slidesPerColumnFill?(L=z-($=Math.floor(z/S))*S,($>M||$===M&&L===S-1)&&(L+=1)>=S&&(L=0,$+=1),k=$+L*x/S,P.css({"-webkit-box-ordinal-group":k,"-moz-box-ordinal-group":k,"-ms-flex-order":k,"-webkit-order":k,order:k})):$=z-(L=Math.floor(z/C))*C,P.css("margin-"+(this.isHorizontal()?"top":"left"),0!==L&&e.spaceBetween&&e.spaceBetween+"px").attr("data-swiper-column",$).attr("data-swiper-row",L)}"none"!==P.css("display")&&("auto"===e.slidesPerView?(E=this.isHorizontal()?P.outerWidth(!0):P.outerHeight(!0),e.roundLengths&&(E=Math.floor(E))):(E=(i-(e.slidesPerView-1)*g)/e.slidesPerView,e.roundLengths&&(E=Math.floor(E)),r[z]&&(this.isHorizontal()?r[z].style.width=E+"px":r[z].style.height=E+"px")),r[z]&&(r[z].swiperSlideSize=E),p.push(E),e.centeredSlides?(b=b+E/2+w/2+g,0===w&&0!==z&&(b=b-i/2-g),0===z&&(b=b-i/2-g),Math.abs(b)<.001&&(b=0),y%e.slidesPerGroup==0&&o.push(b),l.push(b)):(y%e.slidesPerGroup==0&&o.push(b),l.push(b),b=b+E+g),this.virtualSize+=E+g,w=E,y+=1)}if(this.virtualSize=Math.max(this.virtualSize,i)+u,s&&a&&("slide"===e.effect||"coverflow"===e.effect)&&t.css({width:this.virtualSize+e.spaceBetween+"px"}),h.flexbox&&!e.setWrapperSize||(this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"})),e.slidesPerColumn>1&&(this.virtualSize=(E+e.spaceBetween)*x,this.virtualSize=Math.ceil(this.virtualSize/e.slidesPerColumn)-e.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"}),e.centeredSlides)){T=[];for(var I=0;I<o.length;I+=1)o[I]<this.virtualSize+o[0]&&T.push(o[I]);o=T}if(!e.centeredSlides){T=[];for(var D=0;D<o.length;D+=1)o[D]<=this.virtualSize-i&&T.push(o[D]);o=T,Math.floor(this.virtualSize-i)-Math.floor(o[o.length-1])>1&&o.push(this.virtualSize-i)}0===o.length&&(o=[0]),0!==e.spaceBetween&&(this.isHorizontal()?s?r.css({marginLeft:g+"px"}):r.css({marginRight:g+"px"}):r.css({marginBottom:g+"px"})),d.extend(this,{slides:r,snapGrid:o,slidesGrid:l,slidesSizesGrid:p}),n!==v&&this.emit("slidesLengthChange"),o.length!==f&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),l.length!==m&&this.emit("slidesGridLengthChange"),(e.watchSlidesProgress||e.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(){var e,t=[],i=0;if("auto"!==this.params.slidesPerView&&this.params.slidesPerView>1)for(e=0;e<Math.ceil(this.params.slidesPerView);e+=1){var s=this.activeIndex+e;if(s>this.slides.length)break;t.push(this.slides.eq(s)[0])}else t.push(this.slides.eq(this.activeIndex)[0]);for(e=0;e<t.length;e+=1)if(void 0!==t[e]){var a=t[e].offsetHeight;i=a>i?a:i}i&&this.$wrapperEl.css("height",i+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this.translate||0);var t=this.params,i=this.slides,s=this.rtl;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var a=-e;s&&(a=e),i.removeClass(t.slideVisibleClass);for(var r=0;r<i.length;r+=1){var n=i[r],o=(a+(t.centeredSlides?this.minTranslate():0)-n.swiperSlideOffset)/(n.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility){var l=-(a-n.swiperSlideOffset),d=l+this.slidesSizesGrid[r];(l>=0&&l<this.size||d>0&&d<=this.size||l<=0&&d>=this.size)&&i.eq(r).addClass(t.slideVisibleClass)}n.progress=s?-o:o}}},updateProgress:function(e){void 0===e&&(e=this.translate||0);var t=this.params,i=this.maxTranslate()-this.minTranslate(),s=this.progress,a=this.isBeginning,r=this.isEnd,n=a,o=r;0===i?(s=0,a=!0,r=!0):(a=(s=(e-this.minTranslate())/i)<=0,r=s>=1),d.extend(this,{progress:s,isBeginning:a,isEnd:r}),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesProgress(e),a&&!n&&this.emit("reachBeginning toEdge"),r&&!o&&this.emit("reachEnd toEdge"),(n&&!a||o&&!r)&&this.emit("fromEdge"),this.emit("progress",s)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,a=this.activeIndex,r=this.realIndex,n=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=n?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+a+'"]'):t.eq(a)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtl?this.translate:-this.translate,s=this.slidesGrid,a=this.snapGrid,r=this.params,n=this.activeIndex,o=this.realIndex,l=this.snapIndex,h=e;if(void 0===h){for(var p=0;p<s.length;p+=1)void 0!==s[p+1]?i>=s[p]&&i<s[p+1]-(s[p+1]-s[p])/2?h=p:i>=s[p]&&i<s[p+1]&&(h=p+1):i>=s[p]&&(h=p);r.normalizeSlideIndex&&(h<0||void 0===h)&&(h=0)}if((t=a.indexOf(i)>=0?a.indexOf(i):Math.floor(h/r.slidesPerGroup))>=a.length&&(t=a.length-1),h!==n){var c=parseInt(this.slides.eq(h).attr("data-swiper-slide-index")||h,10);d.extend(this,{snapIndex:t,realIndex:c,previousIndex:n,activeIndex:h}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==c&&this.emit("realIndexChange"),this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=s(e.target).closest("."+t.slideClass)[0],a=!1;if(i)for(var r=0;r<this.slides.length;r+=1)this.slides[r]===i&&(a=!0);if(!i||!a)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(s(i).attr("data-swiper-slide-index"),10):this.clickedIndex=s(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},v={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtl,s=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;var r=d.getTranslate(a[0],e);return i&&(r=-r),r||0},setTranslate:function(e,t){var i=this.rtl,s=this.params,a=this.$wrapperEl,r=this.progress,n=0,o=0;this.isHorizontal()?n=i?-e:e:o=e,s.roundLengths&&(n=Math.floor(n),o=Math.floor(o)),s.virtualTranslate||(h.transforms3d?a.transform("translate3d("+n+"px, "+o+"px, 0px)"):a.transform("translate("+n+"px, "+o+"px)")),this.translate=this.isHorizontal()?n:o;var l=this.maxTranslate()-this.minTranslate();(0===l?0:(e-this.minTranslate())/l)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},f={setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.params,a=this.previousIndex;s.autoHeight&&this.updateAutoHeight();var r=t;if(r||(r=i>a?"next":i<a?"prev":"reset"),this.emit("transitionStart"),e&&i!==a){if("reset"===r)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===r?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.previousIndex;this.animating=!1,this.setTransition(0);var a=t;if(a||(a=i>s?"next":i<s?"prev":"reset"),this.emit("transitionEnd"),e&&i!==s){if("reset"===a)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===a?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}},m={slideTo:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=this,r=e;r<0&&(r=0);var n=a.params,o=a.snapGrid,l=a.slidesGrid,d=a.previousIndex,p=a.activeIndex,c=a.rtl,u=a.$wrapperEl;if(a.animating&&n.preventIntercationOnTransition)return!1;var v=Math.floor(r/n.slidesPerGroup);v>=o.length&&(v=o.length-1),(p||n.initialSlide||0)===(d||0)&&i&&a.emit("beforeSlideChangeStart");var f,m=-o[v];if(a.updateProgress(m),n.normalizeSlideIndex)for(var g=0;g<l.length;g+=1)-Math.floor(100*m)>=Math.floor(100*l[g])&&(r=g);if(a.initialized&&r!==p){if(!a.allowSlideNext&&m<a.translate&&m<a.minTranslate())return!1;if(!a.allowSlidePrev&&m>a.translate&&m>a.maxTranslate()&&(p||0)!==r)return!1}return f=r>p?"next":r<p?"prev":"reset",c&&-m===a.translate||!c&&m===a.translate?(a.updateActiveIndex(r),n.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==n.effect&&a.setTranslate(m),"reset"!==f&&(a.transitionStart(i,f),a.transitionEnd(i,f)),!1):(0!==t&&h.transition?(a.setTransition(t),a.setTranslate(m),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i,f),a.animating||(a.animating=!0,u.transitionEnd(function(){a&&!a.destroyed&&a.transitionEnd(i,f)}))):(a.setTransition(0),a.setTranslate(m),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i,f),a.transitionEnd(i,f)),!0)},slideToLoop:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=e;return this.params.loop&&(a+=this.loopedSlides),this.slideTo(a,t,i,s)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating;return s.loop?!a&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex+s.slidesPerGroup,e,t,i)):this.slideTo(this.activeIndex+s.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating;return s.loop?!a&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex-1,e,t,i)):this.slideTo(this.activeIndex-1,e,t,i)},slideReset:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);return this.slideTo(this.activeIndex,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,a=t.$wrapperEl,r="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,n=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(s(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?n<t.loopedSlides-r/2||n>t.slides.length-t.loopedSlides+r/2?(t.loopFix(),n=a.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),d.nextTick(function(){t.slideTo(n)})):t.slideTo(n):n>t.slides.length-r?(t.loopFix(),n=a.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),d.nextTick(function(){t.slideTo(n)})):t.slideTo(n)}else t.slideTo(n)}},g={loopCreate:function(){var t=this,i=t.params,a=t.$wrapperEl;a.children("."+i.slideClass+"."+i.slideDuplicateClass).remove();var r=a.children("."+i.slideClass);if(i.loopFillGroupWithBlank){var n=i.slidesPerGroup-r.length%i.slidesPerGroup;if(n!==i.slidesPerGroup){for(var o=0;o<n;o+=1){var l=s(e.createElement("div")).addClass(i.slideClass+" "+i.slideBlankClass);a.append(l)}r=a.children("."+i.slideClass)}}"auto"!==i.slidesPerView||i.loopedSlides||(i.loopedSlides=r.length),t.loopedSlides=parseInt(i.loopedSlides||i.slidesPerView,10),t.loopedSlides+=i.loopAdditionalSlides,t.loopedSlides>r.length&&(t.loopedSlides=r.length);var d=[],h=[];r.each(function(e,i){var a=s(i);e<t.loopedSlides&&h.push(i),e<r.length&&e>=r.length-t.loopedSlides&&d.push(i),a.attr("data-swiper-slide-index",e)});for(var p=0;p<h.length;p+=1)a.append(s(h[p].cloneNode(!0)).addClass(i.slideDuplicateClass));for(var c=d.length-1;c>=0;c-=1)a.prepend(s(d[c].cloneNode(!0)).addClass(i.slideDuplicateClass))},loopFix:function(){var e,t=this.params,i=this.activeIndex,s=this.slides,a=this.loopedSlides,r=this.allowSlidePrev,n=this.allowSlideNext,o=this.snapGrid,l=this.rtl;this.allowSlidePrev=!0,this.allowSlideNext=!0;var d=-o[i]-this.getTranslate();i<a?(e=s.length-3*a+i,e+=a,this.slideTo(e,0,!1,!0)&&0!==d&&this.setTranslate((l?-this.translate:this.translate)-d)):("auto"===t.slidesPerView&&i>=2*a||i>s.length-2*t.slidesPerView)&&(e=-s.length+i+a,e+=a,this.slideTo(e,0,!1,!0)&&0!==d&&this.setTranslate((l?-this.translate:this.translate)-d));this.allowSlidePrev=r,this.allowSlideNext=n},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass).remove(),i.removeAttr("data-swiper-slide-index")}},b={setGrabCursor:function(e){if(!h.touch&&this.params.simulateTouch){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){h.touch||(this.el.style.cursor="")}},w={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&h.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var a=s+1;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)e[r]&&i.prepend(e[r]);a=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),this.slideTo(a,0,!1)},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(this.loopDestroy(),this.slides=i.children("."+t.slideClass));var a,r=s;if("object"==typeof e&&"length"in e){for(var n=0;n<e.length;n+=1)a=e[n],this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1);r=Math.max(r,0)}else a=e,this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1),r=Math.max(r,0);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),t.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},y=function(){var i=t.navigator.userAgent,s={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:t.cordova||t.phonegap,phonegap:t.cordova||t.phonegap},a=i.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),r=i.match(/(Android);?[\s\/]+([\d.]+)?/),n=i.match(/(iPad).*OS\s([\d_]+)/),o=i.match(/(iPod)(.*OS\s([\d_]+))?/),l=!n&&i.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(a&&(s.os="windows",s.osVersion=a[2],s.windows=!0),r&&!a&&(s.os="android",s.osVersion=r[2],s.android=!0,s.androidChrome=i.toLowerCase().indexOf("chrome")>=0),(n||l||o)&&(s.os="ios",s.ios=!0),l&&!o&&(s.osVersion=l[2].replace(/_/g,"."),s.iphone=!0),n&&(s.osVersion=n[2].replace(/_/g,"."),s.ipad=!0),o&&(s.osVersion=o[3]?o[3].replace(/_/g,"."):null,s.iphone=!0),s.ios&&s.osVersion&&i.indexOf("Version/")>=0&&"10"===s.osVersion.split(".")[0]&&(s.osVersion=i.toLowerCase().split("version/")[1].split(" ")[0]),s.desktop=!(s.os||s.android||s.webView),s.webView=(l||n||o)&&i.match(/.*AppleWebKit(?!.*Safari)/i),s.os&&"ios"===s.os){var d=s.osVersion.split("."),h=e.querySelector('meta[name="viewport"]');s.minimalUi=!s.webView&&(o||l)&&(1*d[0]==7?1*d[1]>=1:1*d[0]>7)&&h&&h.getAttribute("content").indexOf("minimal-ui")>=0}return s.pixelRatio=t.devicePixelRatio||1,s}(),x=function(i){var a=this.touchEventsData,r=this.params,n=this.touches;if(!this.animating||!r.preventIntercationOnTransition){var o=i;if(o.originalEvent&&(o=o.originalEvent),a.isTouchEvent="touchstart"===o.type,(a.isTouchEvent||!("which"in o)||3!==o.which)&&(!a.isTouched||!a.isMoved))if(r.noSwiping&&s(o.target).closest(r.noSwipingSelector?r.noSwipingSelector:"."+r.noSwipingClass)[0])this.allowClick=!0;else if(!r.swipeHandler||s(o).closest(r.swipeHandler)[0]){n.currentX="touchstart"===o.type?o.targetTouches[0].pageX:o.pageX,n.currentY="touchstart"===o.type?o.targetTouches[0].pageY:o.pageY;var l=n.currentX,h=n.currentY;if(!(y.ios&&!y.cordova&&r.iOSEdgeSwipeDetection&&l<=r.iOSEdgeSwipeThreshold&&l>=t.screen.width-r.iOSEdgeSwipeThreshold)){if(d.extend(a,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),n.startX=l,n.startY=h,a.touchStartTime=d.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,r.threshold>0&&(a.allowThresholdMove=!1),"touchstart"!==o.type){var p=!0;s(o.target).is(a.formElements)&&(p=!1),e.activeElement&&s(e.activeElement).is(a.formElements)&&e.activeElement!==o.target&&e.activeElement.blur(),p&&this.allowTouchMove&&o.preventDefault()}this.emit("touchStart",o)}}}},E=function(t){var i=this.touchEventsData,a=this.params,r=this.touches,n=this.rtl,o=t;if(o.originalEvent&&(o=o.originalEvent),i.isTouched){if(!i.isTouchEvent||"mousemove"!==o.type){var l="touchmove"===o.type?o.targetTouches[0].pageX:o.pageX,h="touchmove"===o.type?o.targetTouches[0].pageY:o.pageY;if(o.preventedByNestedSwiper)return r.startX=l,void(r.startY=h);if(!this.allowTouchMove)return this.allowClick=!1,void(i.isTouched&&(d.extend(r,{startX:l,startY:h,currentX:l,currentY:h}),i.touchStartTime=d.now()));if(i.isTouchEvent&&a.touchReleaseOnEdges&&!a.loop)if(this.isVertical()){if(h<r.startY&&this.translate<=this.maxTranslate()||h>r.startY&&this.translate>=this.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(l<r.startX&&this.translate<=this.maxTranslate()||l>r.startX&&this.translate>=this.minTranslate())return;if(i.isTouchEvent&&e.activeElement&&o.target===e.activeElement&&s(o.target).is(i.formElements))return i.isMoved=!0,void(this.allowClick=!1);if(i.allowTouchCallbacks&&this.emit("touchMove",o),!(o.targetTouches&&o.targetTouches.length>1)){r.currentX=l,r.currentY=h;var p,c=r.currentX-r.startX,u=r.currentY-r.startY;if(void 0===i.isScrolling)this.isHorizontal()&&r.currentY===r.startY||this.isVertical()&&r.currentX===r.startX?i.isScrolling=!1:c*c+u*u>=25&&(p=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,i.isScrolling=this.isHorizontal()?p>a.touchAngle:90-p>a.touchAngle);if(i.isScrolling&&this.emit("touchMoveOpposite",o),"undefined"==typeof startMoving&&(r.currentX===r.startX&&r.currentY===r.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){this.allowClick=!1,o.preventDefault(),a.touchMoveStopPropagation&&!a.nested&&o.stopPropagation(),i.isMoved||(a.loop&&this.loopFix(),i.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!a.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",o)),this.emit("sliderMove",o),i.isMoved=!0;var v=this.isHorizontal()?c:u;r.diff=v,v*=a.touchRatio,n&&(v=-v),this.swipeDirection=v>0?"prev":"next",i.currentTranslate=v+i.startTranslate;var f=!0,m=a.resistanceRatio;if(a.touchReleaseOnEdges&&(m=0),v>0&&i.currentTranslate>this.minTranslate()?(f=!1,a.resistance&&(i.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+i.startTranslate+v,m))):v<0&&i.currentTranslate<this.maxTranslate()&&(f=!1,a.resistance&&(i.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-i.startTranslate-v,m))),f&&(o.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),a.threshold>0){if(!(Math.abs(v)>a.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,r.startX=r.currentX,r.startY=r.currentY,i.currentTranslate=i.startTranslate,void(r.diff=this.isHorizontal()?r.currentX-r.startX:r.currentY-r.startY)}a.followFinger&&((a.freeMode||a.watchSlidesProgress||a.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),a.freeMode&&(0===i.velocities.length&&i.velocities.push({position:r[this.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:r[this.isHorizontal()?"currentX":"currentY"],time:d.now()})),this.updateProgress(i.currentTranslate),this.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&this.emit("touchMoveOpposite",o)},T=function(e){var t=this,i=t.touchEventsData,s=t.params,a=t.touches,r=t.rtl,n=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,h=e;if(h.originalEvent&&(h=h.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",h),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&s.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var p,c=d.now(),u=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(h),t.emit("tap",h),u<300&&c-i.lastClickTime>300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=d.nextTick(function(){t&&!t.destroyed&&t.emit("click",h)},300)),u<300&&c-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",h))),i.lastClickTime=d.now(),d.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===a.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,p=s.followFinger?r?t.translate:-t.translate:-i.currentTranslate,s.freeMode){if(p<-t.minTranslate())return void t.slideTo(t.activeIndex);if(p>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(i.velocities.length>1){var v=i.velocities.pop(),f=i.velocities.pop(),m=v.position-f.position,g=v.time-f.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(g>150||d.now()-v.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var b=1e3*s.freeModeMomentumRatio,w=t.velocity*b,y=t.translate+w;r&&(y=-y);var x,E=!1,T=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(y<t.maxTranslate())s.freeModeMomentumBounce?(y+t.maxTranslate()<-T&&(y=t.maxTranslate()-T),x=t.maxTranslate(),E=!0,i.allowMomentumBounce=!0):y=t.maxTranslate();else if(y>t.minTranslate())s.freeModeMomentumBounce?(y-t.minTranslate()>T&&(y=t.minTranslate()+T),x=t.minTranslate(),E=!0,i.allowMomentumBounce=!0):y=t.minTranslate();else if(s.freeModeSticky){for(var S,C=0;C<l.length;C+=1)if(l[C]>-y){S=C;break}y=-(y=Math.abs(l[S]-y)<Math.abs(l[S-1]-y)||"next"===t.swipeDirection?l[S]:l[S-1])}if(0!==t.velocity)b=r?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity);else if(s.freeModeSticky)return void t.slideReset();s.freeModeMomentumBounce&&E?(t.updateProgress(x),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(s.speed),t.setTranslate(x),n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(y),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}(!s.freeModeMomentum||u>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var M=0,z=t.slidesSizesGrid[0],P=0;P<o.length;P+=s.slidesPerGroup)void 0!==o[P+s.slidesPerGroup]?p>=o[P]&&p<o[P+s.slidesPerGroup]&&(M=P,z=o[P+s.slidesPerGroup]-o[P]):p>=o[P]&&(M=P,z=o[o.length-1]-o[o.length-2]);var k=(p-o[M])/z;if(u>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(k>=s.longSwipesRatio?t.slideTo(M+s.slidesPerGroup):t.slideTo(M)),"prev"===t.swipeDirection&&(k>1-s.longSwipesRatio?t.slideTo(M+s.slidesPerGroup):t.slideTo(M))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(M+s.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(M)}}},S=function(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev;if(this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),e.freeMode){var a=Math.min(Math.max(this.translate,this.maxTranslate()),this.minTranslate());this.setTranslate(a),this.updateActiveIndex(),this.updateSlidesClasses(),e.autoHeight&&this.updateAutoHeight()}else this.updateSlidesClasses(),("auto"===e.slidesPerView||e.slidesPerView>1)&&this.isEnd&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0);this.allowSlidePrev=s,this.allowSlideNext=i}},C=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))};var M={attachEvents:function(){var t=this.params,i=this.touchEvents,s=this.el,a=this.wrapperEl;this.onTouchStart=x.bind(this),this.onTouchMove=E.bind(this),this.onTouchEnd=T.bind(this),this.onClick=C.bind(this);var r="container"===t.touchEventsTarget?s:a,n=!!t.nested;if(h.touch||!h.pointerEvents&&!h.prefixedPointerEvents){if(h.touch){var o=!("touchstart"!==i.start||!h.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.addEventListener(i.start,this.onTouchStart,o),r.addEventListener(i.move,this.onTouchMove,h.passiveListener?{passive:!1,capture:n}:n),r.addEventListener(i.end,this.onTouchEnd,o)}(t.simulateTouch&&!y.ios&&!y.android||t.simulateTouch&&!h.touch&&y.ios)&&(r.addEventListener("mousedown",this.onTouchStart,!1),e.addEventListener("mousemove",this.onTouchMove,n),e.addEventListener("mouseup",this.onTouchEnd,!1))}else r.addEventListener(i.start,this.onTouchStart,!1),e.addEventListener(i.move,this.onTouchMove,n),e.addEventListener(i.end,this.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&r.addEventListener("click",this.onClick,!0),this.on("resize observerUpdate",S)},detachEvents:function(){var t=this.params,i=this.touchEvents,s=this.el,a=this.wrapperEl,r="container"===t.touchEventsTarget?s:a,n=!!t.nested;if(h.touch||!h.pointerEvents&&!h.prefixedPointerEvents){if(h.touch){var o=!("onTouchStart"!==i.start||!h.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.removeEventListener(i.start,this.onTouchStart,o),r.removeEventListener(i.move,this.onTouchMove,n),r.removeEventListener(i.end,this.onTouchEnd,o)}(t.simulateTouch&&!y.ios&&!y.android||t.simulateTouch&&!h.touch&&y.ios)&&(r.removeEventListener("mousedown",this.onTouchStart,!1),e.removeEventListener("mousemove",this.onTouchMove,n),e.removeEventListener("mouseup",this.onTouchEnd,!1))}else r.removeEventListener(i.start,this.onTouchStart,!1),e.removeEventListener(i.move,this.onTouchMove,n),e.removeEventListener(i.end,this.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&r.removeEventListener("click",this.onClick,!0),this.off("resize observerUpdate",S)}},z={setBreakpoint:function(){var e=this.activeIndex,t=this.loopedSlides;void 0===t&&(t=0);var i=this.params,s=i.breakpoints;if(s&&(!s||0!==Object.keys(s).length)){var a=this.getBreakpoint(s);if(a&&this.currentBreakpoint!==a){var r=a in s?s[a]:this.originalParams,n=i.loop&&r.slidesPerView!==i.slidesPerView;d.extend(this.params,r),d.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=a,n&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-t+this.loopedSlides,0,!1)),this.emit("breakpoint",r)}}},getBreakpoint:function(e){if(e){var i=!1,s=[];Object.keys(e).forEach(function(e){s.push(e)}),s.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var a=0;a<s.length;a+=1){var r=s[a];r>=t.innerWidth&&!i&&(i=r)}return i||"max"}}},P=function(){return{isIE:!!t.navigator.userAgent.match(/Trident/g)||!!t.navigator.userAgent.match(/MSIE/g),isSafari:(e=t.navigator.userAgent.toLowerCase(),e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)};var e}();var k={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventIntercationOnTransition:!1,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},$={update:u,translate:v,transition:f,slide:m,loop:g,grabCursor:b,manipulation:w,events:M,breakpoints:z,checkOverflow:{checkOverflow:function(){var e=this.isLocked;this.isLocked=1===this.snapGrid.length,this.allowTouchMove=!this.isLocked,e&&e!==this.isLocked&&(this.isEnd=!1,this.navigation.update())}},classes:{addClasses:function(){var e=this.classNames,t=this.params,i=this.rtl,s=this.$el,a=[];a.push(t.direction),t.freeMode&&a.push("free-mode"),h.flexbox||a.push("no-flexbox"),t.autoHeight&&a.push("autoheight"),i&&a.push("rtl"),t.slidesPerColumn>1&&a.push("multirow"),y.android&&a.push("android"),y.ios&&a.push("ios"),P.isIE&&(h.pointerEvents||h.prefixedPointerEvents)&&a.push("wp8-"+t.direction),a.forEach(function(i){e.push(t.containerModifierClass+i)}),s.addClass(e.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,i,s,a,r,n){var o;function l(){n&&n()}e.complete&&r?l():i?((o=new t.Image).onload=l,o.onerror=l,a&&(o.sizes=a),s&&(o.srcset=s),i&&(o.src=i)):l()},preloadImages:function(){var e=this;function t(){void 0!==e&&null!==e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}}},L={},I=function(e){function t(){for(var i,a,r,n=[],o=arguments.length;o--;)n[o]=arguments[o];1===n.length&&n[0].constructor&&n[0].constructor===Object?a=n[0]:(i=(r=n)[0],a=r[1]);a||(a={}),a=d.extend({},a),i&&!a.el&&(a.el=i),e.call(this,a),Object.keys($).forEach(function(e){Object.keys($[e]).forEach(function(i){t.prototype[i]||(t.prototype[i]=$[e][i])})});var l=this;void 0===l.modules&&(l.modules={}),Object.keys(l.modules).forEach(function(e){var t=l.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if("object"!=typeof s)return;if(!(i in a&&"enabled"in s))return;!0===a[i]&&(a[i]={enabled:!0}),"object"!=typeof a[i]||"enabled"in a[i]||(a[i].enabled=!0),a[i]||(a[i]={enabled:!1})}});var p=d.extend({},k);l.useModulesParams(p),l.params=d.extend({},p,L,a),l.originalParams=d.extend({},l.params),l.passedParams=d.extend({},a),l.$=s;var c=s(l.params.el);if(i=c[0]){if(c.length>1){var u=[];return c.each(function(e,i){var s=d.extend({},a,{el:i});u.push(new t(s))}),u}i.swiper=l,c.data("swiper",l);var v,f,m=c.children("."+l.params.wrapperClass);return d.extend(l,{$el:c,el:i,$wrapperEl:m,wrapperEl:m[0],classNames:[],slides:s(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===l.params.direction},isVertical:function(){return"vertical"===l.params.direction},rtl:"horizontal"===l.params.direction&&("rtl"===i.dir.toLowerCase()||"rtl"===c.css("direction")),wrongRTL:"-webkit-box"===m.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,progress:0,velocity:0,animating:!1,allowSlideNext:l.params.allowSlideNext,allowSlidePrev:l.params.allowSlidePrev,touchEvents:(v=["touchstart","touchmove","touchend"],f=["mousedown","mousemove","mouseup"],h.pointerEvents?f=["pointerdown","pointermove","pointerup"]:h.prefixedPointerEvents&&(f=["MSPointerDown","MSPointerMove","MSPointerUp"]),l.touchEventsTouch={start:v[0],move:v[1],end:v[2]},l.touchEventsDesktop={start:f[0],move:f[1],end:f[2]},h.touch||!l.params.simulateTouch?l.touchEventsTouch:l.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:d.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:l.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),l.useModules(),l.params.init&&l.init(),l}}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var i={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return t.prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,a=this.activeIndex,r=1;if(e.centeredSlides){for(var n,o=t[a].swiperSlideSize,l=a+1;l<t.length;l+=1)t[l]&&!n&&(r+=1,(o+=t[l].swiperSlideSize)>s&&(n=!0));for(var d=a-1;d>=0;d-=1)t[d]&&!n&&(r+=1,(o+=t[d].swiperSlideSize)>s&&(n=!0))}else for(var h=a+1;h<t.length;h+=1)i[h]-i[a]<s&&(r+=1);return r},t.prototype.update=function(){var e=this;e&&!e.destroyed&&(e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(t(),e.params.autoHeight&&e.updateAutoHeight()):(("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||t(),e.emit("update"));function t(){var t=e.rtl?-1*e.translate:e.translate,i=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(i),e.updateActiveIndex(),e.updateSlidesClasses()}},t.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},t.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,a=i.$el,r=i.$wrapperEl,n=i.slides;i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),a.removeAttr("style"),r.removeAttr("style"),n&&n.length&&n.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),d.deleteProps(i)),i.destroyed=!0},t.extendDefaults=function(e){d.extend(L,e)},i.extendedDefaults.get=function(){return L},i.defaults.get=function(){return k},i.Class.get=function(){return e},i.$.get=function(){return s},Object.defineProperties(t,i),t}(p),D={name:"device",proto:{device:y},static:{device:y}},O={name:"support",proto:{support:h},static:{support:h}},A={name:"browser",proto:{browser:P},static:{browser:P}},H={name:"resize",create:function(){var e=this;d.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){t.addEventListener("resize",this.resize.resizeHandler),t.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){t.removeEventListener("resize",this.resize.resizeHandler),t.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},N={func:t.MutationObserver||t.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new(0,N.func)(function(e){e.forEach(function(e){i.emit("observerUpdate",e)})});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(h.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:!1}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},X={name:"observer",params:{observer:!1,observeParents:!1},create:function(){d.extend(this,{observer:{init:N.init.bind(this),attach:N.attach.bind(this),destroy:N.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},Y={update:function(e){var t=this,i=t.params,s=i.slidesPerView,a=i.slidesPerGroup,r=i.centeredSlides,n=t.virtual,o=n.from,l=n.to,h=n.slides,p=n.slidesGrid,c=n.renderSlide,u=n.offset;t.updateActiveIndex();var v,f,m,g=t.activeIndex||0;v=t.rtl&&t.isHorizontal()?"right":t.isHorizontal()?"left":"top",r?(f=Math.floor(s/2)+a,m=Math.floor(s/2)+a):(f=s+(a-1),m=a);var b=Math.max((g||0)-m,0),w=Math.min((g||0)+f,h.length-1),y=(t.slidesGrid[b]||0)-(t.slidesGrid[0]||0);function x(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(d.extend(t.virtual,{from:b,to:w,offset:y,slidesGrid:t.slidesGrid}),o===b&&l===w&&!e)return t.slidesGrid!==p&&y!==u&&t.slides.css(v,y+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:y,from:b,to:w,slides:function(){for(var e=[],t=b;t<=w;t+=1)e.push(h[t]);return e}()}),void x();var E=[],T=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var S=o;S<=l;S+=1)(S<b||S>w)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+S+'"]').remove();for(var C=0;C<h.length;C+=1)C>=b&&C<=w&&(void 0===l||e?T.push(C):(C>l&&T.push(C),C<o&&E.push(C)));T.forEach(function(e){t.$wrapperEl.append(c(h[e],e))}),E.sort(function(e,t){return e<t}).forEach(function(e){t.$wrapperEl.prepend(c(h[e],e))}),t.$wrapperEl.children(".swiper-slide").css(v,y+"px"),x()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var a=i.renderSlide?s(i.renderSlide.call(this,e,t)):s('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return a.attr("data-swiper-slide-index")||a.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=a),a},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){if(this.virtual.slides.unshift(e),this.params.virtual.cache){var t=this.virtual.cache,i={};Object.keys(t).forEach(function(e){i[e+1]=t[e]}),this.virtual.cache=i}this.virtual.update(!0),this.slideNext(0)}},B={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null}},create:function(){d.extend(this,{virtual:{update:Y.update.bind(this),appendSlide:Y.appendSlide.bind(this),prependSlide:Y.prependSlide.bind(this),renderSlide:Y.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};d.extend(this.params,e),d.extend(this.originalParams,e),this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},G={handle:function(i){var s=i;s.originalEvent&&(s=s.originalEvent);var a=s.keyCode||s.charCode;if(!this.allowSlideNext&&(this.isHorizontal()&&39===a||this.isVertical()&&40===a))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&37===a||this.isVertical()&&38===a))return!1;if(!(s.shiftKey||s.altKey||s.ctrlKey||s.metaKey||e.activeElement&&e.activeElement.nodeName&&("input"===e.activeElement.nodeName.toLowerCase()||"textarea"===e.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(37===a||39===a||38===a||40===a)){var r=!1;if(this.$el.parents("."+this.params.slideClass).length>0&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var n=t.innerWidth,o=t.innerHeight,l=this.$el.offset();this.rtl&&(l.left-=this.$el[0].scrollLeft);for(var d=[[l.left,l.top],[l.left+this.width,l.top],[l.left,l.top+this.height],[l.left+this.width,l.top+this.height]],h=0;h<d.length;h+=1){var p=d[h];p[0]>=0&&p[0]<=n&&p[1]>=0&&p[1]<=o&&(r=!0)}if(!r)return}this.isHorizontal()?(37!==a&&39!==a||(s.preventDefault?s.preventDefault():s.returnValue=!1),(39===a&&!this.rtl||37===a&&this.rtl)&&this.slideNext(),(37===a&&!this.rtl||39===a&&this.rtl)&&this.slidePrev()):(38!==a&&40!==a||(s.preventDefault?s.preventDefault():s.returnValue=!1),40===a&&this.slideNext(),38===a&&this.slidePrev()),this.emit("keyPress",a)}},enable:function(){this.keyboard.enabled||(s(e).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(s(e).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},V={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){d.extend(this,{keyboard:{enabled:!1,enable:G.enable.bind(this),disable:G.disable.bind(this),handle:G.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var R={lastScrollTime:d.now(),event:t.navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":function(){var t="onwheel"in e;if(!t){var i=e.createElement("div");i.setAttribute("onwheel","return;"),t="function"==typeof i.onwheel}return!t&&e.implementation&&e.implementation.hasFeature&&!0!==e.implementation.hasFeature("","")&&(t=e.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel",normalize:function(e){var t=0,i=0,s=0,a=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,a=10*i,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(s=e.deltaX),(s||a)&&e.deltaMode&&(1===e.deltaMode?(s*=40,a*=40):(s*=800,a*=800)),s&&!t&&(t=s<1?-1:1),a&&!i&&(i=a<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:a}},handle:function(e){var i=e,s=this,a=s.params.mousewheel;i.originalEvent&&(i=i.originalEvent);var r=0,n=s.rtl?-1:1,o=R.normalize(i);if(a.forceToAxis)if(s.isHorizontal()){if(!(Math.abs(o.pixelX)>Math.abs(o.pixelY)))return!0;r=o.pixelX*n}else{if(!(Math.abs(o.pixelY)>Math.abs(o.pixelX)))return!0;r=o.pixelY}else r=Math.abs(o.pixelX)>Math.abs(o.pixelY)?-o.pixelX*n:-o.pixelY;if(0===r)return!0;if(a.invert&&(r=-r),s.params.freeMode){var l=s.getTranslate()+r*a.sensitivity,h=s.isBeginning,p=s.isEnd;if(l>=s.minTranslate()&&(l=s.minTranslate()),l<=s.maxTranslate()&&(l=s.maxTranslate()),s.setTransition(0),s.setTranslate(l),s.updateProgress(),s.updateActiveIndex(),s.updateSlidesClasses(),(!h&&s.isBeginning||!p&&s.isEnd)&&s.updateSlidesClasses(),s.params.freeModeSticky&&(clearTimeout(s.mousewheel.timeout),s.mousewheel.timeout=d.nextTick(function(){s.slideReset()},300)),s.emit("scroll",i),s.params.autoplay&&s.params.autoplayDisableOnInteraction&&s.stopAutoplay(),l===s.minTranslate()||l===s.maxTranslate())return!0}else{if(d.now()-s.mousewheel.lastScrollTime>60)if(r<0)if(s.isEnd&&!s.params.loop||s.animating){if(a.releaseOnEdges)return!0}else s.slideNext(),s.emit("scroll",i);else if(s.isBeginning&&!s.params.loop||s.animating){if(a.releaseOnEdges)return!0}else s.slidePrev(),s.emit("scroll",i);s.mousewheel.lastScrollTime=(new t.Date).getTime()}return i.preventDefault?i.preventDefault():i.returnValue=!1,!1},enable:function(){if(!R.event)return!1;if(this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=s(this.params.mousewheel.eventsTarged)),e.on(R.event,this.mousewheel.handle),this.mousewheel.enabled=!0,!0},disable:function(){if(!R.event)return!1;if(!this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=s(this.params.mousewheel.eventsTarged)),e.off(R.event,this.mousewheel.handle),this.mousewheel.enabled=!1,!0}},F={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&s.length>0&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&i.length>0&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},init:function(){var e,t,i=this,a=i.params.navigation;(a.nextEl||a.prevEl)&&(a.nextEl&&(e=s(a.nextEl),i.params.uniqueNavElements&&"string"==typeof a.nextEl&&e.length>1&&1===i.$el.find(a.nextEl).length&&(e=i.$el.find(a.nextEl))),a.prevEl&&(t=s(a.prevEl),i.params.uniqueNavElements&&"string"==typeof a.prevEl&&t.length>1&&1===i.$el.find(a.prevEl).length&&(t=i.$el.find(a.prevEl))),e&&e.length>0&&e.on("click",function(e){e.preventDefault(),i.isEnd&&!i.params.loop||i.slideNext()}),t&&t.length>0&&t.on("click",function(e){e.preventDefault(),i.isBeginning&&!i.params.loop||i.slidePrev()}),d.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click"),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click"),i.removeClass(this.params.navigation.disabledClass))}},W={update:function(){var e=this.rtl,t=this.params.pagination;if(t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var i,a=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,r=this.pagination.$el,n=this.params.loop?Math.ceil((a-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((i=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>a-1-2*this.loopedSlides&&(i-=a-2*this.loopedSlides),i>n-1&&(i-=n),i<0&&"bullets"!==this.params.paginationType&&(i=n+i)):i=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===t.type&&this.pagination.bullets&&this.pagination.bullets.length>0){var o,l,d,h=this.pagination.bullets;if(t.dynamicBullets&&(this.pagination.bulletSize=h.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),r.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(t.dynamicMainBullets+4)+"px"),t.dynamicMainBullets>1&&void 0!==this.previousIndex&&(i>this.previousIndex&&this.pagination.dynamicBulletIndex<t.dynamicMainBullets-1?this.pagination.dynamicBulletIndex+=1:i<this.previousIndex&&this.pagination.dynamicBulletIndex>0&&(this.pagination.dynamicBulletIndex-=1)),o=i-this.pagination.dynamicBulletIndex,d=((l=o+(t.dynamicMainBullets-1))+o)/2),h.removeClass(t.bulletActiveClass+" "+t.bulletActiveClass+"-next "+t.bulletActiveClass+"-next-next "+t.bulletActiveClass+"-prev "+t.bulletActiveClass+"-prev-prev "+t.bulletActiveClass+"-main"),r.length>1)h.each(function(e,a){var r=s(a),n=r.index();n===i&&r.addClass(t.bulletActiveClass),t.dynamicBullets&&(n>=o&&n<=l&&r.addClass(t.bulletActiveClass+"-main"),n===o&&r.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),n===l&&r.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next"))});else if(h.eq(i).addClass(t.bulletActiveClass),t.dynamicBullets){for(var p=h.eq(o),c=h.eq(l),u=o;u<=l;u+=1)h.eq(u).addClass(t.bulletActiveClass+"-main");p.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),c.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next")}if(t.dynamicBullets){var v=Math.min(h.length,t.dynamicMainBullets+4),f=(this.pagination.bulletSize*v-this.pagination.bulletSize)/2-d*this.pagination.bulletSize,m=e?"right":"left";h.css(this.isHorizontal()?m:"top",f+"px")}}if("fraction"===t.type&&(r.find("."+t.currentClass).text(i+1),r.find("."+t.totalClass).text(n)),"progressbar"===t.type){var g=(i+1)/n,b=g,w=1;this.isHorizontal()||(w=g,b=1),r.find("."+t.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+b+") scaleY("+w+")").transition(this.params.speed)}"custom"===t.type&&t.renderCustom?(r.html(t.renderCustom(this,i+1,n)),this.emit("paginationRender",this,r[0])):this.emit("paginationUpdate",this,r[0]),r[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](t.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s="";if("bullets"===e.type){for(var a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,r=0;r<a;r+=1)e.renderBullet?s+=e.renderBullet.call(this,r,e.bulletClass):s+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(s),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(s)),"progressbar"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(s)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e=this,t=e.params.pagination;if(t.el){var i=s(t.el);0!==i.length&&(e.params.uniqueNavElements&&"string"==typeof t.el&&i.length>1&&1===e.$el.find(t.el).length&&(i=e.$el.find(t.el)),"bullets"===t.type&&t.clickable&&i.addClass(t.clickableClass),i.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(i.addClass(""+t.modifierClass+t.type+"-dynamic"),e.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),t.clickable&&i.on("click","."+t.bulletClass,function(t){t.preventDefault();var i=s(this).index()*e.params.slidesPerGroup;e.params.loop&&(i+=e.loopedSlides),e.slideTo(i)}),d.extend(e.pagination,{$el:i,el:i[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},q={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtl,i=this.progress,s=e.dragSize,a=e.trackSize,r=e.$dragEl,n=e.$el,o=this.params.scrollbar,l=s,d=(a-s)*i;t&&this.isHorizontal()?(d=-d)>0?(l=s-d,d=0):-d+s>a&&(l=a+d):d<0?(l=s+d,d=0):d+s>a&&(l=a-d),this.isHorizontal()?(h.transforms3d?r.transform("translate3d("+d+"px, 0, 0)"):r.transform("translateX("+d+"px)"),r[0].style.width=l+"px"):(h.transforms3d?r.transform("translate3d(0px, "+d+"px, 0)"):r.transform("translateY("+d+"px)"),r[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),n[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){n[0].style.opacity=0,n.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var s,a=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,r=this.size/this.virtualSize,n=r*(a/this.size);s="auto"===this.params.scrollbar.dragSize?a*r:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+"px":t[0].style.height=s+"px",i[0].style.display=r>=1?"none":"",this.params.scrollbarHide&&(i[0].style.opacity=0),d.extend(e,{trackSize:a,divider:r,moveDivider:n,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},setDragPosition:function(e){var t,i=this.scrollbar,s=i.$el,a=i.dragSize,r=i.trackSize;t=((this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-s.offset()[this.isHorizontal()?"left":"top"]-a/2)/(r-a),t=Math.max(Math.min(t,1),0),this.rtl&&(t=1-t);var n=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(n),this.setTranslate(n),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el,r=i.$dragEl;this.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),s.transition(100),r.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),a.transition(0),t.hide&&a.css("opacity",1),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),a.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=d.nextTick(function(){i.css("opacity",0),i.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideReset())},enableDraggable:function(){if(this.params.scrollbar.el){var t=this.scrollbar,i=this.touchEvents,s=this.touchEventsDesktop,a=this.params,r=t.$el[0],n=!(!h.passiveListener||!a.passiveListener)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListener)&&{passive:!0,capture:!1};h.touch||!h.pointerEvents&&!h.prefixedPointerEvents?(h.touch&&(r.addEventListener(i.start,this.scrollbar.onDragStart,n),r.addEventListener(i.move,this.scrollbar.onDragMove,n),r.addEventListener(i.end,this.scrollbar.onDragEnd,o)),(a.simulateTouch&&!y.ios&&!y.android||a.simulateTouch&&!h.touch&&y.ios)&&(r.addEventListener("mousedown",this.scrollbar.onDragStart,n),e.addEventListener("mousemove",this.scrollbar.onDragMove,n),e.addEventListener("mouseup",this.scrollbar.onDragEnd,o))):(r.addEventListener(s.start,this.scrollbar.onDragStart,n),e.addEventListener(s.move,this.scrollbar.onDragMove,n),e.addEventListener(s.end,this.scrollbar.onDragEnd,o))}},disableDraggable:function(){if(this.params.scrollbar.el){var t=this.scrollbar,i=this.touchEvents,s=this.touchEventsDesktop,a=this.params,r=t.$el[0],n=!(!h.passiveListener||!a.passiveListener)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListener)&&{passive:!0,capture:!1};h.touch||!h.pointerEvents&&!h.prefixedPointerEvents?(h.touch&&(r.removeEventListener(i.start,this.scrollbar.onDragStart,n),r.removeEventListener(i.move,this.scrollbar.onDragMove,n),r.removeEventListener(i.end,this.scrollbar.onDragEnd,o)),(a.simulateTouch&&!y.ios&&!y.android||a.simulateTouch&&!h.touch&&y.ios)&&(r.removeEventListener("mousedown",this.scrollbar.onDragStart,n),e.removeEventListener("mousemove",this.scrollbar.onDragMove,n),e.removeEventListener("mouseup",this.scrollbar.onDragEnd,o))):(r.removeEventListener(s.start,this.scrollbar.onDragStart,n),e.removeEventListener(s.move,this.scrollbar.onDragMove,n),e.removeEventListener(s.end,this.scrollbar.onDragEnd,o))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,a=s(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&a.length>1&&1===t.find(i.el).length&&(a=t.find(i.el));var r=a.find("."+this.params.scrollbar.dragClass);0===r.length&&(r=s('<div class="'+this.params.scrollbar.dragClass+'"></div>'),a.append(r)),d.extend(e,{$el:a,el:a[0],$dragEl:r,dragEl:r[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},j={setTransform:function(e,t){var i=this.rtl,a=s(e),r=i?-1:1,n=a.attr("data-swiper-parallax")||"0",o=a.attr("data-swiper-parallax-x"),l=a.attr("data-swiper-parallax-y"),d=a.attr("data-swiper-parallax-scale"),h=a.attr("data-swiper-parallax-opacity");if(o||l?(o=o||"0",l=l||"0"):this.isHorizontal()?(o=n,l="0"):(l=n,o="0"),o=o.indexOf("%")>=0?parseInt(o,10)*t*r+"%":o*t*r+"px",l=l.indexOf("%")>=0?parseInt(l,10)*t+"%":l*t+"px",void 0!==h&&null!==h){var p=h-(h-1)*(1-Math.abs(t));a[0].style.opacity=p}if(void 0===d||null===d)a.transform("translate3d("+o+", "+l+", 0px)");else{var c=d-(d-1)*(1-Math.abs(t));a.transform("translate3d("+o+", "+l+", 0px) scale("+c+")")}},setTranslate:function(){var e=this,t=e.$el,i=e.slides,a=e.progress,r=e.snapGrid;t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){e.parallax.setTransform(i,a)}),i.each(function(t,i){var n=i.progress;e.params.slidesPerGroup>1&&"auto"!==e.params.slidesPerView&&(n+=Math.ceil(t/2)-a*(r.length-1)),n=Math.min(Math.max(n,-1),1),s(i).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){e.parallax.setTransform(i,n)})})},setTransition:function(e){void 0===e&&(e=this.params.speed);this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){var a=s(i),r=parseInt(a.attr("data-swiper-parallax-duration"),10)||e;0===e&&(r=0),a.transition(r)})}},K={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(a-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,a=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!h.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,a.scaleStart=K.getDistanceBetweenTouches(e)}a.$slideEl&&a.$slideEl.length||(a.$slideEl=s(e.target).closest(".swiper-slide"),0===a.$slideEl.length&&(a.$slideEl=this.slides.eq(this.activeIndex)),a.$imageEl=a.$slideEl.find("img, svg, canvas"),a.$imageWrapEl=a.$imageEl.parent("."+t.containerClass),a.maxRatio=a.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==a.$imageWrapEl.length)?(a.$imageEl.transition(0),this.zoom.isScaling=!0):a.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=K.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(h.gestures?this.zoom.scale=e.scale*i.currentScale:i.scale=s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!y.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(y.android&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,a=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=d.getTranslate(i.$imageWrapEl[0],"x")||0,s.startY=d.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX),this.rtl&&(s.startY=-s.startY));var r=s.width*t.scale,n=s.height*t.scale;if(!(r<i.slideWidth&&n<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-r/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-n/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=s.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=s.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(s.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(s.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(s.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(s.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=s.touchesCurrent.x,a.prevPositionY=s.touchesCurrent.y,a.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var a=300,r=300,n=s.x*a,o=i.currentX+n,l=s.y*r,d=i.currentY+l;0!==s.x&&(a=Math.abs((o-i.currentX)/s.x)),0!==s.y&&(r=Math.abs((d-i.currentY)/s.y));var h=Math.max(a,r);i.currentX=o,i.currentY=d;var p=i.width*e.scale,c=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-p/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-c/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0,e.scale=1,e.currentScale=1)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,a,r,n,o,l,d,h,p,c,u,v,f,m,g,b=this.zoom,w=this.params.zoom,y=b.gesture,x=b.image;(y.$slideEl||(y.$slideEl=this.clickedSlide?s(this.clickedSlide):this.slides.eq(this.activeIndex),y.$imageEl=y.$slideEl.find("img, svg, canvas"),y.$imageWrapEl=y.$imageEl.parent("."+w.containerClass)),y.$imageEl&&0!==y.$imageEl.length)&&(y.$slideEl.addClass(""+w.zoomedSlideClass),void 0===x.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,i="touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=x.touchesStart.x,i=x.touchesStart.y),b.scale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,b.currentScale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,e?(m=y.$slideEl[0].offsetWidth,g=y.$slideEl[0].offsetHeight,a=y.$slideEl.offset().left+m/2-t,r=y.$slideEl.offset().top+g/2-i,l=y.$imageEl[0].offsetWidth,d=y.$imageEl[0].offsetHeight,h=l*b.scale,p=d*b.scale,v=-(c=Math.min(m/2-h/2,0)),f=-(u=Math.min(g/2-p/2,0)),n=a*b.scale,o=r*b.scale,n<c&&(n=c),n>v&&(n=v),o<u&&(o=u),o>f&&(o=f)):(n=0,o=0),y.$imageWrapEl.transition(300).transform("translate3d("+n+"px, "+o+"px,0)"),y.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+b.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(i.$slideEl=this.clickedSlide?s(this.clickedSlide):this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!("touchstart"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1};h.gestures?(this.$wrapperEl.on("gesturestart",".swiper-slide",e.onGestureStart,t),this.$wrapperEl.on("gesturechange",".swiper-slide",e.onGestureChange,t),this.$wrapperEl.on("gestureend",".swiper-slide",e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,".swiper-slide",e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,".swiper-slide",e.onGestureChange,t),this.$wrapperEl.on(this.touchEvents.end,".swiper-slide",e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!("touchstart"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1};h.gestures?(this.$wrapperEl.off("gesturestart",".swiper-slide",e.onGestureStart,t),this.$wrapperEl.off("gesturechange",".swiper-slide",e.onGestureChange,t),this.$wrapperEl.off("gestureend",".swiper-slide",e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,".swiper-slide",e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,".swiper-slide",e.onGestureChange,t),this.$wrapperEl.off(this.touchEvents.end,".swiper-slide",e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove)}}},U={loadInSlide:function(e,t){void 0===t&&(t=!0);var i=this,a=i.params.lazy;if(void 0!==e&&0!==i.slides.length){var r=i.virtual&&i.params.virtual.enabled?i.$wrapperEl.children("."+i.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):i.slides.eq(e),n=r.find("."+a.elementClass+":not(."+a.loadedClass+"):not(."+a.loadingClass+")");!r.hasClass(a.elementClass)||r.hasClass(a.loadedClass)||r.hasClass(a.loadingClass)||(n=n.add(r[0])),0!==n.length&&n.each(function(e,n){var o=s(n);o.addClass(a.loadingClass);var l=o.attr("data-background"),d=o.attr("data-src"),h=o.attr("data-srcset"),p=o.attr("data-sizes");i.loadImage(o[0],d||l,h,p,!1,function(){if(void 0!==i&&null!==i&&i&&(!i||i.params)&&!i.destroyed){if(l?(o.css("background-image",'url("'+l+'")'),o.removeAttr("data-background")):(h&&(o.attr("srcset",h),o.removeAttr("data-srcset")),p&&(o.attr("sizes",p),o.removeAttr("data-sizes")),d&&(o.attr("src",d),o.removeAttr("data-src"))),o.addClass(a.loadedClass).removeClass(a.loadingClass),r.find("."+a.preloaderClass).remove(),i.params.loop&&t){var e=r.attr("data-swiper-slide-index");if(r.hasClass(i.params.slideDuplicateClass)){var s=i.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+i.params.slideDuplicateClass+")");i.lazy.loadInSlide(s.index(),!1)}else{var n=i.$wrapperEl.children("."+i.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');i.lazy.loadInSlide(n.index(),!1)}}i.emit("lazyImageReady",r[0],o[0])}}),i.emit("lazyImageLoad",r[0],o[0])})}},load:function(){var e=this,t=e.$wrapperEl,i=e.params,a=e.slides,r=e.activeIndex,n=e.virtual&&i.virtual.enabled,o=i.lazy,l=i.slidesPerView;function d(e){if(n){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(a[e])return!0;return!1}function h(e){return n?s(e).attr("data-swiper-slide-index"):s(e).index()}if("auto"===l&&(l=0),e.lazy.initialImageLoaded||(e.lazy.initialImageLoaded=!0),e.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(t,i){var a=n?s(i).attr("data-swiper-slide-index"):s(i).index();e.lazy.loadInSlide(a)});else if(l>1)for(var p=r;p<r+l;p+=1)d(p)&&e.lazy.loadInSlide(p);else e.lazy.loadInSlide(r);if(o.loadPrevNext)if(l>1||o.loadPrevNextAmount&&o.loadPrevNextAmount>1){for(var c=o.loadPrevNextAmount,u=l,v=Math.min(r+u+Math.max(c,u),a.length),f=Math.max(r-Math.max(u,c),0),m=r+l;m<v;m+=1)d(m)&&e.lazy.loadInSlide(m);for(var g=f;g<r;g+=1)d(g)&&e.lazy.loadInSlide(g)}else{var b=t.children("."+i.slideNextClass);b.length>0&&e.lazy.loadInSlide(h(b));var w=t.children("."+i.slidePrevClass);w.length>0&&e.lazy.loadInSlide(h(w))}}},_={LinearSpline:function(e,t){var i,s,a,r,n,o=function(e,t){for(s=-1,i=e.length;i-s>1;)e[a=i+s>>1]<=t?s=a:i=a;return i};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(n=o(this.x,e),r=n-1,(e-this.x[r])*(this.y[n]-this.y[r])/(this.x[n]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new _.LinearSpline(this.slidesGrid,e.slidesGrid):new _.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,a=this,r=a.controller.control;function n(e){var t=e.rtl&&"horizontal"===e.params.direction?-a.translate:a.translate;"slide"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),s=-a.controller.spline.interpolate(-t)),s&&"container"!==a.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),s=(t-a.minTranslate())*i+e.minTranslate()),a.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var o=0;o<r.length;o+=1)r[o]!==t&&r[o]instanceof I&&n(r[o]);else r instanceof I&&t!==r&&n(r)},setTransition:function(e,t){var i,s=this,a=s.controller.control;function r(t){t.setTransition(e,s),0!==e&&(t.transitionStart(),t.$wrapperEl.transitionEnd(function(){a&&(t.params.loop&&"slide"===s.params.controller.by&&t.loopFix(),t.transitionEnd())}))}if(Array.isArray(a))for(i=0;i<a.length;i+=1)a[i]!==t&&a[i]instanceof I&&r(a[i]);else a instanceof I&&t!==a&&r(a)}},Z={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=s(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&i.length>0&&(this.isBeginning?this.a11y.disableEl(i):this.a11y.enableEl(i)),t&&t.length>0&&(this.isEnd?this.a11y.disableEl(t):this.a11y.enableEl(t))}},updatePagination:function(){var e=this,t=e.params.a11y;e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.bullets.each(function(i,a){var r=s(a);e.a11y.makeElFocusable(r),e.a11y.addElRole(r,"button"),e.a11y.addElLabel(r,t.paginationBulletMessage.replace(/{{index}}/,r.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&this.a11y.liveRegion.length>0&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},Q={init:function(){if(this.params.history){if(!t.history||!t.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=Q.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||t.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||t.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=Q.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=t.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),i=e.length;return{key:e[i-2],value:e[i-1]}},setHistory:function(e,i){if(this.history.initialized&&this.params.history.enabled){var s=this.slides.eq(i),a=Q.slugify(s.attr("data-history"));t.location.pathname.includes(e)||(a=e+"/"+a);var r=t.history.state;r&&r.value===a||(this.params.history.replaceState?t.history.replaceState({value:a},null,a):t.history.pushState({value:a},null,a))}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var s=0,a=this.slides.length;s<a;s+=1){var r=this.slides.eq(s);if(Q.slugify(r.attr("data-history"))===t&&!r.hasClass(this.params.slideDuplicateClass)){var n=r.index();this.slideTo(n,e,i)}}else this.slideTo(0,e,i)}},J={onHashCange:function(){var t=e.location.hash.replace("#","");t!==this.slides.eq(this.activeIndex).attr("data-hash")&&this.slideTo(this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+t+'"]').index())},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&t.history&&t.history.replaceState)t.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||"");else{var i=this.slides.eq(this.activeIndex),s=i.attr("data-hash")||i.attr("data-history");e.location.hash=s||""}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var i=e.location.hash.replace("#","");if(i)for(var a=0,r=this.slides.length;a<r;a+=1){var n=this.slides.eq(a);if((n.attr("data-hash")||n.attr("data-history"))===i&&!n.hasClass(this.params.slideDuplicateClass)){var o=n.index();this.slideTo(o,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&s(t).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&s(t).off("hashchange",this.hashNavigation.onHashCange)}},ee={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=d.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){return void 0===this.autoplay.timeout&&(!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0))},stop:function(){return!!this.autoplay.running&&(void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0))},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?t.$wrapperEl.transitionEnd(function(){t&&!t.destroyed&&(t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}):(t.autoplay.paused=!1,t.autoplay.run())))}},te={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var a=0;this.isHorizontal()||(a=s,s=0);var r=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:r}).transform("translate3d("+s+"px, "+a+"px, 0px)")}},setTransition:function(e){var t=this,i=t.slides,s=t.$wrapperEl;if(i.transition(e),t.params.virtualTranslate&&0!==e){var a=!1;i.transitionEnd(function(){if(!a&&t&&!t.destroyed){a=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)s.trigger(e[i])}})}}},ie={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,a=this.slides,r=this.width,n=this.height,o=this.rtl,l=this.size,d=this.params.cubeEffect,h=this.isHorizontal(),p=this.virtual&&this.params.virtual.enabled,c=0;d.shadow&&(h?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=s('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:r+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=s('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var u=0;u<a.length;u+=1){var v=a.eq(u),f=u;p&&(f=parseInt(v.attr("data-swiper-slide-index"),10));var m=90*f,g=Math.floor(m/360);o&&(m=-m,g=Math.floor(-m/360));var b=Math.max(Math.min(v[0].progress,1),-1),w=0,y=0,x=0;f%4==0?(w=4*-g*l,x=0):(f-1)%4==0?(w=0,x=4*-g*l):(f-2)%4==0?(w=l+4*g*l,x=l):(f-3)%4==0&&(w=-l,x=3*l+4*l*g),o&&(w=-w),h||(y=w,w=0);var E="rotateX("+(h?0:-m)+"deg) rotateY("+(h?m:0)+"deg) translate3d("+w+"px, "+y+"px, "+x+"px)";if(b<=1&&b>-1&&(c=90*f+90*b,o&&(c=90*-f-90*b)),v.transform(E),d.slideShadows){var T=h?v.find(".swiper-slide-shadow-left"):v.find(".swiper-slide-shadow-top"),S=h?v.find(".swiper-slide-shadow-right"):v.find(".swiper-slide-shadow-bottom");0===T.length&&(T=s('<div class="swiper-slide-shadow-'+(h?"left":"top")+'"></div>'),v.append(T)),0===S.length&&(S=s('<div class="swiper-slide-shadow-'+(h?"right":"bottom")+'"></div>'),v.append(S)),T.length&&(T[0].style.opacity=Math.max(-b,0)),S.length&&(S[0].style.opacity=Math.max(b,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow)if(h)e.transform("translate3d(0px, "+(r/2+d.shadowOffset)+"px, "+-r/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")");else{var C=Math.abs(c)-90*Math.floor(Math.abs(c)/90),M=1.5-(Math.sin(2*C*Math.PI/360)/2+Math.cos(2*C*Math.PI/360)/2),z=d.shadowScale,k=d.shadowScale/M,$=d.shadowOffset;e.transform("scale3d("+z+", 1, "+k+") translate3d(0px, "+(n/2+$)+"px, "+-n/2/k+"px) rotateX(-90deg)")}var L=P.isSafari||P.isUiWebView?-l/2:0;i.transform("translate3d(0px,0,"+L+"px) rotateX("+(this.isHorizontal()?0:c)+"deg) rotateY("+(this.isHorizontal()?-c:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},se={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=e.eq(t),a=i[0].progress;this.params.flipEffect.limitRotation&&(a=Math.max(Math.min(i[0].progress,1),-1));var r=-180*a,n=0,o=-i[0].swiperSlideOffset,l=0;if(this.isHorizontal()?this.rtl&&(r=-r):(l=o,o=0,n=-r,r=0),i[0].style.zIndex=-Math.abs(Math.round(a))+e.length,this.params.flipEffect.slideShadows){var d=this.isHorizontal()?i.find(".swiper-slide-shadow-left"):i.find(".swiper-slide-shadow-top"),h=this.isHorizontal()?i.find(".swiper-slide-shadow-right"):i.find(".swiper-slide-shadow-bottom");0===d.length&&(d=s('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),i.append(d)),0===h.length&&(h=s('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),i.append(h)),d.length&&(d[0].style.opacity=Math.max(-a,0)),h.length&&(h[0].style.opacity=Math.max(a,0))}i.transform("translate3d("+o+"px, "+l+"px, 0px) rotateX("+n+"deg) rotateY("+r+"deg)")}},setTransition:function(e){var t=this,i=t.slides,s=t.activeIndex,a=t.$wrapperEl;if(i.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),t.params.virtualTranslate&&0!==e){var r=!1;i.eq(s).transitionEnd(function(){if(!r&&t&&!t.destroyed){r=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)a.trigger(e[i])}})}}},ae={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,a=this.$wrapperEl,r=this.slidesSizesGrid,n=this.params.coverflowEffect,o=this.isHorizontal(),l=this.translate,d=o?e/2-l:t/2-l,p=o?n.rotate:-n.rotate,c=n.depth,u=0,v=i.length;u<v;u+=1){var f=i.eq(u),m=r[u],g=(d-f[0].swiperSlideOffset-m/2)/m*n.modifier,b=o?p*g:0,w=o?0:p*g,y=-c*Math.abs(g),x=o?0:n.stretch*g,E=o?n.stretch*g:0;Math.abs(E)<.001&&(E=0),Math.abs(x)<.001&&(x=0),Math.abs(y)<.001&&(y=0),Math.abs(b)<.001&&(b=0),Math.abs(w)<.001&&(w=0);var T="translate3d("+E+"px,"+x+"px,"+y+"px)  rotateX("+w+"deg) rotateY("+b+"deg)";if(f.transform(T),f[0].style.zIndex=1-Math.abs(Math.round(g)),n.slideShadows){var S=o?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=o?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===S.length&&(S=s('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),f.append(S)),0===C.length&&(C=s('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),f.append(C)),S.length&&(S[0].style.opacity=g>0?g:0),C.length&&(C[0].style.opacity=-g>0?-g:0)}}(h.pointerEvents||h.prefixedPointerEvents)&&(a[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},re=[D,O,A,H,X,B,V,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){d.extend(this,{mousewheel:{enabled:!1,enable:R.enable.bind(this),disable:R.disable.bind(this),handle:R.handle.bind(this),lastScrollTime:d.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){d.extend(this,{navigation:{init:F.init.bind(this),update:F.update.bind(this),destroy:F.destroy.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t=this.navigation,i=t.$nextEl,a=t.$prevEl;!this.params.navigation.hideOnClick||s(e.target).is(a)||s(e.target).is(i)||(i&&i.toggleClass(this.params.navigation.hiddenClass),a&&a.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){d.extend(this,{pagination:{init:W.init.bind(this),render:W.render.bind(this),update:W.update.bind(this),destroy:W.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){this.params.loop?this.pagination.update():void 0===this.snapIndex&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&this.pagination.$el.length>0&&!s(e.target).hasClass(this.params.pagination.bulletClass)&&this.pagination.$el.toggleClass(this.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){d.extend(this,{scrollbar:{init:q.init.bind(this),destroy:q.destroy.bind(this),updateSize:q.updateSize.bind(this),setTranslate:q.setTranslate.bind(this),setTransition:q.setTransition.bind(this),enableDraggable:q.enableDraggable.bind(this),disableDraggable:q.disableDraggable.bind(this),setDragPosition:q.setDragPosition.bind(this),onDragStart:q.onDragStart.bind(this),onDragMove:q.onDragMove.bind(this),onDragEnd:q.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){d.extend(this,{parallax:{setTransform:j.setTransform.bind(this),setTranslate:j.setTranslate.bind(this),setTransition:j.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0)},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var e=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(i){t[i]=K[i].bind(e)}),d.extend(e,{zoom:t})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){d.extend(this,{lazy:{initialImageLoaded:!1,load:U.load.bind(this),loadInSlide:U.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){d.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:_.getInterpolateFunction.bind(this),setTranslate:_.setTranslate.bind(this),setTransition:_.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!1,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var e=this;d.extend(e,{a11y:{liveRegion:s('<span class="'+e.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(Z).forEach(function(t){e.a11y[t]=Z[t].bind(e)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){d.extend(this,{history:{init:Q.init.bind(this),setHistory:Q.setHistory.bind(this),setHistoryPopState:Q.setHistoryPopState.bind(this),scrollToSlide:Q.scrollToSlide.bind(this),destroy:Q.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){d.extend(this,{hashNavigation:{initialized:!1,init:J.init.bind(this),destroy:J.destroy.bind(this),setHash:J.setHash.bind(this),onHashCange:J.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){d.extend(this,{autoplay:{running:!1,paused:!1,run:ee.run.bind(this),start:ee.start.bind(this),stop:ee.stop.bind(this),pause:ee.pause.bind(this)}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){d.extend(this,{fadeEffect:{setTranslate:te.setTranslate.bind(this),setTransition:te.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){d.extend(this,{cubeEffect:{setTranslate:ie.setTranslate.bind(this),setTransition:ie.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){d.extend(this,{flipEffect:{setTranslate:se.setTranslate.bind(this),setTransition:se.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){d.extend(this,{coverflowEffect:{setTranslate:ae.setTranslate.bind(this),setTransition:ae.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}}];return void 0===I.use&&(I.use=I.Class.use,I.installModule=I.Class.installModule),I.use(re),I});//# sourceMappingURL=swiper.min.js.map]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>视频</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
